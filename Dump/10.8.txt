/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma mark Named Structures

struct AEDesc {
    unsigned int _field1;
    struct OpaqueAEDataStorageType **_field2;
};

struct CGImage;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSRegionObject;

struct CGSize {
    double width;
    double height;
};

struct ColumnDesc;

struct DataBrowserItemSpatialData {
    int _field1;
    int _field2;
    int _field3;
    short _field4;
};

struct DesktopIconSpatialData {
    unsigned int _field1;
    unsigned short _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    short _field8;
};

struct DisplayList {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> __end_cap_;
};

struct DragTarget {
    unsigned int _field1;
    int _field2;
    unsigned int _field3;
};

struct FSPermissionInfo {
    unsigned int userID;
    unsigned int groupID;
    unsigned char reserved1;
    unsigned char userAccess;
    unsigned short mode;
    struct __FSFileSecurity *fileSec;
};

struct FSRef {
    unsigned char _field1[80];
};

struct FolderContentChangeDecriptor {
    struct TFENode *_field1;
    struct TFENodeVector *_field2;
    struct TFENodeVector *_field3;
    struct TGroupedNodes *_field4;
    id _field5;
    _Bool _field6;
};

struct HFSUniStr255 {
    unsigned short length;
    unsigned short unicode[255];
};

struct IAsyncChooseAppBinder {
    void **_field1;
};

struct IBaseQueueStyle<TFENode>;

struct IBaseQueueStyle<TNSRef<TQueuedPopoverController *>>;

struct ICarbonEventFilter;

struct IMeetingRoomBaseOperationController {
    void **_field1;
    struct TMutex _field2;
    struct TRef<__NWOperation *, TRetainReleasePolicy<NWOperationRef>> _field3;
    struct TString _field4;
    long long _field5;
    long long _field6;
    id _field7;
    unsigned long long _field8;
    struct TMutex _field9;
    struct TNSRef<NSDictionary *> _field10;
    struct TString _field11;
};

struct IPrefsObserver {
    void **_field1;
    struct TNSRef<TPrefsObserverBridge *> _field2;
};

struct ISpawnOrigin {
    void **_field1;
    struct TFENode _field2;
    id _field3;
    unsigned long long _field4;
};

struct NodeEventReply {
    struct OpaqueMPSemaphoreID *_field1;
    unsigned int _field2;
    int _field3;
};

struct NodeNameSyntaxHint {
    unsigned int _field1;
    unsigned int _field2;
    unsigned char _field3;
};

struct OpaqueAEDataStorageType;

struct OpaqueCoreDrag {
    unsigned int _field1;
    unsigned int _field2;
    struct DragTarget _field3;
    struct DragTarget _field4;
    struct CGPoint _field5;
    struct CGPoint _field6;
    struct CGPoint _field7;
    struct CGPoint _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    struct AEDesc _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    struct CGPoint _field22;
    unsigned char _field23;
    struct CGSRegionObject *_field24;
    struct CGPoint _field25;
    void *_field26;
    void *_field27;
    void *_field28;
    struct CGRect _field29;
    struct CGRect _field30;
    short _field31;
    short _field32;
    short _field33;
    short _field34;
    struct __CFRunLoopTimer *_field35;
    struct __CFRunLoopTimer *_field36;
    struct __CFRunLoopTimer *_field37;
    double _field38;
    float _field39;
    double _field40;
    int _field41;
    unsigned int _field42;
    struct CGPoint _field43;
    struct __CFString *_field44;
    struct __CFDictionary *_field45;
    struct __CFDictionary *_field46;
    void *_field47;
    void *_field48;
    void *_field49;
    unsigned int _field50;
    struct OpaquePasteboardRef *_field51;
    struct OpaqueCoreDrag *_field52;
    struct __CFString *_field53;
    unsigned int _field54;
    void *_field55;
    void *_field56;
    long long _field57;
    struct __CFDictionary *_field58;
    struct __CFDictionary *_field59;
};

struct OpaqueEventHandlerCallRef;

struct OpaqueEventNotifier;

struct OpaqueEventQueue;

struct OpaqueIconRef;

struct OpaqueLSSharedFileListItemRef;

struct OpaqueLSSharedFileListRef;

struct OpaqueMPSemaphoreID;

struct OpaqueMonitorData;

struct OpaqueNodeRef;

struct OpaqueOperationData;

struct OpaqueOperationRef;

struct OpaquePasteboardRef;

struct OpaquePropertyListRef;

struct OperationErrorRecord {
    int _field1;
    int _field2;
    unsigned int _field3;
    struct FSRef _field4;
    _Bool _field5;
};

struct OperationIterator {
    struct OpaqueOperationData *fData;
    void *fFirstProc;
    void *fNextProc;
};

struct OperationMonitor {
    struct OpaqueMonitorData *fMonitorData;
    unsigned char fCancelRequested;
    struct OperationStatus *fStatus;
    unsigned int fAccumulatedStatusMask;
    unsigned int fStatusChangeInterval;
    struct OpaqueMPSemaphoreID *fRequestSemaphoreID;
    struct OpaqueEventQueue *fQueue;
    void *fTickleProc;
    void *fUniqueNameProc;
};

struct OperationRecord {
    struct OpaqueNodeRef *_field1;
    struct OpaqueNodeRef *_field2;
    struct PropertyList *_field3;
    int _field4;
    unsigned int _field5;
    struct HFSUniStr255 _field6;
    struct OpaqueNodeRef *_field7;
    struct OpaqueNodeRef *_field8;
    struct OpaqueNodeRef *_field9;
    int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    long long _field14;
    long long _field15;
    long long _field16;
    long long _field17;
    unsigned char _field18;
    unsigned char _field19;
};

struct OperationStatus {
    unsigned int fStage;
    struct HFSUniStr255 fCurrentName;
    long long fTimeEstimate;
    long long fItemsTotal;
    long long fItemsCompleted;
    long long fBytesTotal;
    long long fBytesCompleted;
    long long fFSItemsTotal;
    long long fFSItemsCompleted;
};

struct Point32 {
    int h;
    int v;
};

struct ProcessSerialNumber {
    unsigned int highLongOfPSN;
    unsigned int lowLongOfPSN;
};

struct PropertyList;

struct RGBColor {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
};

struct SearchScopeDefinition;

struct SortCollator {
    struct TRef<TBaseNodeComparator *, TRetainReleasePolicy<TBaseNodeComparator *>> _field1;
};

struct StColumnOptimizer {
    struct TColumnOptimizerContainers _field1;
    id _field2;
    struct StColumnOptimizer *_field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
};

struct StNodeChangeNotifier {
    struct OpaqueEventNotifier *fChangeNotifier;
};

struct TAccessControlInfo {
    unsigned int fCustomAccessControlInfo;
    _Bool fReadWrite;
    _Bool fReadOnly;
    _Bool fWriteOnly;
    _Bool fNoAccess;
    _Bool fCustom;
    _Bool fNoInfo;
    _Bool fIsMixed;
    _Bool fIsAllow;
};

struct TAliasesTargets {
    struct __tree<std::__1::pair<TFENode, std::__1::pair<short, TFENode>>, std::__1::__map_value_compare<TFENode, std::__1::pair<short, TFENode>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, std::__1::pair<short, TFENode>>>> {
        struct __tree_node<std::__1::pair<TFENode, std::__1::pair<short, TFENode>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<TFENode, std::__1::pair<short, TFENode>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::pair<short, TFENode>, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct TApplicationEventHandler {
    void **_field1;
    struct vector<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> _field2;
    struct vector<ICarbonEventFilter *, std::__1::allocator<ICarbonEventFilter *>> _field3;
    struct OpaqueEventHandlerCallRef *_field4;
    struct TCarbonEventHandler *_field5;
    unsigned long long _field6;
    unsigned int :1;
    unsigned int :1;
    struct TFunctorBase *_field7;
    void **_field8;
    struct TNSRef<TPrefsObserverBridge *> _field9;
    _Bool _field10;
    _Bool _field11;
    struct TScriptApplication _field12;
};

struct TAsyncNodeOperationAssistant {
    void **_field1;
    id _field2;
};

struct TBackupStatus {
    int _field1;
    _Bool _field2;
    _Bool _field3;
    long long _field4;
    double _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    long long _field9;
    long long _field10;
    long long _field11;
    long long _field12;
};

struct TBaseNodeComparator {
    void **_field1;
    int _field2;
    struct TRef<const __CFLocale *, TRetainReleasePolicy<CFLocaleRef>> _field3;
    struct TString _field4;
    unsigned int _field5;
    int _field6;
    unsigned int _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
};

struct TBrowseModeAnimationInfo {
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field1;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field5;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field6;
    struct CGRect _field7;
    struct CGRect _field8;
    struct CGRect _field9;
    struct CGRect _field10;
    struct CGRect _field11;
    struct CGRect _field12;
    struct CGRect _field13;
    struct CGRect _field14;
    struct CGRect _field15;
};

struct TBurningDevice {
    struct TRef<__DADisk *, TRetainReleasePolicy<DADiskRef>> _field1;
    struct TRef<__DRDevice *, TRetainReleasePolicy<DRDeviceRef>> _field2;
    struct TFENode _field3;
    struct TString _field4;
    struct TIconRef _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
};

struct TCachedMetricsData {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    struct CGRect _field4;
};

struct TCachedRelativeDates {
    struct TNSRef<NSDate *> _field1;
    struct TNSRef<NSDate *> _field2;
    struct TNSRef<NSDate *> _field3;
};

struct TCarbonEventHandler;

struct TCoalescingNodeObserver;

struct TCoalescingNodeObserverCocoaBridge {
    void **_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct StNodeChangeNotifier _field3;
    _Bool _field4;
    struct TCoalescingNodeObserver *_field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field9;
    set_55a3e8f7 _field10;
    _Bool _field11;
    id _field12;
    unsigned int _field13;
};

struct TColor {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct TColumnOptimizerContainers {
    struct __tree<std::__1::pair<std::__1::pair<long, TFENode>, short>, std::__1::__map_value_compare<std::__1::pair<long, TFENode>, short, std::__1::less<std::__1::pair<long, TFENode>>, true>, std::__1::allocator<std::__1::pair<std::__1::pair<long, TFENode>, short>>> {
        struct __tree_node<std::__1::pair<std::__1::pair<long, TFENode>, short>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<std::__1::pair<long, TFENode>, short>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<long, TFENode>, short, std::__1::less<std::__1::pair<long, TFENode>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct TColumnPreviewQTEjectHelper {
    void **_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct StNodeChangeNotifier _field3;
    _Bool _field4;
    struct TCoalescingNodeObserver *_field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field9;
    set_55a3e8f7 _field10;
    _Bool _field11;
    struct TFENodeVector _field12;
    id _field13;
    _Bool _field14;
};

struct TConditionVariable {
    struct _opaque_pthread_cond_t {
        long long __sig;
        char __opaque[40];
    } fCondition;
};

struct TDesktopInfoExtractorController {
    void **_field1;
    struct vector<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> _field2;
    struct vector<ICarbonEventFilter *, std::__1::allocator<ICarbonEventFilter *>> _field3;
    struct OpaqueEventHandlerCallRef *_field4;
    struct TCarbonEventHandler *_field5;
    unsigned long long _field6;
    unsigned int :1;
    unsigned int :1;
    struct TFunctorBase *_field7;
    void **_field8;
    struct TInfoExtractor _field9;
    id _field10;
};

struct TDesktopViewOptionValue {
    int _field1;
    unsigned int _field2;
};

struct TDisplayConfiguration {
    struct map<unsigned int, CGRect, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, CGRect>>> fDisplayFrames;
};

struct TDropOperation {
    void **_field1;
    struct OpaqueCoreDrag *_field2;
    id _field3;
    id _field4;
    struct TFENode _field5;
    _Bool _field6;
};

struct TFCGImage {
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field1;
};

struct TFENode {
    struct OpaqueNodeRef *fNodeRef;
};

struct TFENodePropertyList {
    struct OpaquePropertyListRef *_field1;
};

struct TFENodeVector {
    struct TFENode *__begin_;
    struct TFENode *__end_;
    struct __compressed_pair<TFENode *, std::__1::allocator<TFENode>> __end_cap_;
};

struct TFavoriteServersListCocoaBridge {
    void **_field1;
    id _field2;
};

struct TFileHistoryQLPreviewQTEjectHelper {
    void **_vptr$TNodeEventHandler;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> fObservedNodes;
    struct StNodeChangeNotifier fNodeChangeNotifier;
    _Bool fClearObserversOnNodeDeleted;
    struct TCoalescingNodeObserver *fNextObserverToFlush;
    unsigned long long fNextFlushTime;
    unsigned long long fLastBusyTime;
    unsigned long long fMicrosecondsToCoalesce;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> fCoalescedEventsMap;
    set_55a3e8f7 fChildListChangesPending;
    _Bool fSupportsBulkEventHandling;
    struct TFENodeVector fPreviouslyPreviewedNodes;
    id fClient;
    _Bool fResettingTarget;
};

struct TFlowViewQTEjectHelper {
    void **_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct StNodeChangeNotifier _field3;
    _Bool _field4;
    struct TCoalescingNodeObserver *_field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field9;
    set_55a3e8f7 _field10;
    _Bool _field11;
    struct TFENodeVector _field12;
    id _field13;
    _Bool _field14;
};

struct TFormattedDateEntry;

struct TFunctorBase {
    void **_field1;
};

struct TGroup {
    void **_field1;
    int _field2;
    struct TGroupManager *_field3;
    unsigned int _field4;
};

struct TGroupChanges {
    struct TFENodeVector _field1;
    struct TFENodeVector _field2;
    struct TFENodeVector _field3;
};

struct TGroupClientNodes {
    struct map<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode, std::__1::less<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>>, std::__1::allocator<std::__1::pair<const std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>>> _field1;
    struct map<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>>> _field2;
};

struct TGroupManager {
    void **_field1;
    unsigned int _field2;
};

struct TGroupedNodes {
    struct TNodeGroups _field1;
};

struct TIconBrowserSettings {
    void **_field1;
    void **_field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    _Bool _field7;
    _Bool _field8;
    struct CGPoint _field9;
    short _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    struct RGBColor _field14;
    struct TFENode _field15;
    unsigned char _field16;
};

struct TIconLayoutBitmap {
    void **_vptr$TIconLayoutBitmap;
    unsigned int fDisplayID;
    int fBitsPerItem;
    int fRowStride;
    char *fBitmap;
    int fWidth;
    int fHeight;
    struct Point32 fLastItemLocation;
    unsigned int *fTransformArray;
    int fOrientation;
    int fStyle;
    _Bool fExpands;
};

struct TIconLayoutDataCache {
    struct unordered_map<TFENode, TIconLayoutData, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TIconLayoutData>>> _field1;
    struct unordered_map<TFENode, TCachedMetricsData, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCachedMetricsData>>> _field2;
};

struct TIconRef {
    struct TRef<OpaqueIconRef *, TRetainReleasePolicy<IconRef>> fIconRef;
};

struct TIconViewInfoExtractorController {
    void **_field1;
    struct vector<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> _field2;
    struct vector<ICarbonEventFilter *, std::__1::allocator<ICarbonEventFilter *>> _field3;
    struct OpaqueEventHandlerCallRef *_field4;
    struct TCarbonEventHandler *_field5;
    unsigned long long _field6;
    unsigned int :1;
    unsigned int :1;
    struct TFunctorBase *_field7;
    void **_field8;
    struct TInfoExtractor _field9;
    id _field10;
};

struct TIconViewLayout {
    void **_field1;
    struct TNSRef<TIconView *> _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    unsigned short _field5;
    int _field6;
    struct TFENode _field7;
    struct TFENodeVector _field8;
    struct TNSRef<NSMutableDictionary *> _field9;
    _Bool _field10;
    struct TIconLayoutDataCache _field11;
    struct TNSRef<TIconSpatialDataController *> _field12;
    struct unordered_map<TFENode, Point32, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, Point32>>> _field13;
    _Bool _field14;
    struct CGSize _field15;
    struct CGPoint _field16;
    struct vector<TIconLayoutBitmap *, std::__1::allocator<TIconLayoutBitmap *>> _field17;
};

struct TIdentity {
    struct TRef<const __CFUUID *, TRetainReleasePolicy<CFUUIDRef>> fUUIDRef;
    struct TString fShortName;
    int fPosixID;
    struct TriStateBool fIsUser;
};

struct TIdentityVector {
    struct TIdentity *_field1;
    struct TIdentity *_field2;
    struct __compressed_pair<TIdentity *, std::__1::allocator<TIdentity>> {
        struct TIdentity *_field1;
    } _field3;
};

struct TInfoExtractor {
    struct TCarbonEventHandler *_field1;
    struct TInfoExtractorThread *_field2;
    void *_field3;
    void *_field4;
    _Bool _field5;
};

struct TInfoExtractorThread;

struct TInfoPreviewViewQTEjectHelper {
    void **_vptr$TNodeEventHandler;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> fObservedNodes;
    struct StNodeChangeNotifier fNodeChangeNotifier;
    _Bool fClearObserversOnNodeDeleted;
    struct TCoalescingNodeObserver *fNextObserverToFlush;
    unsigned long long fNextFlushTime;
    unsigned long long fLastBusyTime;
    unsigned long long fMicrosecondsToCoalesce;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> fCoalescedEventsMap;
    set_55a3e8f7 fChildListChangesPending;
    _Bool fSupportsBulkEventHandling;
    struct TFENodeVector fPreviouslyPreviewedNodes;
    id fClient;
    _Bool fResettingTarget;
};

struct TLabeledTextItemMetrics {
    struct CGRect _field1;
    struct CGRect _field2[2];
    unsigned int _field3;
};

struct TLaunchList;

struct TLaunchListCache {
    struct TFENodeVector fNodes;
    struct TLaunchList *fLaunchList;
};

struct TLayoutBinding {
    struct TSideLayoutBinding top;
    struct TSideLayoutBinding left;
    struct TSideLayoutBinding bottom;
    struct TSideLayoutBinding right;
};

struct TListBrowserSettings {
    void **_field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    vector_abc0d4d8 _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
};

struct TMDQueryAliasNode {
    void **_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct StNodeChangeNotifier _field3;
    _Bool _field4;
    struct TNSRef<NSMutableDictionary *> _field5;
    struct TMutex _field6;
    struct map<TNodeObserver *, TObserverStats, std::__1::less<TNodeObserver *>, std::__1::allocator<std::__1::pair<TNodeObserver *const, TObserverStats>>> _field7;
    struct TFENode _field8;
    _Bool _field9;
    struct vector<TMDQueryAliasNode::SearchScopeDefinition, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> _field10;
    struct vector<TMDQueryAliasNode::SearchScopeDefinition, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> _field11;
    struct TString _field12;
    unsigned int _field13;
    struct TFENode _field14;
    struct TFENode _field15;
    struct TFENode _field16;
    struct TFENode _field17;
    struct TString _field18;
    struct TString _field19;
    struct TString _field20;
    struct TRef<const __CFDictionary *, TRetainReleasePolicy<CFDictionaryRef>> _field21;
    int _field22;
    int _field23;
    unsigned int _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    struct TFENode _field39;
    int _field40;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field41;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field42;
    int _field43;
    struct TMDQueryDefinition _field44;
};

struct TMDQueryDefinition {
    struct TString _field1;
    struct TString _field2;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field3;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field4;
    long long _field5;
    unsigned int _field6;
};

struct TMeetingRoomReceiverOperationController {
    void **_field1;
    struct TMutex _field2;
    struct TRef<__NWOperation *, TRetainReleasePolicy<NWOperationRef>> _field3;
    struct TString _field4;
    long long _field5;
    long long _field6;
    id _field7;
    unsigned long long _field8;
    struct TMutex _field9;
    struct TNSRef<NSDictionary *> _field10;
    struct TString _field11;
    _Bool _field12;
    struct TFENodeVector _field13;
};

struct TMeetingRoomSenderOperationController {
    void **_field1;
    struct TMutex _field2;
    struct TRef<__NWOperation *, TRetainReleasePolicy<NWOperationRef>> _field3;
    struct TString _field4;
    long long _field5;
    long long _field6;
    id _field7;
    unsigned long long _field8;
    struct TMutex _field9;
    struct TNSRef<NSDictionary *> _field10;
    struct TString _field11;
};

struct TModelObject;

struct TMutex {
    struct _opaque_pthread_mutex_t fMutex;
};

struct TNSAutoRef<NSURLConnection *> {
    NSURLConnection *fRef;
};

struct TNSRef<CAContext *> {
    CAContext *fRef;
};

struct TNSRef<CALayer *> {
    CALayer *fRef;
};

struct TNSRef<DMCoreStorage *> {
    DMCoreStorage *fRef;
};

struct TNSRef<IActionButtonCell *> {
    IActionButtonCell *fRef;
};

struct TNSRef<NSArray *> {
    NSArray *fRef;
};

struct TNSRef<NSArrayController *> {
    NSArrayController *fRef;
};

struct TNSRef<NSColor *> {
    NSColor *fRef;
};

struct TNSRef<NSDate *> {
    NSDate *fRef;
};

struct TNSRef<NSDateFormatter *> {
    NSDateFormatter *fRef;
};

struct TNSRef<NSDictionary *> {
    NSDictionary *fRef;
};

struct TNSRef<NSImage *> {
    NSImage *fRef;
};

struct TNSRef<NSMutableArray *> {
    NSMutableArray *fRef;
};

struct TNSRef<NSMutableDictionary *> {
    NSMutableDictionary *fRef;
};

struct TNSRef<NSMutableIndexSet *> {
    NSMutableIndexSet *fRef;
};

struct TNSRef<NSOperationQueue *> {
    NSOperationQueue *fRef;
};

struct TNSRef<NSString *> {
    NSString *fRef;
};

struct TNSRef<NSURL *> {
    NSURL *fRef;
};

struct TNSRef<NSView *> {
    NSView *fRef;
};

struct TNSRef<NSWindow *> {
    NSWindow *fRef;
};

struct TNSRef<QLPreviewPanel *> {
    QLPreviewPanel *fRef;
};

struct TNSRef<TAirDropLayoutController *> {
    TAirDropLayoutController *fRef;
};

struct TNSRef<TAirDropPerson *> {
    TAirDropPerson *fRef;
};

struct TNSRef<TAirDropProgressLayer *> {
    TAirDropProgressLayer *fRef;
};

struct TNSRef<TBrowserViewSwitchAnimator *> {
    TBrowserViewSwitchAnimator *fRef;
};

struct TNSRef<TBrowserWindowController *> {
    TBrowserWindowController *fRef;
};

struct TNSRef<TColumnPreviewController *> {
    TColumnPreviewController *fRef;
};

struct TNSRef<TFilmStripBuilderState *> {
    TFilmStripBuilderState *fRef;
};

struct TNSRef<TGradientSeparator *> {
    TGradientSeparator *fRef;
};

struct TNSRef<TIconSpatialDataController *> {
    id _field1;
};

struct TNSRef<TIconView *> {
    TIconView *fRef;
};

struct TNSRef<TIconViewCellOffscreenRenderer *> {
    TIconViewCellOffscreenRenderer *fRef;
};

struct TNSRef<TInlineCancelButtonLayer *> {
    TInlineCancelButtonLayer *fRef;
};

struct TNSRef<TInlinePreviewData *> {
    TInlinePreviewData *fRef;
};

struct TNSRef<TInlineProgressBarLayer *> {
    TInlineProgressBarLayer *fRef;
};

struct TNSRef<TInlineProgressHostLayer *> {
    TInlineProgressHostLayer *fRef;
};

struct TNSRef<TLayer *> {
    TLayer *fRef;
};

struct TNSRef<TLayoutBinder *> {
    TLayoutBinder *fRef;
};

struct TNSRef<TLayoutGrid *>;

struct TNSRef<TMeetingRoomInfoViewController *> {
    TMeetingRoomInfoViewController *fRef;
};

struct TNSRef<TPopover *> {
    TPopover *fRef;
};

struct TNSRef<TPrefsObserverBridge *> {
    id _field1;
};

struct TNSRef<TPropertyLogicalSizeExtractor *> {
    TPropertyLogicalSizeExtractor *fRef;
};

struct TNSRef<TQLPreviewViewZoomController *> {
    TQLPreviewViewZoomController *fRef;
};

struct TNSRef<TQueuedPopoverController *> {
    TQueuedPopoverController *fRef;
};

struct TNSRef<TRenameOperation *> {
    id _field1;
};

struct TNSRef<TShrinkToFitWindow *> {
    TShrinkToFitWindow *fRef;
};

struct TNSRef<TSidebarItemCell *> {
    TSidebarItemCell *fRef;
};

struct TNSRef<TSidebarSplitView *> {
    TSidebarSplitView *fRef;
};

struct TNSRef<TSidebarViewController *>;

struct TNSRef<TTextWithTitleFieldImpl *> {
    TTextWithTitleFieldImpl *fRef;
};

struct TNSRef<TView *> {
    TView *fRef;
};

struct TNSRef<TViewController *> {
    TViewController *fRef;
};

struct TNSRef<id<TStdAlertSheetClientProtocol>> {
    id fRef;
};

struct TNSRef<id> {
    id fRef;
};

struct TNewAliasCallbackHandler {
    struct TNodeBrowser *_field1;
    unsigned long long _field2;
};

struct TNewFolderAction {
    void **_field1;
    int _field2;
    _Bool _field3;
    struct TString _field4;
    struct TString _field5;
    struct TString _field6;
    unsigned int _field7;
    void **_field8;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field9;
    struct StNodeChangeNotifier _field10;
    _Bool _field11;
    id _field12;
    struct TFENode _field13;
    struct TFENodePropertyList _field14;
    struct TFENode _field15;
    _Bool _field16;
    _Bool _field17;
    struct TValidatorItem<TNewFolderAction> _field18;
};

struct TNewFolderCallbackHandler {
    struct TNodeBrowser *_field1;
    unsigned long long _field2;
    struct TValidatorToken<TNewFolderAction> _field3;
    _Bool _field4;
};

struct TNodeBrowser {
    void **_field1;
    struct vector<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> _field2;
    struct vector<ICarbonEventFilter *, std::__1::allocator<ICarbonEventFilter *>> _field3;
    struct OpaqueEventHandlerCallRef *_field4;
    struct TCarbonEventHandler *_field5;
    unsigned long long _field6;
    unsigned int :1;
    unsigned int :1;
    struct TFunctorBase *_field7;
    void **_field8;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field9;
    struct StNodeChangeNotifier _field10;
    _Bool _field11;
    struct TCoalescingNodeObserver *_field12;
    unsigned long long _field13;
    unsigned long long _field14;
    unsigned long long _field15;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field16;
    set_55a3e8f7 _field17;
    _Bool _field18;
    struct TMutex _field19;
    struct map<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> _field20;
    struct unordered_map<TFENode, TNodeEngine::ObservingRecord, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNodeEngine::ObservingRecord>>> _field21;
    struct vector<TNodeEngineNotificationHandler *, std::__1::allocator<TNodeEngineNotificationHandler *>> _field22;
    _Bool _field23;
    struct TRef<dispatch_queue_s *, TRetainReleasePolicy<dispatch_queue_t>> _field24;
    struct TFENodeVector _field25;
    int _field26;
    _Bool _field27;
    _Bool _field28;
    id _field29;
    struct TTargetPathObserver _field30;
    struct TFENodeVector _field31;
    struct TFENodeVector _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
};

struct TNodeEngineNotificationHandler;

struct TNodeGroups {
    struct __tree<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>, std::__1::__map_value_compare<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector, std::__1::less<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, true>, std::__1::allocator<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>>> {
        struct __tree_node<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENodeVector, std::__1::less<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct TNodeObserverCocoaBridge {
    void **_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct StNodeChangeNotifier _field3;
    _Bool _field4;
    id _field5;
    unsigned int _field6;
};

struct TNodeTask {
    void **_field1;
    void **_field2;
    struct TMutex _field3;
    struct map<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> _field4;
    id _field5;
    id _field6;
    id _field7;
    id _field8;
    double _field9;
    _Bool _field10;
    _Bool _field11;
    int _field12;
    unsigned long long _field13;
    void **_field14;
    double _field15;
    struct __EventLoopTimer *_field16;
    void *_field17;
    _Bool _field18;
    unsigned int _field19;
    struct OpaqueOperationRef *_field20;
    struct OperationMonitor _field21;
    struct OperationIterator _field22;
    unsigned int _field23;
    unsigned int _field24;
    struct OperationStatus _field25;
    struct TString _field26;
    struct TFENodeVector _field27;
    struct TFENode _field28;
    vector_d50fdf79 _field29;
    struct vector<TOperationRecord, std::__1::allocator<TOperationRecord>> *_field30;
    int _field31;
    unsigned long long _field32;
    _Bool _field33;
    _Bool _field34;
    int _field35;
    struct OperationIterator *_field36;
    struct OperationRecord *_field37;
    struct TFENode _field38;
    struct vector<std::__1::pair<unsigned int, unsigned int>, std::__1::allocator<std::__1::pair<unsigned int, unsigned int>>> _field39;
};

struct TNodeToChildrenMap {
    set_55a3e8f7 _field1;
    struct unordered_map<TFENode, TChildList, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TChildList>>> _field2;
    unsigned int _field3;
};

struct TOperationRecord {
    struct OperationRecord _field1;
    struct TFENode _field2;
    struct TFENode _field3;
    struct TFENode _field4;
};

struct TPBFSizingThread {
    void **_field1;
    _Bool _field2;
    struct _opaque_pthread_t *_field3;
    struct TCarbonEventHandler *_field4;
    struct TThreadSafeQueue<TFENode> _field5;
    void *_field6;
};

struct TPBFSizingThreadCallbackCocoaBridge {
    void **_field1;
    struct vector<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> _field2;
    struct vector<ICarbonEventFilter *, std::__1::allocator<ICarbonEventFilter *>> _field3;
    struct OpaqueEventHandlerCallRef *_field4;
    struct TCarbonEventHandler *_field5;
    unsigned long long _field6;
    unsigned int :1;
    unsigned int :1;
    struct TFunctorBase *_field7;
    id _field8;
};

struct TPreservedDisplayLayouts {
    struct vector<std::__1::pair<TDisplayConfiguration, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>>, std::__1::allocator<std::__1::pair<TDisplayConfiguration, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>>>> fPreservedLayouts;
};

struct TQLPreviewQTEjectHelper {
    void **_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct StNodeChangeNotifier _field3;
    _Bool _field4;
    struct TCoalescingNodeObserver *_field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> _field9;
    set_55a3e8f7 _field10;
    _Bool _field11;
    struct TFENodeVector _field12;
    id _field13;
    _Bool _field14;
};

struct TRecursiveMutex {
    struct _opaque_pthread_mutex_t fMutex;
};

struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> {
    struct CGImage *fRef;
};

struct TRef<OpaqueIconRef *, TRetainReleasePolicy<IconRef>> {
    struct OpaqueIconRef *fRef;
};

struct TRef<OpaqueLSSharedFileListItemRef *, TRetainReleasePolicy<LSSharedFileListItemRef>> {
    struct OpaqueLSSharedFileListItemRef *_field1;
};

struct TRef<OpaqueLSSharedFileListRef *, TRetainReleasePolicy<LSSharedFileListRef>> {
    struct OpaqueLSSharedFileListRef *_field1;
};

struct TRef<TBaseNodeComparator *, TRetainReleasePolicy<TBaseNodeComparator *>> {
    struct TBaseNodeComparator *fRef;
};

struct TRef<TSnapshot *, TRetainReleasePolicy<TSnapshot *>> {
    struct TSnapshot *_field1;
};

struct TRef<TTimeMachineTarget *, TRetainReleasePolicy<TTimeMachineTarget *>> {
    struct TTimeMachineTarget *fRef;
};

struct TRef<TUndoableAction *, TRefCountedRetainReleasePolicy> {
    struct TUndoableAction *fRef;
};

struct TRef<__CFRunLoop *, TRetainReleasePolicy<CFRunLoopRef>> {
    struct __CFRunLoop *fRef;
};

struct TRef<__DADisk *, TRetainReleasePolicy<DADiskRef>> {
    struct __DADisk *fRef;
};

struct TRef<__DRDevice *, TRetainReleasePolicy<DRDeviceRef>> {
    struct __DRDevice *_field1;
};

struct TRef<__FSFileSecurity *, TRetainReleasePolicy<FSFileSecurityRef>> {
    struct __FSFileSecurity *fRef;
};

struct TRef<__HIShape *, TRetainReleasePolicy<HIMutableShapeRef>> {
    struct __HIShape *_field1;
};

struct TRef<__NWOperation *, TRetainReleasePolicy<NWOperationRef>> {
    struct __NWOperation *_field1;
};

struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> {
    struct __CFArray *fRef;
};

struct TRef<const __CFDictionary *, TRetainReleasePolicy<CFDictionaryRef>> {
    struct __CFDictionary *_field1;
};

struct TRef<const __CFLocale *, TRetainReleasePolicy<CFLocaleRef>> {
    struct __CFLocale *_field1;
};

struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> {
    struct __CFString *fRef;
};

struct TRef<const __CFUUID *, TRetainReleasePolicy<CFUUIDRef>> {
    struct __CFUUID *fRef;
};

struct TRef<const void *, TRetainReleasePolicy<CFTypeRef>> {
    void *_field1;
};

struct TRef<dispatch_queue_s *, TRetainReleasePolicy<dispatch_queue_t>> {
    struct dispatch_queue_s *_field1;
};

struct TRef<dispatch_source_s *, TRetainReleasePolicy<dispatch_source_t>> {
    struct dispatch_source_s *fRef;
};

struct TRegion {
    struct TRef<__HIShape *, TRetainReleasePolicy<HIMutableShapeRef>> _field1;
};

struct TRenameAction {
    void **_field1;
    int _field2;
    _Bool _field3;
    struct TString _field4;
    struct TString _field5;
    struct TString _field6;
    unsigned int _field7;
    void **_field8;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field9;
    struct StNodeChangeNotifier _field10;
    _Bool _field11;
    struct TFENode _field12;
    _Bool _field13;
    struct TString _field14;
    struct TString _field15;
    struct TString _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    struct TNSRef<TRenameOperation *> _field20;
};

struct TRenameUndoRedoOperationHelper {
    struct TRenameAction *_field1;
};

struct TScriptApplication {
    void **_field1;
    struct TModelObject *_field2;
    struct TModelObject *_field3;
    struct TModelObject *_field4;
    unsigned int _field5;
    int _field6;
};

struct TSeamlessOpenerSpawnOrigin {
    void **_field1;
    struct TFENode _field2;
    id _field3;
    unsigned long long _field4;
    unsigned int _field5;
};

struct TSharedFileList {
    struct TRef<OpaqueLSSharedFileListRef *, TRetainReleasePolicy<LSSharedFileListRef>> _field1;
};

struct TSharedFileListItem {
    struct TRef<OpaqueLSSharedFileListItemRef *, TRetainReleasePolicy<LSSharedFileListItemRef>> _field1;
};

struct TSideLayoutBinding {
    struct TNSRef<NSView *> masterView;
    int kind;
    struct CGRect frame;
};

struct TSnapshot;

struct TSpatialDataCacheElement;

struct TString {
    struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> fString;
};

struct TStringVector {
    struct TString *__begin_;
    struct TString *__end_;
    struct __compressed_pair<TString *, std::__1::allocator<TString>> {
        struct TString *__first_;
    } __end_cap_;
};

struct TTargetPathObserver {
    void **_field1;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field2;
    struct StNodeChangeNotifier _field3;
    _Bool _field4;
    struct TNodeBrowser *_field5;
};

struct TTask {
    void **_field1;
    struct TMutex _field2;
    struct map<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> _field3;
    id _field4;
    id _field5;
    id _field6;
    id _field7;
    double _field8;
    _Bool _field9;
    _Bool _field10;
    int _field11;
    unsigned long long _field12;
};

struct TThreadSafeQueue<TFENode> {
    void **_field1;
    struct TMutex _field2;
    struct TConditionVariable _field3;
    struct IBaseQueueStyle<TFENode> *_field4;
    struct vector<TFENode, std::__1::allocator<TFENode>> _field5;
};

struct TThreadSafeQueue<TNSRef<TQueuedPopoverController *>> {
    void **_field1;
    struct TMutex _field2;
    struct TConditionVariable _field3;
    struct IBaseQueueStyle<TNSRef<TQueuedPopoverController *>> *_field4;
    struct vector<TNSRef<TQueuedPopoverController *>, std::__1::allocator<TNSRef<TQueuedPopoverController *>>> _field5;
};

struct TThumbnailExtractor {
    struct TCarbonEventHandler *_field1;
    struct TThumbnailExtractorThread *_field2;
    int _field3;
    _Bool _field4;
    void *_field5;
    void *_field6;
};

struct TThumbnailExtractorController {
    void **_field1;
    struct vector<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> _field2;
    struct vector<ICarbonEventFilter *, std::__1::allocator<ICarbonEventFilter *>> _field3;
    struct OpaqueEventHandlerCallRef *_field4;
    struct TCarbonEventHandler *_field5;
    unsigned long long _field6;
    unsigned int :1;
    unsigned int :1;
    struct TFunctorBase *_field7;
    void **_field8;
    struct TThumbnailExtractor _field9;
    id _field10;
};

struct TThumbnailExtractorData {
    struct TFENode _field1;
    struct map<unsigned int, TThumbnailExtractorData::TThumbnailData, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TThumbnailExtractorData::TThumbnailData>>> _field2;
};

struct TThumbnailExtractorThread;

struct TTimeMachineTarget {
    void **_field1;
    int _field2;
    _Bool _field3;
    struct TFENode _field4;
    struct TString _field5;
    struct TRef<TSnapshot *, TRetainReleasePolicy<TSnapshot *>> _field6;
    struct TRef<const void *, TRetainReleasePolicy<CFTypeRef>> _field7;
};

struct TTypeSelectController {
    void **_field1;
    double _field2;
    struct TString _field3;
    void *_field4;
};

struct TUndoableAction {
    void **_field1;
    int _field2;
    _Bool _field3;
    struct TString _field4;
    struct TString _field5;
    struct TString _field6;
    unsigned int _field7;
};

struct TUndoableActionManager {
    void **_field1;
    struct vector<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> _field2;
    struct vector<ICarbonEventFilter *, std::__1::allocator<ICarbonEventFilter *>> _field3;
    struct OpaqueEventHandlerCallRef *_field4;
    struct TCarbonEventHandler *_field5;
    unsigned long long _field6;
    unsigned int :1;
    unsigned int :1;
    struct TFunctorBase *_field7;
    unsigned long long _field8;
    struct vector<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>, std::__1::allocator<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>>> _field9;
    struct vector<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>, std::__1::allocator<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>>> _field10;
    struct vector<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>, std::__1::allocator<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>>> _field11;
};

struct TValidatorItem<TNewFolderAction> {
    long long _field1;
};

struct TValidatorToken<TNewFolderAction> {
    long long _field1;
};

struct TViewsFontCache {
    struct TextTraitsRecord _field1;
    double _field2;
    double _field3;
    struct CGRect _field4;
};

struct TextTraitsRecord {
    unsigned short _field1;
    double _field2;
};

struct ToolbarItemInfo {
    unsigned int _field1;
    Class _field2;
    SEL _field3;
    struct __CFString *_field4;
    id _field5;
    id _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct TriStateBool {
    int fState;
};

struct UTCDateTime {
    unsigned short _field1;
    unsigned int _field2;
    unsigned short _field3;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __CFDictionary;

struct __CFRunLoopTimer;

struct __CFString;

struct __FSFileSecurity;

struct __compressed_pair<TFENode *, std::__1::allocator<TFENode>> {
    struct TFENode *__first_;
};

struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
    unsigned int *__first_;
};

struct __hash_node<std::__1::pair<TFENode, Point32>, void *>;

struct __hash_node<std::__1::pair<TFENode, TCachedMetricsData>, void *>;

struct __hash_node<std::__1::pair<TFENode, TChildList>, void *>;

struct __hash_node<std::__1::pair<TFENode, TFENode>, void *>;

struct __hash_node<std::__1::pair<TFENode, TGroupInFolderItem>, void *>;

struct __hash_node<std::__1::pair<TFENode, TIconLayoutData>, void *>;

struct __hash_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *>;

struct __hash_node<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>, void *>;

struct __hash_node<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>;

struct __hash_node<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>, void *>;

struct __hash_node<std::__1::pair<TFENode, TProgressState>, void *>;

struct __hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>;

struct __hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct dispatch_queue_s;

struct dispatch_source_s;

struct map<TDesktopViewOptionValue, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>, std::__1::less<TDesktopViewOptionValue>, std::__1::allocator<std::__1::pair<const TDesktopViewOptionValue, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>>>> {
    struct __tree<std::__1::pair<TDesktopViewOptionValue, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>>, std::__1::__map_value_compare<TDesktopViewOptionValue, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>, std::__1::less<TDesktopViewOptionValue>, true>, std::__1::allocator<std::__1::pair<TDesktopViewOptionValue, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>>>> {
        struct __tree_node<std::__1::pair<TDesktopViewOptionValue, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<TDesktopViewOptionValue, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TDesktopViewOptionValue, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>, std::__1::less<TDesktopViewOptionValue>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>> {
    struct __tree<std::__1::pair<TFENode, CGPoint>, std::__1::__map_value_compare<TFENode, CGPoint, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, CGPoint>>> {
        struct __tree_node<std::__1::pair<TFENode, CGPoint>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<TFENode, CGPoint>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, CGPoint, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, CGRect, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGRect>>> {
    struct __tree<std::__1::pair<TFENode, CGRect>, std::__1::__map_value_compare<TFENode, CGRect, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, CGRect>>> {
        struct __tree_node<std::__1::pair<TFENode, CGRect>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<TFENode, CGRect>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, CGRect, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TFENode, TNSRef<NSMutableDictionary *>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<NSMutableDictionary *>>>> {
    struct __tree<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::__map_value_compare<TFENode, TNSRef<NSMutableDictionary *>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>>> {
        struct __tree_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, TNSRef<NSMutableDictionary *>, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, TNSRef<TAirDropPerson *>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TAirDropPerson *>>>> {
    struct __tree<std::__1::pair<TFENode, TNSRef<TAirDropPerson *>>, std::__1::__map_value_compare<TFENode, TNSRef<TAirDropPerson *>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, TNSRef<TAirDropPerson *>>>> {
        struct __tree_node<std::__1::pair<TFENode, TNSRef<TAirDropPerson *>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<TFENode, TNSRef<TAirDropPerson *>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, TNSRef<TAirDropPerson *>, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> {
    struct __tree<std::__1::pair<TFENode, TObserverStats>, std::__1::__map_value_compare<TFENode, TObserverStats, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, TObserverStats>>> {
        struct __tree_node<std::__1::pair<TFENode, TObserverStats>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<TFENode, TObserverStats>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, TObserverStats, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>>> {
    struct __tree<std::__1::pair<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, std::__1::__map_value_compare<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>>> {
        struct __tree_node<std::__1::pair<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TIconRef, TRegion, std::__1::less<TIconRef>, std::__1::allocator<std::__1::pair<const TIconRef, TRegion>>> {
    struct __tree<std::__1::pair<TIconRef, TRegion>, std::__1::__map_value_compare<TIconRef, TRegion, std::__1::less<TIconRef>, true>, std::__1::allocator<std::__1::pair<TIconRef, TRegion>>> {
        struct __tree_node<std::__1::pair<TIconRef, TRegion>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<TIconRef, TRegion>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TIconRef, TRegion, std::__1::less<TIconRef>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TNSRef<NSView *>, unsigned long, std::__1::less<TNSRef<NSView *>>, std::__1::allocator<std::__1::pair<const TNSRef<NSView *>, unsigned long>>> {
    struct __tree<std::__1::pair<TNSRef<NSView *>, unsigned long>, std::__1::__map_value_compare<TNSRef<NSView *>, unsigned long, std::__1::less<TNSRef<NSView *>>, true>, std::__1::allocator<std::__1::pair<TNSRef<NSView *>, unsigned long>>> {
        struct __tree_node<std::__1::pair<TNSRef<NSView *>, unsigned long>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<TNSRef<NSView *>, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TNSRef<NSView *>, unsigned long, std::__1::less<TNSRef<NSView *>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TNodeObserver *, TObserverStats, std::__1::less<TNodeObserver *>, std::__1::allocator<std::__1::pair<TNodeObserver *const, TObserverStats>>> {
    struct __tree<std::__1::pair<TNodeObserver *, TObserverStats>, std::__1::__map_value_compare<TNodeObserver *, TObserverStats, std::__1::less<TNodeObserver *>, true>, std::__1::allocator<std::__1::pair<TNodeObserver *, TObserverStats>>> {
        struct __tree_node<std::__1::pair<TNodeObserver *, TObserverStats>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<TNodeObserver *, TObserverStats>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TNodeObserver *, TObserverStats, std::__1::less<TNodeObserver *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> {
    struct __tree<std::__1::pair<const TFENode, TCoalescedEvents *>, std::__1::__map_value_compare<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, true>, std::__1::allocator<std::__1::pair<const TFENode, TCoalescedEvents *>>> {
        struct __tree_node<std::__1::pair<const TFENode, TCoalescedEvents *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<const TFENode, TCoalescedEvents *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TFENode, TCoalescedEvents *, std::__1::less<const TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<const TFENode, const TFENodeVector *const, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, const TFENodeVector *const>>> {
    struct __tree<std::__1::pair<const TFENode, const TFENodeVector *const>, std::__1::__map_value_compare<const TFENode, const TFENodeVector *const, std::__1::less<const TFENode>, true>, std::__1::allocator<std::__1::pair<const TFENode, const TFENodeVector *const>>> {
        struct __tree_node<std::__1::pair<const TFENode, const TFENodeVector *const>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<const TFENode, const TFENodeVector *const>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TFENode, const TFENodeVector *const, std::__1::less<const TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>>> {
    struct __tree<std::__1::pair<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>, std::__1::__map_value_compare<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const, std::__1::less<const TFENode>, true>, std::__1::allocator<std::__1::pair<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>>> {
        struct __tree_node<std::__1::pair<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const, std::__1::less<const TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode, std::__1::less<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>>, std::__1::allocator<std::__1::pair<const std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>>> {
    struct __tree<std::__1::pair<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>, std::__1::__map_value_compare<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode, std::__1::less<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>>, true>, std::__1::allocator<std::__1::pair<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>>> {
        struct __tree_node<std::__1::pair<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>, TFENode, std::__1::less<std::__1::pair<TRef<TGroup *, TRetainReleasePolicy<TGroup *>>, TFENode>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, CGRect, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, CGRect>>> {
    struct __tree<std::__1::pair<unsigned int, CGRect>, std::__1::__map_value_compare<unsigned int, CGRect, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::pair<unsigned int, CGRect>>> {
        struct __tree_node<std::__1::pair<unsigned int, CGRect>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<unsigned int, CGRect>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, CGRect, std::__1::less<unsigned int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, TThumbnailExtractorData::TThumbnailData, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TThumbnailExtractorData::TThumbnailData>>> {
    struct __tree<std::__1::pair<unsigned int, TThumbnailExtractorData::TThumbnailData>, std::__1::__map_value_compare<unsigned int, TThumbnailExtractorData::TThumbnailData, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::pair<unsigned int, TThumbnailExtractorData::TThumbnailData>>> {
        struct __tree_node<std::__1::pair<unsigned int, TThumbnailExtractorData::TThumbnailData>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<unsigned int, TThumbnailExtractorData::TThumbnailData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, TThumbnailExtractorData::TThumbnailData, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> {
    struct __tree<std::__1::pair<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::__map_value_compare<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::pair<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> {
        struct __tree_node<std::__1::pair<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>;

struct pair<TDisplayConfiguration, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>>;

struct pair<TFENode, TFENodePropertyList>;

struct pair<TFENode, unsigned int>;

struct pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>>;

struct pair<int, std::__1::map<TIconRef, TRegion, std::__1::less<TIconRef>, std::__1::allocator<std::__1::pair<const TIconRef, TRegion>>>> {
    int first;
    struct map<TIconRef, TRegion, std::__1::less<TIconRef>, std::__1::allocator<std::__1::pair<const TIconRef, TRegion>>> second;
};

struct pair<unsigned int, TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>>>;

struct pair<unsigned int, unsigned int>;

struct set<TFENode, std::__1::less<TFENode>, std::__1::allocator<TFENode>> {
    struct __tree<TFENode, std::__1::less<TFENode>, std::__1::allocator<TFENode>> {
        struct __tree_node<TFENode, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TFENode, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TFENode>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<TString, std::__1::less<TString>, std::__1::allocator<TString>> {
    struct __tree<TString, std::__1::less<TString>, std::__1::allocator<TString>> {
        struct __tree_node<TString, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TString, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TString>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<UDefaults::RegistryID, std::__1::less<UDefaults::RegistryID>, std::__1::allocator<UDefaults::RegistryID>> {
    struct __tree<UDefaults::RegistryID, std::__1::less<UDefaults::RegistryID>, std::__1::allocator<UDefaults::RegistryID>> {
        struct __tree_node<UDefaults::RegistryID, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<UDefaults::RegistryID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<UDefaults::RegistryID>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<double, std::__1::less<double>, std::__1::allocator<double>> {
    struct __tree<double, std::__1::less<double>, std::__1::allocator<double>> {
        struct __tree_node<double, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<double, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<double>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, Point32>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, Point32>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TFENode, Point32>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, Point32>, void *>*>>> {
        struct __hash_node<std::__1::pair<TFENode, Point32>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, Point32>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, Point32>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TCachedMetricsData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TCachedMetricsData>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TFENode, TCachedMetricsData>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TCachedMetricsData>, void *>*>>> {
        struct __hash_node<std::__1::pair<TFENode, TCachedMetricsData>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TCachedMetricsData>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TCachedMetricsData>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TChildList>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TChildList>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TFENode, TChildList>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TChildList>, void *>*>>> {
        struct __hash_node<std::__1::pair<TFENode, TChildList>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TChildList>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TChildList>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>*>>> {
        struct __hash_node<std::__1::pair<TFENode, TFENode>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TGroupInFolderItem>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TGroupInFolderItem>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TFENode, TGroupInFolderItem>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TGroupInFolderItem>, void *>*>>> {
        struct __hash_node<std::__1::pair<TFENode, TGroupInFolderItem>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TGroupInFolderItem>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TGroupInFolderItem>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TIconLayoutData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TIconLayoutData>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TFENode, TIconLayoutData>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TIconLayoutData>, void *>*>>> {
        struct __hash_node<std::__1::pair<TFENode, TIconLayoutData>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TIconLayoutData>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TIconLayoutData>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>>> {
        struct __hash_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>, void *>*>>> {
        struct __hash_node<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*>>> {
        struct __hash_node<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>, void *>*>>> {
        struct __hash_node<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TProgressState>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TProgressState>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TFENode, TProgressState>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TProgressState>, void *>*>>> {
        struct __hash_node<std::__1::pair<TFENode, TProgressState>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TProgressState>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TProgressState>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>>> {
        struct __hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<TFENode, Point32, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, Point32>>> {
    struct __hash_table<std::__1::pair<TFENode, Point32>, std::__1::__unordered_map_hasher<TFENode, Point32, TFENodeHasher, true>, std::__1::__unordered_map_equal<TFENode, Point32, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, Point32>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, Point32>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, Point32>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, Point32>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, Point32>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, Point32>, void *>*> {
                struct __hash_node<std::__1::pair<TFENode, Point32>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, Point32, TFENodeHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, Point32, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TCachedMetricsData, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TCachedMetricsData>>> {
    struct __hash_table<std::__1::pair<TFENode, TCachedMetricsData>, std::__1::__unordered_map_hasher<TFENode, TCachedMetricsData, TFENodeHasher, true>, std::__1::__unordered_map_equal<TFENode, TCachedMetricsData, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, TCachedMetricsData>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TCachedMetricsData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TCachedMetricsData>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TCachedMetricsData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TCachedMetricsData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TCachedMetricsData>, void *>*> {
                struct __hash_node<std::__1::pair<TFENode, TCachedMetricsData>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, TCachedMetricsData, TFENodeHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, TCachedMetricsData, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TChildList, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TChildList>>> {
    struct __hash_table<std::__1::pair<TFENode, TChildList>, std::__1::__unordered_map_hasher<TFENode, TChildList, TFENodeHasher, true>, std::__1::__unordered_map_equal<TFENode, TChildList, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, TChildList>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TChildList>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TChildList>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TChildList>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TChildList>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TChildList>, void *>*> {
                struct __hash_node<std::__1::pair<TFENode, TChildList>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, TChildList, TFENodeHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, TChildList, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TFENode, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TFENode>>> {
    struct __hash_table<std::__1::pair<TFENode, TFENode>, std::__1::__unordered_map_hasher<TFENode, TFENode, TFENodeHasher, true>, std::__1::__unordered_map_equal<TFENode, TFENode, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, TFENode>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>*> {
                struct __hash_node<std::__1::pair<TFENode, TFENode>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, TFENode, TFENodeHasher, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, TFENode, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TGroupInFolderItem, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TGroupInFolderItem>>> {
    struct __hash_table<std::__1::pair<TFENode, TGroupInFolderItem>, std::__1::__unordered_map_hasher<TFENode, TGroupInFolderItem, TFENodeHasher, true>, std::__1::__unordered_map_equal<TFENode, TGroupInFolderItem, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, TGroupInFolderItem>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TGroupInFolderItem>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TGroupInFolderItem>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TGroupInFolderItem>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TGroupInFolderItem>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TGroupInFolderItem>, void *>*> {
                struct __hash_node<std::__1::pair<TFENode, TGroupInFolderItem>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, TGroupInFolderItem, TFENodeHasher, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, TGroupInFolderItem, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TIconLayoutData, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TIconLayoutData>>> {
    struct __hash_table<std::__1::pair<TFENode, TIconLayoutData>, std::__1::__unordered_map_hasher<TFENode, TIconLayoutData, TFENodeHasher, true>, std::__1::__unordered_map_equal<TFENode, TIconLayoutData, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, TIconLayoutData>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TIconLayoutData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TIconLayoutData>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TIconLayoutData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TIconLayoutData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TIconLayoutData>, void *>*> {
                struct __hash_node<std::__1::pair<TFENode, TIconLayoutData>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, TIconLayoutData, TFENodeHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, TIconLayoutData, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TNSRef<NSMutableDictionary *>, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<NSMutableDictionary *>>>> {
    struct __hash_table<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, std::__1::__unordered_map_hasher<TFENode, TNSRef<NSMutableDictionary *>, TFENodeHasher, true>, std::__1::__unordered_map_equal<TFENode, TNSRef<NSMutableDictionary *>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *>*> {
                struct __hash_node<std::__1::pair<TFENode, TNSRef<NSMutableDictionary *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, TNSRef<NSMutableDictionary *>, TFENodeHasher, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, TNSRef<NSMutableDictionary *>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TNSRef<TDesktopIcon *>, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TDesktopIcon *>>>> {
    struct __hash_table<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>, std::__1::__unordered_map_hasher<TFENode, TNSRef<TDesktopIcon *>, TFENodeHasher, true>, std::__1::__unordered_map_equal<TFENode, TNSRef<TDesktopIcon *>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>, void *>*> {
                struct __hash_node<std::__1::pair<TFENode, TNSRef<TDesktopIcon *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, TNSRef<TDesktopIcon *>, TFENodeHasher, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, TNSRef<TDesktopIcon *>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TNSRef<TInlineProgressHostLayer *>, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TInlineProgressHostLayer *>>>> {
    struct __hash_table<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>, std::__1::__unordered_map_hasher<TFENode, TNSRef<TInlineProgressHostLayer *>, TFENodeHasher, true>, std::__1::__unordered_map_equal<TFENode, TNSRef<TInlineProgressHostLayer *>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *>*> {
                struct __hash_node<std::__1::pair<TFENode, TNSRef<TInlineProgressHostLayer *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, TNSRef<TInlineProgressHostLayer *>, TFENodeHasher, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, TNSRef<TInlineProgressHostLayer *>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TNodeEngine::ObservingRecord, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNodeEngine::ObservingRecord>>> {
    struct __hash_table<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>, std::__1::__unordered_map_hasher<TFENode, TNodeEngine::ObservingRecord, TFENodeHasher, true>, std::__1::__unordered_map_equal<TFENode, TNodeEngine::ObservingRecord, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>, void *>*> {
                struct __hash_node<std::__1::pair<TFENode, TNodeEngine::ObservingRecord>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, TNodeEngine::ObservingRecord, TFENodeHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, TNodeEngine::ObservingRecord, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TProgressState, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TProgressState>>> {
    struct __hash_table<std::__1::pair<TFENode, TProgressState>, std::__1::__unordered_map_hasher<TFENode, TProgressState, TFENodeHasher, true>, std::__1::__unordered_map_equal<TFENode, TProgressState, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, TProgressState>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TProgressState>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TProgressState>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TProgressState>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TProgressState>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TProgressState>, void *>*> {
                struct __hash_node<std::__1::pair<TFENode, TProgressState>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, TProgressState, TFENodeHasher, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, TProgressState, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>>> {
    struct __hash_table<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::__unordered_map_hasher<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>, TFENodeHasher, true>, std::__1::__unordered_map_equal<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*> {
                struct __hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>, TFENodeHasher, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, TNSRef<TLayoutGrid *>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TNSRef<TLayoutGrid *>>>> {
    struct __hash_table<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, std::__1::__unordered_map_hasher<unsigned int, TNSRef<TLayoutGrid *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, TNSRef<TLayoutGrid *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, TNSRef<TLayoutGrid *>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, TNSRef<TLayoutGrid *>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<Browser::ColumnDesc, std::__1::allocator<Browser::ColumnDesc>> {
    struct ColumnDesc *_field1;
    struct ColumnDesc *_field2;
    struct __compressed_pair<Browser::ColumnDesc *, std::__1::allocator<Browser::ColumnDesc>> {
        struct ColumnDesc *_field1;
    } _field3;
};

struct vector<DataBrowserItemSpatialData, std::__1::allocator<DataBrowserItemSpatialData>> {
    struct DataBrowserItemSpatialData *__begin_;
    struct DataBrowserItemSpatialData *__end_;
    struct __compressed_pair<DataBrowserItemSpatialData *, std::__1::allocator<DataBrowserItemSpatialData>> {
        struct DataBrowserItemSpatialData *__first_;
    } __end_cap_;
};

struct vector<ICarbonEventFilter *, std::__1::allocator<ICarbonEventFilter *>> {
    struct ICarbonEventFilter **_field1;
    struct ICarbonEventFilter **_field2;
    struct __compressed_pair<ICarbonEventFilter **, std::__1::allocator<ICarbonEventFilter *>> {
        struct ICarbonEventFilter **_field1;
    } _field3;
};

struct vector<TAccessControlInfo, std::__1::allocator<TAccessControlInfo>> {
    struct TAccessControlInfo *_field1;
    struct TAccessControlInfo *_field2;
    struct __compressed_pair<TAccessControlInfo *, std::__1::allocator<TAccessControlInfo>> {
        struct TAccessControlInfo *_field1;
    } _field3;
};

struct vector<TFENode, std::__1::allocator<TFENode>> {
    struct TFENode *_field1;
    struct TFENode *_field2;
    struct __compressed_pair<TFENode *, std::__1::allocator<TFENode>> _field3;
};

struct vector<TFENodePropertyList, std::__1::allocator<TFENodePropertyList>> {
    struct TFENodePropertyList *_field1;
    struct TFENodePropertyList *_field2;
    struct __compressed_pair<TFENodePropertyList *, std::__1::allocator<TFENodePropertyList>> {
        struct TFENodePropertyList *_field1;
    } _field3;
};

struct vector<TFormattedDateEntry, std::__1::allocator<TFormattedDateEntry>> {
    struct TFormattedDateEntry *__begin_;
    struct TFormattedDateEntry *__end_;
    struct __compressed_pair<TFormattedDateEntry *, std::__1::allocator<TFormattedDateEntry>> {
        struct TFormattedDateEntry *__first_;
    } __end_cap_;
};

struct vector<TIconLayoutBitmap *, std::__1::allocator<TIconLayoutBitmap *>> {
    struct TIconLayoutBitmap **_field1;
    struct TIconLayoutBitmap **_field2;
    struct __compressed_pair<TIconLayoutBitmap **, std::__1::allocator<TIconLayoutBitmap *>> {
        struct TIconLayoutBitmap **_field1;
    } _field3;
};

struct vector<TMDQueryAliasNode::SearchScopeDefinition, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> {
    struct SearchScopeDefinition *_field1;
    struct SearchScopeDefinition *_field2;
    struct __compressed_pair<TMDQueryAliasNode::SearchScopeDefinition *, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> {
        struct SearchScopeDefinition *_field1;
    } _field3;
};

struct vector<TNSRef<NSWindow *>, std::__1::allocator<TNSRef<NSWindow *>>> {
    struct TNSRef<NSWindow *> *__begin_;
    struct TNSRef<NSWindow *> *__end_;
    struct __compressed_pair<TNSRef<NSWindow *>*, std::__1::allocator<TNSRef<NSWindow *>>> {
        struct TNSRef<NSWindow *> *__first_;
    } __end_cap_;
};

struct vector<TNSRef<TLayoutGrid *>, std::__1::allocator<TNSRef<TLayoutGrid *>>> {
    struct TNSRef<TLayoutGrid *> *__begin_;
    struct TNSRef<TLayoutGrid *> *__end_;
    struct __compressed_pair<TNSRef<TLayoutGrid *>*, std::__1::allocator<TNSRef<TLayoutGrid *>>> {
        struct TNSRef<TLayoutGrid *> *__first_;
    } __end_cap_;
};

struct vector<TNSRef<TQueuedPopoverController *>, std::__1::allocator<TNSRef<TQueuedPopoverController *>>> {
    struct TNSRef<TQueuedPopoverController *> *_field1;
    struct TNSRef<TQueuedPopoverController *> *_field2;
    struct __compressed_pair<TNSRef<TQueuedPopoverController *>*, std::__1::allocator<TNSRef<TQueuedPopoverController *>>> {
        struct TNSRef<TQueuedPopoverController *> *_field1;
    } _field3;
};

struct vector<TNSRef<TSidebarViewController *>, std::__1::allocator<TNSRef<TSidebarViewController *>>> {
    struct TNSRef<TSidebarViewController *> *__begin_;
    struct TNSRef<TSidebarViewController *> *__end_;
    struct __compressed_pair<TNSRef<TSidebarViewController *>*, std::__1::allocator<TNSRef<TSidebarViewController *>>> {
        struct TNSRef<TSidebarViewController *> *__first_;
    } __end_cap_;
};

struct vector<TNodeEngineNotificationHandler *, std::__1::allocator<TNodeEngineNotificationHandler *>> {
    struct TNodeEngineNotificationHandler **_field1;
    struct TNodeEngineNotificationHandler **_field2;
    struct __compressed_pair<TNodeEngineNotificationHandler **, std::__1::allocator<TNodeEngineNotificationHandler *>> {
        struct TNodeEngineNotificationHandler **_field1;
    } _field3;
};

struct vector<TOperationRecord, std::__1::allocator<TOperationRecord>> {
    struct TOperationRecord *__begin_;
    struct TOperationRecord *__end_;
    struct __compressed_pair<TOperationRecord *, std::__1::allocator<TOperationRecord>> {
        struct TOperationRecord *__first_;
    } __end_cap_;
};

struct vector<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>, std::__1::allocator<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>>> {
    TRef_9e01da98 *_field1;
    TRef_9e01da98 *_field2;
    struct __compressed_pair<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>*, std::__1::allocator<TRef<TUndoableAction *, TRefCountedRetainReleasePolicy>>> {
        TRef_9e01da98 *_field1;
    } _field3;
};

struct vector<TSpatialDataCacheElement, std::__1::allocator<TSpatialDataCacheElement>> {
    struct TSpatialDataCacheElement *__begin_;
    struct TSpatialDataCacheElement *__end_;
    struct __compressed_pair<TSpatialDataCacheElement *, std::__1::allocator<TSpatialDataCacheElement>> {
        struct TSpatialDataCacheElement *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> {
    struct pair<OpaqueEventTargetRef *, TCarbonEventFunnel *> *_field1;
    struct pair<OpaqueEventTargetRef *, TCarbonEventFunnel *> *_field2;
    struct __compressed_pair<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>*, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> {
        struct pair<OpaqueEventTargetRef *, TCarbonEventFunnel *> *_field1;
    } _field3;
};

struct vector<std::__1::pair<TDisplayConfiguration, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>>, std::__1::allocator<std::__1::pair<TDisplayConfiguration, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>>>> {
    struct pair<TDisplayConfiguration, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>> *__begin_;
    struct pair<TDisplayConfiguration, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>> *__end_;
    struct __compressed_pair<std::__1::pair<TDisplayConfiguration, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>>*, std::__1::allocator<std::__1::pair<TDisplayConfiguration, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>>>> {
        struct pair<TDisplayConfiguration, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>> {
    struct pair<TFENode, unsigned int> *_field1;
    struct pair<TFENode, unsigned int> *_field2;
    struct __compressed_pair<std::__1::pair<TFENode, unsigned int>*, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>> {
        struct pair<TFENode, unsigned int> *_field1;
    } _field3;
};

struct vector<std::__1::pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>>, std::__1::allocator<std::__1::pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>>>> {
    struct pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>> *__begin_;
    struct pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>> *__end_;
    struct __compressed_pair<std::__1::pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>>*, std::__1::allocator<std::__1::pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>>>> {
        struct pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<unsigned int, TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>>>, std::__1::allocator<std::__1::pair<unsigned int, TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>>>>> {
    struct pair<unsigned int, TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>>> *__begin_;
    struct pair<unsigned int, TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>>> *__end_;
    struct __compressed_pair<std::__1::pair<unsigned int, TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>>>*, std::__1::allocator<std::__1::pair<unsigned int, TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>>>>> {
        struct pair<unsigned int, TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<unsigned int, unsigned int>, std::__1::allocator<std::__1::pair<unsigned int, unsigned int>>> {
    struct pair<unsigned int, unsigned int> *_field1;
    struct pair<unsigned int, unsigned int> *_field2;
    struct __compressed_pair<std::__1::pair<unsigned int, unsigned int>*, std::__1::allocator<std::__1::pair<unsigned int, unsigned int>>> {
        struct pair<unsigned int, unsigned int> *_field1;
    } _field3;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int selected:1;
    unsigned int focus:1;
    unsigned int twoLines:1;
    unsigned int label:3;
} CDStruct_b8373011;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    CDStruct_c3b9c2ee _field1;
    CDStruct_c3b9c2ee _field2;
} CDStruct_90e2a262;

typedef struct {
    struct CGRect _field1;
    unsigned long long _field2;
    struct CGRect _field3[2];
    unsigned long long _field4;
} CDStruct_51b97681;

// Template types
typedef struct TRef<TUndoableAction *, TRefCountedRetainReleasePolicy> {
    struct TUndoableAction *fRef;
} TRef_9e01da98;

typedef struct TThreadSafeQueue<TNSRef<TQueuedPopoverController *>> {
    void **_field1;
    struct TMutex _field2;
    struct TConditionVariable _field3;
    struct IBaseQueueStyle<TNSRef<TQueuedPopoverController *>> *_field4;
    struct vector<TNSRef<TQueuedPopoverController *>, std::__1::allocator<TNSRef<TQueuedPopoverController *>>> _field5;
} TThreadSafeQueue_fb0c9da1;

typedef struct map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>> {
    struct __tree<std::__1::pair<TFENode, CGPoint>, std::__1::__map_value_compare<TFENode, CGPoint, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, CGPoint>>> {
        struct __tree_node<std::__1::pair<TFENode, CGPoint>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<TFENode, CGPoint>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, CGPoint, std::__1::less<TFENode>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} map_0cdea9df;

typedef struct map<TFENode, CGRect, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGRect>>> {
    struct __tree<std::__1::pair<TFENode, CGRect>, std::__1::__map_value_compare<TFENode, CGRect, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, CGRect>>> {
        struct __tree_node<std::__1::pair<TFENode, CGRect>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<TFENode, CGRect>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, CGRect, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_c5101478;

typedef struct map<const TFENode, const TFENodeVector *const, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, const TFENodeVector *const>>> {
    struct __tree<std::__1::pair<const TFENode, const TFENodeVector *const>, std::__1::__map_value_compare<const TFENode, const TFENodeVector *const, std::__1::less<const TFENode>, true>, std::__1::allocator<std::__1::pair<const TFENode, const TFENodeVector *const>>> {
        struct __tree_node<std::__1::pair<const TFENode, const TFENodeVector *const>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<const TFENode, const TFENodeVector *const>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TFENode, const TFENodeVector *const, std::__1::less<const TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_6f5aee00;

typedef struct map<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const, std::__1::less<const TFENode>, std::__1::allocator<std::__1::pair<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>>> {
    struct __tree<std::__1::pair<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>, std::__1::__map_value_compare<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const, std::__1::less<const TFENode>, true>, std::__1::allocator<std::__1::pair<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>>> {
        struct __tree_node<std::__1::pair<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const, std::__1::less<const TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_9a8e9377;

typedef struct set<TFENode, std::__1::less<TFENode>, std::__1::allocator<TFENode>> {
    struct __tree<TFENode, std::__1::less<TFENode>, std::__1::allocator<TFENode>> {
        struct __tree_node<TFENode, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TFENode, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TFENode>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_55a3e8f7;

typedef struct set<double, std::__1::less<double>, std::__1::allocator<double>> {
    struct __tree<double, std::__1::less<double>, std::__1::allocator<double>> {
        struct __tree_node<double, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<double, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<double>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_bb8d1d1f;

typedef struct unordered_map<TFENode, TFENode, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TFENode>>> {
    struct __hash_table<std::__1::pair<TFENode, TFENode>, std::__1::__unordered_map_hasher<TFENode, TFENode, TFENodeHasher, true>, std::__1::__unordered_map_equal<TFENode, TFENode, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::pair<TFENode, TFENode>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TFENode, TFENode>, void *>*> {
                struct __hash_node<std::__1::pair<TFENode, TFENode>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, TFENode, TFENodeHasher, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, TFENode, std::__1::equal_to<TFENode>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_a32ea09a;

typedef struct unordered_map<unsigned int, TNSRef<TLayoutGrid *>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TNSRef<TLayoutGrid *>>>> {
    struct __hash_table<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, std::__1::__unordered_map_hasher<unsigned int, TNSRef<TLayoutGrid *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, TNSRef<TLayoutGrid *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned int, TNSRef<TLayoutGrid *>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, TNSRef<TLayoutGrid *>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, TNSRef<TLayoutGrid *>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_79b94d18;

typedef struct vector<Browser::ColumnDesc, std::__1::allocator<Browser::ColumnDesc>> {
    struct ColumnDesc *_field1;
    struct ColumnDesc *_field2;
    struct __compressed_pair<Browser::ColumnDesc *, std::__1::allocator<Browser::ColumnDesc>> {
        struct ColumnDesc *_field1;
    } _field3;
} vector_abc0d4d8;

typedef struct vector<DataBrowserItemSpatialData, std::__1::allocator<DataBrowserItemSpatialData>> {
    struct DataBrowserItemSpatialData *__begin_;
    struct DataBrowserItemSpatialData *__end_;
    struct __compressed_pair<DataBrowserItemSpatialData *, std::__1::allocator<DataBrowserItemSpatialData>> {
        struct DataBrowserItemSpatialData *__first_;
    } __end_cap_;
} vector_3577cbd0;

typedef struct vector<TAccessControlInfo, std::__1::allocator<TAccessControlInfo>> {
    struct TAccessControlInfo *_field1;
    struct TAccessControlInfo *_field2;
    struct __compressed_pair<TAccessControlInfo *, std::__1::allocator<TAccessControlInfo>> {
        struct TAccessControlInfo *_field1;
    } _field3;
} vector_27cb8753;

typedef struct vector<TFENodePropertyList, std::__1::allocator<TFENodePropertyList>> {
    struct TFENodePropertyList *_field1;
    struct TFENodePropertyList *_field2;
    struct __compressed_pair<TFENodePropertyList *, std::__1::allocator<TFENodePropertyList>> {
        struct TFENodePropertyList *_field1;
    } _field3;
} vector_d50fdf79;

typedef struct vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>> {
    struct pair<TFENode, unsigned int> *_field1;
    struct pair<TFENode, unsigned int> *_field2;
    struct __compressed_pair<std::__1::pair<TFENode, unsigned int>*, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>> {
        struct pair<TFENode, unsigned int> *_field1;
    } _field3;
} vector_614ab7ad;

typedef struct vector<std::__1::pair<unsigned int, TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>>>, std::__1::allocator<std::__1::pair<unsigned int, TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>>>>> {
    struct pair<unsigned int, TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>>> *__begin_;
    struct pair<unsigned int, TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>>> *__end_;
    struct __compressed_pair<std::__1::pair<unsigned int, TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>>>*, std::__1::allocator<std::__1::pair<unsigned int, TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>>>>> {
        struct pair<unsigned int, TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>>> *__first_;
    } __end_cap_;
} vector_d74929ad;

typedef struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> _field3;
} vector_47ba67f1;

#pragma mark -

/*
 * File: /System/Library/CoreServices/Finder.app/Contents/MacOS/Finder
 * UUID: E66EA62C-F929-30B3-BB53-5D8685451059
 * Arch: Intel x86-64 (x86_64)
 *       Minimum Mac OS X version: 10.8.0
 *
 *       Objective-C Garbage Collection: Unsupported
 *       This file has protected segments, decrypting.
 */

@protocol AccessibilityProtocol
- (void)accessibilityPerformAction:(id)arg1 onCell:(id)arg2;
@end

@protocol BackupBrowserController <NSObject>
@property(retain, nonatomic) NSMutableArray *watchedViews;
@property(nonatomic) struct TFENodeVector backupLastUserSelection;
- (struct TFENodeVector)nodesToRestore;
- (struct CGPoint)lastScrollPosition;
- (void)mapBackupSelectionToContainer:(const struct TFENode *)arg1 outSelection:(struct TFENodeVector *)arg2;
- (void)backupTargetDeactivate:(const struct TFENode *)arg1;
- (void)backupTargetActivate:(const struct TFENode *)arg1;
- (void)backupDismissed;
- (void)setSnapshot:(const struct TTimeMachineTarget *)arg1;
- (const struct TTimeMachineTarget *)snapshot;
@end

@protocol BrowserController <NSObject, NSSharingServiceDelegate, NSSharingServicePickerDelegate>
@property(nonatomic) BOOL binding;
@property(readonly, nonatomic) BOOL isTimeMachineBrowser;
@property(retain, nonatomic) TNodeViewSettings *viewSettings;
@property(retain, nonatomic) NSString *viewStyle;
@property(retain, nonatomic) NSString *groupBy;
@property(nonatomic) struct TNodeBrowser *nodeBrowser;
@property(readonly) TBrowserViewController *browserViewController;
- (BOOL)isAppCentric;
- (BOOL)isICloud;
- (BOOL)uiAllowsRenamingNode:(const struct TFENode *)arg1;
- (void)setTargetPath:(const struct TFENodeVector *)arg1 withViewStyle:(id)arg2 rebuildView:(BOOL)arg3 retarget:(BOOL)arg4;
- (void)refreshSnapshots;
- (id)restoreImages;
- (struct TString)pathForOriginalAbsolutePath:(const struct TString *)arg1;
- (struct TFENode)targetForOriginalNode:(const struct TFENode *)arg1;
- (struct TFENode)originalOrLatestNodeForNode:(const struct TFENode *)arg1;
- (struct TFENode)originalNodeForNode:(const struct TFENode *)arg1;
- (BOOL)isBackupDeleteAllowed;
- (BOOL)isValidTargetForSnapshot:(const struct TFENode *)arg1;
- (const struct TFENode *)snapshotNode;
- (BOOL)isBackupBrowser;
- (BOOL)isSnapshotImageBrowser;
- (id)viewStyleFromState:(id)arg1;
- (void)makeKeyAndOrderFront;
- (void)drawCompletelyIntoBackBuffer;
- (id)window;
- (void)updateSearchTarget:(struct TFENode)arg1;
- (void)targetToSearch;
- (id)searchFieldText;
- (BOOL)showScopeBar;
- (void)searchWasChanged;
- (void)saveQuery:(BOOL)arg1;
- (void)updateForSearchSliceChange;
- (BOOL)usesSuggestions;
- (id)searchSliceController;
- (struct TMDQueryAliasNode *)savedSearchTarget;
- (struct TMDQueryAliasNode *)searchTarget;
- (void)resetHistory;
- (void)historyChanged;
- (BOOL)nodeIsDimmed:(const struct TFENode *)arg1;
- (void)hideOverlayScrollers;
- (void)viewContentChanged;
- (struct CGSize)minimumBrowserViewSize;
- (void)reduceRootedPath:(struct TFENodeVector *)arg1;
- (void)openLocation:(const struct TFENode *)arg1 origin:(struct ISpawnOrigin *)arg2;
- (id)nodeViewSettings;
- (struct TFENode)sidebarTarget;
- (const struct TFENodeVector *)targetPath;
- (void)setTargetPath:(const struct TFENodeVector *)arg1 withViewStyle:(id)arg2 rebuildView:(BOOL)arg3;
- (void)setTargetPath:(const struct TFENodeVector *)arg1 withViewStyle:(id)arg2;
- (void)newTargetPathForNode:(const struct TFENode *)arg1 existingPath:(const struct TFENodeVector *)arg2 newPath:(struct TFENodeVector *)arg3;
- (struct TFENode)target;
- (void)sidebarDidChangeVisibility:(BOOL)arg1;
- (BOOL)sidebarIsVisible;
- (BOOL)shouldShowSidebarSplitter;
- (BOOL)resultCountIsPartial;
- (void)browserSelectionChanged;
- (void)openSelection;

@optional
- (void)cacheSharedItems:(struct TFENodeVector *)arg1;
- (BOOL)shouldTypeSelectForEvent:(id)arg1 withCurrentSearchString:(id)arg2;
- (BOOL)quickLookShouldShowOpenButtonForNode:(const struct TFENode *)arg1;
- (void)openQuickLookNode:(const struct TFENode *)arg1;
- (BOOL)allowsBrowsingPackages;
- (BOOL)canBrowseNode:(const struct TFENode *)arg1;
- (BOOL)urlIsDimmed:(id)arg1;
- (BOOL)urlIsDimmed:(id)arg1 itemIsContainer:(BOOL)arg2 itemIsPackage:(BOOL)arg3;
- (id)toolbar;
- (unsigned long long)selectedNodesCount;
@end

@protocol DMAsyncDelegate
- (void)dmAsyncFinishedForDisk:(struct __DADisk *)arg1 mainError:(int)arg2 detailError:(int)arg3 dictionary:(id)arg4;
- (void)dmAsyncMessageForDisk:(struct __DADisk *)arg1 string:(id)arg2 dictionary:(id)arg3;
- (void)dmAsyncProgressForDisk:(struct __DADisk *)arg1 barberPole:(BOOL)arg2 percent:(float)arg3;
- (void)dmAsyncStartedForDisk:(struct __DADisk *)arg1;
@end

@protocol FIAliasResolution <NSObject>
- (void)alias:(const struct TFENode *)arg1 resolvedAs:(const struct TFENode *)arg2 temporaryNode:(const struct TFENode *)arg3;
@end

@protocol IAsyncNodeOperationDelegateProtocol <NSObject>

@optional
- (int)asyncNodeOperation:(id)arg1 completedNotification:(const struct OperationMonitor *)arg2;
- (int)asyncNodeOperation:(id)arg1 subOperationCompleted:(unsigned int)arg2 targetNode:(const struct TFENode *)arg3;
- (int)asyncNodeOperation:(id)arg1 subOperationStarted:(unsigned int)arg2;
- (int)asyncNodeOperation:(id)arg1 errorNotification:(const struct OperationMonitor *)arg2 error:(const struct OperationErrorRecord *)arg3 reply:(struct NodeEventReply *)arg4;
- (int)asyncNodeOperation:(id)arg1 statusNotification:(const struct OperationMonitor *)arg2;
@end

@protocol IKImageBrowserDatasourceItemPrivate

@optional
- (id)statusInfo;
- (id)statusImageForCell:(id)arg1;
- (id)statusInfoForCell:(id)arg1;
- (BOOL)datasourceItemIsThreadSafe;
- (id)IKImageRepresentationWithType:(id)arg1;
- (id)inlinePreviewQuickLookClientProperties;
- (struct CGRect)quickLookContentFrameForImageSize:(struct CGSize)arg1;
- (struct OpaqueIconRef *)createAlternativeIconRepresentation;
- (struct OpaqueIconRef *)createAlternativeIconRepresentationWithOptions:(id)arg1;
- (id)imageToDrawForCell:(id)arg1;
- (BOOL)isDimmed;
- (BOOL)holesFlavor;
- (struct __CFDictionary *)quickLookThumbnailOptions;
- (id)_ikThumbnailImage;
- (id)posterImage;
- (double)aspectRatio;
@end

@protocol IKImageBrowserLayoutManagerDelegate <NSObject>
- (CDStruct_c3b9c2ee)contentSize;
- (CDStruct_90e2a262)cellFrameAtIndex:(unsigned long long)arg1;
- (id)cellIndexesInRect:(CDStruct_90e2a262)arg1;
- (id)cellIndexesAtLocation:(CDStruct_c3b9c2ee)arg1;
@end

@protocol IKImageFlowDelegate <NSObject>

@optional
- (void)imageFlow:(id)arg1 cellWasDoubleClickedAtIndex:(unsigned long long)arg2;
- (void)imageFlow:(id)arg1 startResizingWithEvent:(id)arg2;
- (void)imageFlow:(id)arg1 didLoadItemAtIndex:(unsigned long long)arg2;
- (void)imageFlowDidStabilize:(id)arg1;
- (void)imageFlowWillStabilize:(id)arg1;
- (void)imageFlow:(id)arg1 didSelectItemAtIndex:(unsigned long long)arg2;
@end

@protocol ISpawnOriginDelegateProtocol <NSObject>
- (id)zoomImageForNode:(const struct TFENode *)arg1 contentRect:(struct CGRect *)arg2;
- (struct CGRect)globalZoomRectForNode:(const struct TFENode *)arg1;

@optional
- (id)quickLookSharedPreviewViewForPreviewNode:(const struct TFENode *)arg1;
@end

@protocol NSAnimationDelegate <NSObject>

@optional
- (void)animation:(id)arg1 didReachProgressMark:(float)arg2;
- (float)animation:(id)arg1 valueForProgress:(float)arg2;
- (void)animationDidEnd:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (BOOL)animationShouldStart:(id)arg1;
@end

@protocol NSApplicationDelegate <NSObject>

@optional
- (void)applicationDidChangeScreenParameters:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidUpdate:(id)arg1;
- (void)applicationWillUpdate:(id)arg1;
- (void)applicationDidResignActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillBecomeActive:(id)arg1;
- (void)applicationDidUnhide:(id)arg1;
- (void)applicationWillUnhide:(id)arg1;
- (void)applicationDidHide:(id)arg1;
- (void)applicationWillHide:(id)arg1;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillFinishLaunching:(id)arg1;
- (void)application:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)application:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (id)application:(id)arg1 willPresentError:(id)arg2;
- (id)applicationDockMenu:(id)arg1;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(id)arg1;
- (unsigned long long)application:(id)arg1 printFiles:(id)arg2 withSettings:(id)arg3 showPrintPanels:(BOOL)arg4;
- (BOOL)application:(id)arg1 printFile:(id)arg2;
- (BOOL)application:(id)arg1 openFileWithoutUI:(id)arg2;
- (BOOL)applicationOpenUntitledFile:(id)arg1;
- (BOOL)applicationShouldOpenUntitledFile:(id)arg1;
- (BOOL)application:(id)arg1 openTempFile:(id)arg2;
- (void)application:(id)arg1 openFiles:(id)arg2;
- (BOOL)application:(id)arg1 openFile:(id)arg2;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
@end

@protocol NSBrowserDelegate <NSObject>

@optional
- (id)browser:(id)arg1 selectionIndexesForProposedSelection:(id)arg2 inColumn:(long long)arg3;
- (void)browser:(id)arg1 didChangeLastColumn:(long long)arg2 toColumn:(long long)arg3;
- (id)browser:(id)arg1 headerViewControllerForItem:(id)arg2;
- (id)browser:(id)arg1 previewViewControllerForLeafItem:(id)arg2;
- (long long)browser:(id)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 inColumn:(long long)arg4 forString:(id)arg5;
- (BOOL)browser:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (id)browser:(id)arg1 typeSelectStringForRow:(long long)arg2 inColumn:(long long)arg3;
- (BOOL)browser:(id)arg1 acceptDrop:(id)arg2 atRow:(long long)arg3 column:(long long)arg4 dropOperation:(unsigned long long)arg5;
- (unsigned long long)browser:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long *)arg3 column:(long long *)arg4 dropOperation:(unsigned long long *)arg5;
- (id)browser:(id)arg1 draggingImageForRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 withEvent:(id)arg4 offset:(struct CGPoint *)arg5;
- (BOOL)browser:(id)arg1 canDragRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 withEvent:(id)arg4;
- (id)browser:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedRowsWithIndexes:(id)arg3 inColumn:(long long)arg4;
- (BOOL)browser:(id)arg1 writeRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 toPasteboard:(id)arg4;
- (BOOL)browser:(id)arg1 shouldShowCellExpansionForRow:(long long)arg2 column:(long long)arg3;
- (void)browserColumnConfigurationDidChange:(id)arg1;
- (double)browser:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (double)browser:(id)arg1 shouldSizeColumn:(long long)arg2 forUserResize:(BOOL)arg3 toWidth:(double)arg4;
- (void)browserDidScroll:(id)arg1;
- (void)browserWillScroll:(id)arg1;
- (BOOL)browser:(id)arg1 isColumnValid:(long long)arg2;
- (BOOL)browser:(id)arg1 selectRow:(long long)arg2 inColumn:(long long)arg3;
- (BOOL)browser:(id)arg1 selectCellWithString:(id)arg2 inColumn:(long long)arg3;
- (id)browser:(id)arg1 titleOfColumn:(long long)arg2;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (BOOL)browser:(id)arg1 shouldEditItem:(id)arg2;
- (void)browser:(id)arg1 setObjectValue:(id)arg2 forItem:(id)arg3;
- (id)rootItemForBrowser:(id)arg1;
- (double)browser:(id)arg1 heightOfRow:(long long)arg2 inColumn:(long long)arg3;
- (id)browser:(id)arg1 objectValueForItem:(id)arg2;
- (BOOL)browser:(id)arg1 isLeafItem:(id)arg2;
- (id)browser:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)browser:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)browser:(id)arg1 createRowsForColumn:(long long)arg2 inMatrix:(id)arg3;
- (long long)browser:(id)arg1 numberOfRowsInColumn:(long long)arg2;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (id)control:(id)arg1 textView:(id)arg2 completions:(id)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(id)arg1 isValidObject:(id)arg2;
- (void)control:(id)arg1 didFailToValidatePartialString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 didFailToFormatString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (BOOL)control:(id)arg1 textShouldBeginEditing:(id)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDraggingSource <NSObject>
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;

@optional
- (BOOL)ignoreModifierKeysForDraggingSession:(id)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggingSession:(id)arg1 movedToPoint:(struct CGPoint)arg2;
- (void)draggingSession:(id)arg1 willBeginAtPoint:(struct CGPoint)arg2;
@end

@protocol NSFileProvider <NSObject>
@property(readonly) NSOperationQueue *_providedItemsOperationQueue;
@property(readonly) NSURL *_providedItemsURL;
- (void)_provideItemAtURL:(id)arg1 completionHandler:(id)arg2;

@optional
@property(readonly) NSString *_fileReactorID;
- (void)_cancelProvidingItemAtURL:(id)arg1 toReaderWithID:(id)arg2;
- (void)_provideItemAtURL:(id)arg1 toReaderWithID:(id)arg2 completionHandler:(id)arg3;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(id)arg1 onScreen:(id)arg2;
- (void)menu:(id)arg1 willHighlightItem:(id)arg2;
- (void)menuDidClose:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
- (id)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@optional
- (id)debugDescription;
@end

@protocol NSOpenSavePanelDelegate <NSObject>

@optional
- (void)panelSelectionDidChange:(id)arg1;
- (void)panel:(id)arg1 willExpand:(BOOL)arg2;
- (id)panel:(id)arg1 userEnteredFilename:(id)arg2 confirmed:(BOOL)arg3;
- (void)panel:(id)arg1 didChangeToDirectoryURL:(id)arg2;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (BOOL)panel:(id)arg1 shouldEnableURL:(id)arg2;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (id)outlineView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedItems:(id)arg3;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(id)arg1 updateDraggingItemsForDrag:(id)arg2;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (void)outlineView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(id)arg4;
- (id)outlineView:(id)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (id)outlineView:(id)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(id)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemWillCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewItemWillExpand:(id)arg1;
- (void)outlineViewSelectionIsChanging:(id)arg1;
- (void)outlineViewColumnDidResize:(id)arg1;
- (void)outlineViewColumnDidMove:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(id)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (id)outlineView:(id)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(id)arg4;
- (id)outlineView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 item:(id)arg3;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)outlineView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(id)arg1 didDragTableColumn:(id)arg2;
- (void)outlineView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)outlineView:(id)arg1 mouseDownInHeaderOfTableColumn:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectTableColumn:(id)arg2;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (void)outlineView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)outlineView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
@end

@protocol NSPasteboardWriting <NSObject>
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;

@optional
- (unsigned long long)writingOptionsForType:(id)arg1 pasteboard:(id)arg2;
@end

@protocol NSPathControlDelegate <NSObject>

@optional
- (void)pathControl:(id)arg1 willPopUpMenu:(id)arg2;
- (void)pathControl:(id)arg1 willDisplayOpenPanel:(id)arg2;
- (BOOL)pathControl:(id)arg1 acceptDrop:(id)arg2;
- (unsigned long long)pathControl:(id)arg1 validateDrop:(id)arg2;
- (BOOL)pathControl:(id)arg1 shouldDragPathComponentCell:(id)arg2 withPasteboard:(id)arg3;
@end

@protocol NSPopoverDelegate <NSObject>

@optional
- (void)popoverDidClose:(id)arg1;
- (void)popoverWillClose:(id)arg1;
- (void)popoverDidShow:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (id)detachableWindowForPopover:(id)arg1;
- (BOOL)popoverShouldClose:(id)arg1;
@end

@protocol NSRuleEditorDelegate <NSObject>
- (id)ruleEditor:(id)arg1 displayValueForCriterion:(id)arg2 inRow:(long long)arg3;
- (id)ruleEditor:(id)arg1 child:(long long)arg2 forCriterion:(id)arg3 withRowType:(unsigned long long)arg4;
- (long long)ruleEditor:(id)arg1 numberOfChildrenForCriterion:(id)arg2 withRowType:(unsigned long long)arg3;

@optional
- (void)ruleEditorRowsDidChange:(id)arg1;
- (id)ruleEditor:(id)arg1 predicatePartsForCriterion:(id)arg2 withDisplayValue:(id)arg3 inRow:(long long)arg4;
@end

@protocol NSSharingServiceDelegate <NSObject>

@optional
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (void)sharingService:(id)arg1 didShareItems:(id)arg2;
- (void)sharingService:(id)arg1 didFailToShareItems:(id)arg2 error:(id)arg3;
- (void)sharingService:(id)arg1 willShareItems:(id)arg2;
@end

@protocol NSSharingServicePickerDelegate <NSObject>

@optional
- (void)sharingServicePicker:(id)arg1 didChooseSharingService:(id)arg2;
- (id)sharingServicePicker:(id)arg1 delegateForSharingService:(id)arg2;
- (id)sharingServicePicker:(id)arg1 sharingServicesForItems:(id)arg2 proposedSharingServices:(id)arg3;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(id)arg1;
- (void)splitViewWillResizeSubviews:(id)arg1;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
@end

@protocol NSTabViewDelegate <NSObject>

@optional
- (void)tabViewDidChangeNumberOfTabViewItems:(id)arg1;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;
- (BOOL)tabView:(id)arg1 shouldSelectTabViewItem:(id)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (id)tableView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedRowsWithIndexes:(id)arg3;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)tableView:(id)arg1 updateDraggingItemsForDrag:(id)arg2;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(id)arg4;
- (id)tableView:(id)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(id)arg1;
- (void)tableViewColumnDidResize:(id)arg1;
- (void)tableViewColumnDidMove:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (long long)tableView:(id)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(id)arg4;
- (id)tableView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(id)arg1 didDragTableColumn:(id)arg2;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)tableView:(id)arg1 mouseDownInHeaderOfTableColumn:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectTableColumn:(id)arg2;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(id)arg1;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (BOOL)textShouldEndEditing:(id)arg1;
- (BOOL)textShouldBeginEditing:(id)arg1;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (id)undoManagerForTextView:(id)arg1;
- (void)textView:(id)arg1 draggedCell:(id)arg2 inRect:(struct CGRect)arg3 event:(id)arg4;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2;
- (id)textView:(id)arg1 willShowSharingServicePicker:(id)arg2 forItems:(id)arg3;
- (id)textView:(id)arg1 URLForContentsOfTextAttachment:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)textView:(id)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 results:(id)arg5 orthography:(id)arg6 wordCount:(long long)arg7;
- (id)textView:(id)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(id)arg3 types:(unsigned long long *)arg4;
- (id)textView:(id)arg1 menu:(id)arg2 forEvent:(id)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(id)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (id)textView:(id)arg1 willDisplayToolTip:(id)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (id)textView:(id)arg1 shouldChangeTypingAttributes:(id)arg2 toAttributes:(id)arg3;
- (BOOL)textView:(id)arg1 shouldChangeTextInRanges:(id)arg2 replacementStrings:(id)arg3;
- (id)textView:(id)arg1 willChangeSelectionFromCharacterRanges:(id)arg2 toCharacterRanges:(id)arg3;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(id)arg1 writeCell:(id)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(id)arg4 type:(id)arg5;
- (id)textView:(id)arg1 writablePasteboardTypesForCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(id)arg1 draggedCell:(id)arg2 inRect:(struct CGRect)arg3 event:(id)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSToolbarDelegate <NSObject>

@optional
- (void)toolbarDidRemoveItem:(id)arg1;
- (void)toolbarWillAddItem:(id)arg1;
- (id)toolbarSelectableItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (BOOL)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (BOOL)connectionShouldUseCredentialStorage:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
@end

@protocol NSUserInterfaceItemIdentification
@property(copy) NSString *identifier;
@end

@protocol NSValidatedUserInterfaceItem
- (long long)tag;
- (SEL)action;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidExitVersionBrowser:(id)arg1;
- (void)windowWillExitVersionBrowser:(id)arg1;
- (void)windowDidEnterVersionBrowser:(id)arg1;
- (void)windowWillEnterVersionBrowser:(id)arg1;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowWillEnterFullScreen:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowWillStartLiveResize:(id)arg1;
- (void)windowDidEndSheet:(id)arg1;
- (void)windowWillBeginSheet:(id)arg1;
- (void)windowDidChangeBackingProperties:(id)arg1;
- (void)windowDidChangeScreenProfile:(id)arg1;
- (void)windowDidChangeScreen:(id)arg1;
- (void)windowDidUpdate:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)windowWillMiniaturize:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowWillMove:(id)arg1;
- (void)windowDidExpose:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)window:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (struct CGSize)window:(id)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (id)customWindowsToExitFullScreenForWindow:(id)arg1;
- (void)windowDidFailToEnterFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (id)customWindowsToEnterFullScreenForWindow:(id)arg1;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(id)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(id)arg1 shouldDragDocumentWithEvent:(id)arg2 from:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (id)windowWillReturnUndoManager:(id)arg1;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol QLInlinePreviewDelegate <NSObject>
- (struct CGRect)inlinePreview:(id)arg1 frameForPreviewItem:(id)arg2;

@optional
- (void)inlinePreview:(id)arg1 willChangeToState:(int)arg2;
- (void)inlinePreview:(id)arg1 didChangeToState:(int)arg2;
- (void)inlinePreview:(id)arg1 didLoadPreviewItem:(id)arg2;
- (void)inlinePreview:(id)arg1 willLoadPreviewItem:(id)arg2;
- (BOOL)inlinePreviewShouldAlwaysHandleMultiClicks:(id)arg1;
- (int)inlinePreview:(id)arg1 expectedModeForPreviewItem:(id)arg2 flavor:(int *)arg3;
- (struct CGRect)inlinePreview:(id)arg1 rolloverFrameForPreviewItem:(id)arg2;
- (struct CGRect)inlinePreview:(id)arg1 contentFrameForPreviewItem:(id)arg2;
@end

@protocol QLPreviewItem <NSObject>
@property(readonly) NSURL *previewItemURL;

@optional
@property(readonly) id previewItemDisplayState;
@property(readonly) NSString *previewItemTitle;
@end

@protocol QLPreviewPanelDataSource
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
@end

@protocol QLPreviewPanelDelegate <NSWindowDelegate>

@optional
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (BOOL)previewPanel:(id)arg1 handleEvent:(id)arg2;
@end

@protocol QLPreviewViewDelegate <NSObject>

@optional
- (unsigned long long)previewView:(id)arg1 draggingSourceOperationMaskForLocal:(BOOL)arg2;
- (BOOL)previewView:(id)arg1 writePreviewItem:(id)arg2 toPasteboard:(id)arg3;
- (id)previewView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forPreviewItem:(id)arg3;
- (BOOL)previewView:(id)arg1 acceptDrop:(id)arg2 onPreviewItem:(id)arg3;
- (unsigned long long)previewView:(id)arg1 validateDrop:(id)arg2 onPreviewItem:(id)arg3;
- (id)previewView:(id)arg1 customViewForPreviewItem:(id)arg2;
- (BOOL)previewView:(id)arg1 shouldPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 timedOutLoadingPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 didShowPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 willShowPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 didLoadPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 willLoadPreviewItem:(id)arg2;
@end

@protocol QLSeamlessCloserDelegate <NSObject>

@optional
- (id)seamlessCloserTransitionImageForPreviewItem:(id)arg1 contentRect:(struct CGRect *)arg2;
- (struct CGRect)seamlessCloserSourceFrameOnScreenForPreviewItem:(id)arg1;
- (id)seamlessCloserSourcePreviewViewForPreviewItem:(id)arg1;
@end

@protocol QLSeamlessOpenerDelegate <NSObject>

@optional
- (id)seamlessOpener:(id)arg1 transientWindowForItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 transientImageAtFrame:(struct CGRect *)arg2 forItem:(id)arg3;
- (void)seamlessOpener:(id)arg1 failedToOpenItems:(id)arg2 withError:(id)arg3;
- (void)seamlessOpener:(id)arg1 openedItem:(id)arg2 seamlessly:(BOOL)arg3;
- (id)seamlessOpenerTransientWindow:(id)arg1 level:(long long *)arg2;
- (int)seamlessOpener:(id)arg1 supportForPreviewItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (id)seamlessOpener:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3 windowLevel:(long long *)arg4;
- (struct CGRect)seamlessOpener:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 sourceBubbleForPreviewItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 sourcePreviewViewForPreviewItem:(id)arg2;
@end

@protocol TAirDropNotAvailableDelegateProtocol <NSObject>
- (void)actionButtonPressed:(id)arg1;
- (id)buttonTitle;
- (id)explanationText;
@end

@protocol TAsyncChooseAppBinderProtocol
- (void)invoke:(const struct TFENodeVector *)arg1 chosenApp:(const struct TFENode *)arg2 alwaysOpen:(BOOL)arg3;
@end

@protocol TCoalescingNodeObserverProtocol <NSObject>

@optional
- (void)queryStopped:(const struct TFENode *)arg1;
- (void)childrenSpatialDataChanged:(const struct TFENode *)arg1;
- (void)aliasTargetChanged:(const struct TFENode *)arg1;
- (void)openChildListUpdated:(const struct TFENode *)arg1;
- (void)syncCompleted:(const struct TFENode *)arg1;
- (void)openSyncCompleted:(const struct TFENode *)arg1;
- (void)openSyncStarted:(const struct TFENode *)arg1;
- (void)nodeMDAttributeChanged:(const struct TFENode *)arg1 attributes:(id)arg2 isDisplayAttributes:(BOOL)arg3;
- (void)nodeMoved:(const struct TFENode *)arg1;
- (void)bulkNodesDeleted:(const map_6f5aee00 *)arg1;
- (void)bulkNodesChanged:(const map_9a8e9377 *)arg1;
- (void)bulkNodesAdded:(const map_6f5aee00 *)arg1;
- (void)aliasesTargetChanged:(const struct TFENodeVector *)arg1;
- (void)nodesGoingAway:(const struct TFENodeVector *)arg1;
- (void)nodesDeleted:(const struct TFENodeVector *)arg1 fromObservedNode:(const struct TFENode *)arg2;
- (void)nodesChanged:(const vector_614ab7ad *)arg1 inObservedNode:(const struct TFENode *)arg2;
- (void)nodesAdded:(const struct TFENodeVector *)arg1 toObservedNode:(const struct TFENode *)arg2;
@end

@protocol TDesktopLayerDelegate
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
@end

@protocol TDragImageProtocol <NSObject>

@optional
- (BOOL)isDragImageOpaque;
@end

@protocol TDraggingSource <NSDraggingSource>

@optional
- (void)startDragInView:(id)arg1 withEvent:(id)arg2;
@end

@protocol TFileSystemOperationDelegateProtocol <IAsyncNodeOperationDelegateProtocol>

@optional
- (int)asyncNodeOperation:(id)arg1 uniqueNameProc:(id)arg2 seedFileSuffix:(id)arg3 reservedName:(id)arg4;
@end

@protocol TFlowViewDelegate <IKImageFlowDelegate>

@optional
- (void)flowViewDidReloadData:(id)arg1;
@end

@protocol TGroupAsFolderObserver

@optional
- (void)groupAsFolderUndoCompleted:(struct TNodeTask *)arg1 forGroupFolder:(const struct TFENode *)arg2 nodes:(const struct TFENodeVector *)arg3 status:(int)arg4;
- (void)groupAsFolderUndoStarted:(struct TNodeTask *)arg1 forFolder:(const struct TFENode *)arg2;
- (void)groupAsFolderCompleted:(struct TNodeTask *)arg1 withFolder:(const struct TFENode *)arg2 status:(int)arg3;
- (void)groupAsFolder:(struct TNodeTask *)arg1 createdGroupFolder:(const struct TFENode *)arg2;
@end

@protocol TIconInlinePreviewDataSource <NSObject>
@property(readonly) NSArray *inlinePreviewVisibleItems;
@property(readonly) BOOL inlinePreviewLayerIsInWindowServer;
@property(readonly) CALayer *inlinePreviewLayer;
@property(readonly) NSView *inlinePreviewView;
- (struct CGRect)inlinePreviewFrameForItem:(id)arg1;
- (int)inlinePreviewModeForItem:(id)arg1 flavor:(int *)arg2;

@optional
- (struct CGRect)inlinePreviewContentFrameForItem:(id)arg1;
- (struct CGRect)inlinePreviewRolloverFrameForItem:(id)arg1;
- (void)inlinePreviewIsVisible:(BOOL)arg1 forItem:(id)arg2;
- (void)inlinePreviewWillLoadForItem:(id)arg1;
@end

@protocol TIdentityPickerDelegate <NSObject>
- (void)identityPickerDidEnd:(id)arg1 returnCode:(long long)arg2;
@end

@protocol TNWOperationDelegateProtocol <NSObject>

@optional
- (void)nwOperationEventBlocked:(id)arg1;
- (void)nwOperationEventConflict:(id)arg1;
- (void)nwOperationEventInformation:(id)arg1;
- (void)nwOperationEventConnecting:(id)arg1;
- (void)nwOperationEventErrorOccurred:(id)arg1;
- (void)nwOperationEventFinished:(id)arg1;
- (void)nwOperationEventPostprocess:(id)arg1;
- (void)nwOperationEventProgress:(id)arg1;
- (void)nwOperationEventPreprocess:(id)arg1;
- (void)nwOperationEventStarted:(id)arg1;
- (void)nwOperationEventCanceled:(id)arg1;
- (void)nwOperationEventWaitForAnswer:(id)arg1;
- (void)nwOperationEventAskUser:(id)arg1;
- (void)nwOperationEventNewOperation:(id)arg1;
- (void)preflightNWOperationEvent:(long long)arg1 results:(id)arg2;
@end

@protocol TNameTextFieldDelegate <NSObject>
- (BOOL)startEditingWithNode:(const struct TFENode *)arg1 renameOp:(id)arg2;
- (BOOL)uiAllowsRenamingNode:(const struct TFENode *)arg1;
- (void)nameFieldWillDraw:(id)arg1;
@end

@protocol TNodeEventPostProcess <NSObject>
- (void)validateNodeProcessing:(struct TFENodeVector *)arg1 forComparator:(struct TBaseNodeComparator *)arg2 andGroups:(struct TGroupedNodes *)arg3 withManager:(struct TGroupManager *)arg4;
- (void)processNodes:(struct TFENodeVector *)arg1 andGroup:(struct TGroupedNodes *)arg2 withCanceledFlag:(_Bool *)arg3;
@end

@protocol TNodeObserverProtocol <NSObject>

@optional
- (void)queryStopped:(const struct TFENode *)arg1;
- (void)childrenSpatialDataChanged:(const struct TFENode *)arg1;
- (void)aliasTargetChanged:(const struct TFENode *)arg1;
- (void)openChildListUpdated:(const struct TFENode *)arg1;
- (void)syncCompleted:(const struct TFENode *)arg1;
- (void)openSyncCompleted:(const struct TFENode *)arg1;
- (void)openSyncStarted:(const struct TFENode *)arg1;
- (void)nodeMDAttributeChanged:(const struct TFENode *)arg1 attributes:(id)arg2 isDisplayAttributes:(BOOL)arg3;
- (void)nodeGoingAway:(const struct TFENode *)arg1;
- (void)nodeMoved:(const struct TFENode *)arg1;
- (void)nodeDeleted:(const struct TFENode *)arg1 fromObservedNode:(const struct TFENode *)arg2;
- (void)nodeChanged:(const struct TFENode *)arg1 inObservedNode:(const struct TFENode *)arg2 property:(unsigned int)arg3;
- (void)nodeAdded:(const struct TFENode *)arg1 toObservedNode:(const struct TFENode *)arg2;
@end

@protocol TNotifierReceiverProtocol
- (void)notifierPropertyChanged:(unsigned int)arg1;
@end

@protocol TOpenPanelCallbacks <TOpenSavePanelCallbacks>
- (void)openPanelDidEnd:(id)arg1 returnCode:(long long)arg2;
- (BOOL)validateNode:(const struct TFENode *)arg1;
- (BOOL)shouldEnableNode:(const struct TFENode *)arg1;
@end

@protocol TOpenSavePanelCallbacks
- (BOOL)shouldEnableOKButtonForNodes:(const struct TFENodeVector *)arg1;
@end

@protocol TPBFSizingThreadCallbackProtocol
- (void)pbfSizingCompletionCallback:(unsigned long long)arg1;
@end

@protocol TQLPreviewWindowControllerProtocol <NSObject>
- (BOOL)isBackupBrowser;

@optional
- (BOOL)quickLookShouldShowOpenButtonForNode:(const struct TFENode *)arg1;
- (void)openQuickLookNode:(const struct TFENode *)arg1;
- (id)quickLookSharedPreviewViewForPreviewNode:(const struct TFENode *)arg1;
- (id)zoomImageForNode:(const struct TFENode *)arg1 contentRect:(struct CGRect *)arg2;
- (struct CGRect)globalZoomRectForNode:(const struct TFENode *)arg1;
- (BOOL)quickLookHandleEvent:(id)arg1;
- (void)getQuickLookNodes:(struct TFENodeVector *)arg1;
@end

@protocol TSavePanelCallbacks <TOpenSavePanelCallbacks>
- (void)savePanelDidEnd:(id)arg1 returnCode:(long long)arg2;
- (BOOL)validateName:(const struct TString *)arg1 inDestination:(const struct TFENode *)arg2;
@end

@protocol TSaveSearchSheetControllerDelegate <NSObject>
- (int)saveSearchWithName:(const struct TString *)arg1 inDestination:(const struct TFENode *)arg2 addToSidebar:(BOOL)arg3;
- (void)searchSaveSheetDismissedWithCode:(long long)arg1;
@end

@protocol TSharedFileListObserverProtocol <NSObject>

@optional
- (void)listChanged:(const struct TSharedFileList *)arg1;
@end

@protocol TShrinkToFitDelegateProtocol
- (void)shrinkToFitTextViewAboutToClose;
- (void)shrinkToFitTextViewEditingComplete:(id)arg1;
- (BOOL)shrinkToFitTextViewAboutToOpen;
@end

@protocol TSpringDelegate
- (void)springRefreshNode:(const struct TFENode *)arg1;
- (void)springNode:(const struct TFENode *)arg1;
@end

@protocol TStdAlertSheetClientProtocol <NSObject>
- (void)stdAlertSheetOKButtonPressed;

@optional
- (void)stdAlertSheetOtherButtonPressed;
- (void)stdAlertSheetCancelButtonPressed;
@end

@protocol TTextWithTitleFieldImplProtocol <NSObject>
- (double)calcHeightToFitOfTextFieldOnly:(struct CGSize)arg1;
- (void)setTitleFld:(id)arg1;
- (id)titleFld;
@end

@protocol TThumbnailExtractorDelegate
- (struct CGRect)thumbnailFrameForNode:(const struct TFENode *)arg1;
- (void)invalidateThumbnailForKeyNodes:(const struct TFENodeVector *)arg1;
@end

@protocol TTypeSelectDelegate <NSObject>
- (void)typeSelectNode:(const struct TFENode *)arg1;
- (unsigned long long)typeSelectGetSelectedNodes:(struct TFENodeVector *)arg1;
- (unsigned long long)typeSelectNodeCount;
- (long long)typeSelectIndexForNode:(const struct TFENode *)arg1;
- (struct TFENode)typeSelectNodeAtIndex:(unsigned long long)arg1;

@optional
- (BOOL)nodeIsGroupNode:(const struct TFENode *)arg1;
- (BOOL)nodeIsDimmed:(const struct TFENode *)arg1;
@end

@protocol TViewAnimationDelegate <NSObject>

@optional
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)animationDidStart:(id)arg1;
@end

@interface TNonAccessibleButtonCell : TButtonCell
{
}

- (BOOL)accessibilityIsIgnored;

@end

@interface TNonAccessibleButton : TButton
{
}

- (Class)cellClass;

@end

@interface TStdAlertSheetController : NSObject
{
    struct TNSRef<id<TStdAlertSheetClientProtocol>> _client;
}

+ (void)stdAlertSheetWithClient:(id)arg1 parentWindow:(id)arg2 mainText:(id)arg3 subText:(id)arg4 okStr:(id)arg5 cancelStr:(id)arg6 otherStr:(id)arg7 alertStyle:(unsigned long long)arg8 defaultButton:(int)arg9;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)alertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;

@end

@interface TSimpleStdAlertSheetClient : NSObject <TStdAlertSheetClientProtocol>
{
}

- (void)stdAlertSheetOKButtonPressed;

@end

@interface TRenameUndoRedoOperationDelegate : TRenameOperationDelegate
{
    struct TRenameUndoRedoOperationHelper *_actionHelper;
    BOOL _needToReselectNode;
    BOOL _isRenaming;
    BOOL _isUndo;
    struct TriStateBool _pendingIsUndo;
}

- (id).cxx_construct;
- (int)configureNewName:(struct TString *)arg1 forNode:(const struct TFENode *)arg2 isDisplayName:(BOOL)arg3 allowInteraction:(BOOL)arg4;
- (int)asyncNodeOperation:(id)arg1 subOperationCompleted:(unsigned int)arg2 targetNode:(const struct TFENode *)arg3;
- (int)asyncNodeOperation:(id)arg1 subOperationStarted:(unsigned int)arg2;
- (void)setNeedToReselectNode:(BOOL)arg1;
- (void)setIsUndo:(BOOL)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithRenameAction:(struct TRenameAction *)arg1;

@end

@interface TRunSoonHelper : NSObject
{
    unsigned long long _owningTargetID;
    struct TFunctorBase *_functor;
    int _dispatchType;
}

+ (void)postFunctor:(struct TFunctorBase *)arg1 withOwningTargetID:(unsigned long long)arg2 andDispatchType:(int)arg3;
- (void)finalize;
- (void)dealloc;
- (void)dispatch;
- (void)post;
- (void)repost;
- (id)runLoopModes;
- (id)initWithFunctor:(struct TFunctorBase *)arg1 withOwningTargetID:(unsigned long long)arg2 andDispatchType:(int)arg3;

@end

@interface IPropertyValueExtractor : NSObject
{
}

+ (id)extractor;
- (void)flush;
- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)defaultValue;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface IPropertyTextExtractor : IPropertyValueExtractor
{
}

- (id)defaultValue;

@end

@interface IPropertyNumberExtractor : IPropertyValueExtractor
{
}

@end

@interface IPropertyDateExtractor : IPropertyValueExtractor
{
}

@end

@interface IPropertyDictionaryExtractor : IPropertyValueExtractor
{
}

@end

@interface IPropertyArrayExtractor : IPropertyValueExtractor
{
}

@end

@interface IPropertyImageExtractor : IPropertyValueExtractor
{
}

@end

@interface IPropertyFINodeExtractor : IPropertyValueExtractor
{
}

@end

@interface TDummyNumberExtractor : IPropertyNumberExtractor
{
}

- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyNameExtractor : IPropertyTextExtractor
{
}

- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyKindExtractor : IPropertyTextExtractor
{
}

- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyKindWithoutArchitectureExtractor : TPropertyKindExtractor
{
}

- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyColumnPreviewKindWithoutArchitectureExtractor : TPropertyKindWithoutArchitectureExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (id)defaultValue;

@end

@interface IPropertySizeExtractor : IPropertyValueExtractor
{
    struct TFENodeVector _nodesToSize;
    struct map<TFENode, TNSRef<NSMutableDictionary *>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<NSMutableDictionary *>>>> _nodesAndSizeMap;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)flush;
- (BOOL)updateNeededWithUpdateList:(const vector_614ab7ad *)arg1;
- (BOOL)updateNeededWithChangedMap:(const map_9a8e9377 *)arg1;
- (id)value;
- (BOOL)isWaitingForPendingNode:(const struct TFENode *)arg1;
- (BOOL)isWaitingForPendingNodes;
- (long long)sumValueForProperty:(unsigned int)arg1;
- (long long)valueForProperty:(unsigned int)arg1 ofNode:(const struct TFENode *)arg2;
- (void)setValue:(long long)arg1 forProperty:(unsigned int)arg2 ofNode:(const struct TFENode *)arg3;
- (id)computeValue;
- (int)extractValueFromNode:(const struct TFENode *)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;

@end

@interface TSizePropertyExtractor : IPropertySizeExtractor
{
    unsigned int _property;
}

- (id)computeValue;
- (BOOL)isWaitingForPendingNode:(const struct TFENode *)arg1;
- (int)extractValueFromNode:(const struct TFENode *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)defaultValue;
- (id)initWithProperty:(unsigned int)arg1;

@end

@interface TPropertyLogicalSizeExtractor : TSizePropertyExtractor
{
}

+ (id)extractor;

@end

@interface TPropertyPhysicalSizeExtractor : TSizePropertyExtractor
{
}

+ (id)extractor;

@end

@interface TPropertyColumnPreviewSizeExtractor : TPropertyLogicalSizeExtractor
{
}

- (id)computeValue;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (id)defaultValue;

@end

@interface TPropertyInfoWindowSizeExtractor : TPropertyPhysicalSizeExtractor
{
    BOOL _shouldGetItemCount;
}

- (id)computeValue;
- (BOOL)isWaitingForPendingNode:(const struct TFENode *)arg1;
- (int)extractValueFromNode:(const struct TFENode *)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (void)flush;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)defaultValue;
- (id)init;

@end

@interface TPropertyWherePathExtractor : IPropertyTextExtractor
{
    struct TFENode _commonParent;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)flush;
- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (id)wherePathFromNodes:(const struct TFENodeVector *)arg1 includeFileName:(BOOL)arg2;

@end

@interface TPropertyServerURLExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyDiskImagePathExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface IPropertyCreationDateExtractor : IPropertyDateExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (id)defaultValue;

@end

@interface TPropertyCreationDateExtractor : IPropertyCreationDateExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyColumnPreviewCreationDateExtractor : IPropertyCreationDateExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;

@end

@interface IPropertyModificationDateExtractor : IPropertyDateExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (id)defaultValue;

@end

@interface TPropertyModificationDateExtractor : IPropertyModificationDateExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyColumnPreviewModificationDateExtractor : IPropertyModificationDateExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;

@end

@interface IPropertyLastOpenedDateExtractor : IPropertyDateExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (id)defaultValue;

@end

@interface TPropertyLastOpenedDateExtractor : IPropertyLastOpenedDateExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyColumnPreviewLastOpenedDateExtractor : IPropertyLastOpenedDateExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyShortVersionExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyLongVersionExtractor : TPropertyShortVersionExtractor
{
}

- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertySavedSearchQueryExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyFormatExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyCapacityExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyFreeSpaceExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyUsedExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyProcessorExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyMemoryExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (void)parseDataRef:(struct __CFData *)arg1 outStringVector:(struct TStringVector *)arg2;

@end

@interface TPropertyStartupDiskExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertySeparatorExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyFontNameExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyCopyrightExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyAliasOriginalPathExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyLabelExtractor : IPropertyNumberExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TSelectNewOriginalForAliasExtractor : TDummyNumberExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;

@end

@interface THFSTextEncodingExtractor : IPropertyNumberExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyOpenIn32BitExtractor : IPropertyNumberExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyOpenInLowRezExtractor : IPropertyNumberExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertySharedFolderExtractor : IPropertyNumberExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyStationaryPadExtractor : IPropertyNumberExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyLockedExtractor : IPropertyNumberExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyIconExtractor : IPropertyImageExtractor
{
}

- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyCommentsExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (id)defaultValue;

@end

@interface ISpotlightAttributesExtractor : IPropertyDictionaryExtractor
{
    NSArray *_attributeNames;
}

- (id)mergeAttributes:(id)arg1 withNewAttributes:(id)arg2;
- (id)whichAttributeValues;
- (void)flush;
- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1 withCurrentValue:(id)arg2;
- (id)attributeNamesForNode:(const struct TFENode *)arg1;
- (id)defaultValue;
- (void)dealloc;

@end

@interface TColumnPreviewSpotlightAttributesExtractor : ISpotlightAttributesExtractor
{
}

- (id)attributeNamesForNode:(const struct TFENode *)arg1;
- (id)whichAttributeValues;

@end

@interface TInfoSpotlightAttributesExtractor : ISpotlightAttributesExtractor
{
}

- (id)whichAttributeValues;

@end

@interface TPropertyRawNameExtractor : TPropertyNameExtractor
{
}

- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyExtensionHiddenExtractor : IPropertyNumberExtractor
{
}

- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPropertyDeviceExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (id)defaultValue;

@end

@interface TPropertyMediaCapacityExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (id)defaultValue;

@end

@interface TPropertyContentSizeExtractor : IPropertyTextExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)defaultValue;

@end

@interface IPropertyValueApplicator : NSObject
{
}

+ (id)applicator;
- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;
- (int)applyValue:(id)arg1 toNodes:(struct TFENodeVector *)arg2;

@end

@interface IPropertyTextApplicator : IPropertyValueApplicator
{
}

@end

@interface IPropertyNumberApplicator : IPropertyValueApplicator
{
}

@end

@interface IPropertyDictionaryApplicator : IPropertyValueApplicator
{
}

@end

@interface IPropertyArrayApplicator : IPropertyValueApplicator
{
}

@end

@interface IPropertyFINodeApplicator : IPropertyValueApplicator
{
}

@end

@interface TDummyNumberApplicator : IPropertyNumberApplicator
{
}

@end

@interface TDummyDictionaryApplicator : IPropertyDictionaryApplicator
{
}

@end

@interface TDummyArrayApplicator : IPropertyArrayApplicator
{
}

@end

@interface TPropertyCommentsApplicator : IPropertyTextApplicator
{
}

- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;
- (int)applyValue:(id)arg1 toNodes:(struct TFENodeVector *)arg2;

@end

@interface TPropertyLabelApplicator : IPropertyNumberApplicator
{
}

- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;
- (int)applyValue:(id)arg1 toNodes:(struct TFENodeVector *)arg2;

@end

@interface TSelectNewOriginalForAliasApplicator : IPropertyNumberApplicator
{
}

- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;
- (int)applyValue:(id)arg1 toNodes:(struct TFENodeVector *)arg2;

@end

@interface THFSTextEncodingApplicator : IPropertyNumberApplicator
{
}

- (int)applyValue:(id)arg1 toNodes:(struct TFENodeVector *)arg2;

@end

@interface TPropertyOpenIn32BitApplicator : IPropertyNumberApplicator
{
}

- (int)applyValue:(id)arg1 toNodes:(struct TFENodeVector *)arg2;

@end

@interface TPropertyOpenInLowRezApplicator : IPropertyNumberApplicator
{
}

- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;
- (int)applyValue:(id)arg1 toNodes:(struct TFENodeVector *)arg2;

@end

@interface TPropertySharedFolderApplicator : IPropertyNumberApplicator
{
}

- (int)applyValue:(id)arg1 toNodes:(struct TFENodeVector *)arg2;

@end

@interface TPropertyStationaryPadApplicator : IPropertyNumberApplicator
{
}

- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;
- (int)applyValue:(id)arg1 toNodes:(struct TFENodeVector *)arg2;

@end

@interface TPropertyLockedApplicator : IPropertyNumberApplicator
{
}

- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;
- (int)applyValue:(id)arg1 toNodes:(struct TFENodeVector *)arg2;

@end

@interface TPropertyRawNameApplicator : IPropertyTextApplicator
{
}

- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;
- (int)applyValue:(id)arg1 toNodes:(struct TFENodeVector *)arg2;

@end

@interface TPropertyExtensionHiddenApplicator : IPropertyNumberApplicator
{
}

- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;
- (int)applyValue:(id)arg1 toNodes:(struct TFENodeVector *)arg2;

@end

@interface TFENodePBWriter : NSObject <NSPasteboardWriting>
{
    struct TFENode _node;
    struct CGRect _globalBounds;
    vector_d74929ad _clippingData;
    BOOL _isSidebarItem;
    BOOL _itemNeedsConversionOnDrop;
    BOOL _privateDrag;
    long long _windowNumber;
}

@property(nonatomic) long long windowNumber; // @synthesize windowNumber=_windowNumber;
@property(nonatomic) BOOL privateDrag; // @synthesize privateDrag=_privateDrag;
@property(nonatomic) BOOL isSidebarItem; // @synthesize isSidebarItem=_isSidebarItem;
@property(nonatomic) vector_d74929ad clippingData; // @synthesize clippingData=_clippingData;
@property(nonatomic) struct CGRect globalBounds; // @synthesize globalBounds=_globalBounds;
@property(nonatomic) struct TFENode node; // @synthesize node=_node;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;
- (id)typesForClippings;
- (id)initWithNode:(const struct TFENode *)arg1 checkForTEFFilesInContainer:(BOOL)arg2;

@end

@interface TUndoableActionCompletedInfo : NSObject
{
    TRef_9e01da98 _action;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct TUndoableAction *)action;
- (id)initWithAction:(struct TUndoableAction *)arg1;

@end

@interface IOpenSaveObjectController : NSObject <NSOpenSavePanelDelegate>
{
    NSWindow *_parentWindow;
    long long _returnCode;
}

+ (id)controller;
@property(readonly) long long returnCode; // @synthesize returnCode=_returnCode;
- (BOOL)shouldEnableOKButtonForNodes:(const struct TFENodeVector *)arg1;
- (void)refreshPanel;
- (void)run;
- (void)setInitialDirectory:(const struct TFENode *)arg1;
- (void)setParentWindow:(id)arg1;
- (void)setAccessoryView:(id)arg1;
- (void)setMessageText:(id)arg1;
- (void)setCancelButtonTitle:(id)arg1;
- (void)setOKButtonTitle:(id)arg1;
- (void)setPanelTitle:(id)arg1;
- (int)defaultOptions;
- (void)dealloc;
- (id)init;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (id)panel;

@end

@interface TChooseObjectController : IOpenSaveObjectController <TOpenPanelCallbacks>
{
    TOpenPanel *_choosePanel;
}

- (void)dealloc;
- (void)openPanelDidEnd:(id)arg1 returnCode:(long long)arg2;
- (BOOL)validateNode:(const struct TFENode *)arg1;
- (BOOL)shouldEnableNode:(const struct TFENode *)arg1;
- (BOOL)panel:(id)arg1 shouldEnableURL:(id)arg2;
- (void)getSelectedNodes:(struct TFENodeVector *)arg1;
- (void)setOptions:(int)arg1;
- (int)options;
- (id)panel;
- (int)defaultOptions;
- (id)init;

@end

@interface TChooseFileController : TChooseObjectController
{
}

- (int)defaultOptions;
- (id)init;

@end

@interface TChooseFolderController : TChooseObjectController
{
}

- (int)defaultOptions;
- (id)init;

@end

@interface TSaveObjectController : IOpenSaveObjectController <TSavePanelCallbacks>
{
    TSavePanel *_savePanel;
}

- (void)savePanelDidEnd:(id)arg1 returnCode:(long long)arg2;
- (BOOL)validateName:(const struct TString *)arg1 inDestination:(const struct TFENode *)arg2;
- (id)panel;
- (void)setName:(id)arg1;
- (void)setOptions:(int)arg1;
- (int)options;
- (int)defaultOptions;
- (void)dealloc;
- (id)init;

@end

@interface TChooseAppAccessoryViewController : TViewController
{
    NSPopUpButton *_popupButton;
    NSTextField *_popupTitle;
    NSButton *_alwaysOpenWithCheckbox;
    NSImageView *_cautionImageView;
    NSTextField *_appSupportsDocTextFld;
    BOOL _showAlwaysOpenWithCheckBox;
    BOOL _alwaysOpenWithCheckboxState;
    double _titleGap;
    double _cautionGap;
    NSString *_appCanOpenMessage;
    NSString *_appCannotOpenMessage;
    TChooseAppController *_chooseAppController;
}

@property BOOL alwaysOpenWithCheckboxState; // @synthesize alwaysOpenWithCheckboxState=_alwaysOpenWithCheckboxState;
@property BOOL showAlwaysOpenWithCheckBox; // @synthesize showAlwaysOpenWithCheckBox=_showAlwaysOpenWithCheckBox;
@property int popupButtonSelectionIndex;
- (void)updateLayout;
- (void)updateAppSupportsDocText:(const struct TFENode *)arg1 withDocumentNodes:(const struct TFENodeVector *)arg2;
- (void)viewFrameChanged:(id)arg1;
- (void)loadView;
- (id)nibBundle;
- (id)nibName;
- (void)dealloc;
- (id)initWithChooseAppController:(id)arg1 withDocumentNodes:(const struct TFENodeVector *)arg2 showAlwaysOpenWithCheckbox:(BOOL)arg3 defaultAlwaysOpenWithValue:(BOOL)arg4;

@end

@interface TChooseAppController : TChooseFileController
{
    TChooseAppAccessoryViewController *_accessoryViewController;
    struct TFENodeVector _documentNodes;
    struct IAsyncChooseAppBinder *_binder;
}

+ (id)controllerWithDocumentNodes:(const struct TFENodeVector *)arg1 binder:(struct IAsyncChooseAppBinder *)arg2 showAlwaysOpenWithCheckbox:(BOOL)arg3 defaultAlwaysOpenWithValue:(BOOL)arg4;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)panelSelectionDidChange:(id)arg1;
- (BOOL)validateNode:(const struct TFENode *)arg1;
- (BOOL)shouldEnableNode:(const struct TFENode *)arg1;
- (BOOL)shouldEnableOKButtonForNodes:(const struct TFENodeVector *)arg1;
- (const struct TFENodeVector *)documentNodes;
- (void)dealloc;

@end

@interface TChooseAliasTargetController : TChooseObjectController
{
    struct TFENode _aliasNode;
    struct TFENode _newTargetNode;
}

+ (id)controllerWithAlias:(const struct TFENode *)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)validateNode:(const struct TFENode *)arg1;
- (BOOL)shouldEnableNode:(const struct TFENode *)arg1;
- (BOOL)shouldEnableOKButtonForNodes:(const struct TFENodeVector *)arg1;
- (const struct TFENode *)newTargetNode;

@end

@interface TChooseImageController : TChooseFileController
{
}

+ (id)controller;
- (BOOL)shouldEnableNode:(const struct TFENode *)arg1;
- (BOOL)shouldEnableOKButtonForNodes:(const struct TFENodeVector *)arg1;

@end

@interface TApplication : NSApplication
{
    BOOL _isBouncingIconInDock;
}

- (void)cancelBounceIconInDockUntilActive;
- (void)bounceIconInDockUntilActive;
- (void)bounceIconInDockUntilActivePriv;
- (void)bounceIconInDockOnce;
- (void)sendEvent:(id)arg1;
- (void)arrangeInFront:(id)arg1;
- (void)_cycleWindowsReversed:(BOOL)arg1;
- (void)terminate:(id)arg1;
- (BOOL)canEnterFullScreenMode;

@end

@interface TMultiThreadedCocoa : NSObject
{
}

+ (void)run:(id)arg1;

@end

@interface TBackupVolumeTableViewItem : TTableViewItem
{
    struct TFENode _node;
    NSString *_displayName;
    struct TIconRef _icon;
}

@property(readonly) NSString *displayName; // @synthesize displayName=_displayName;
- (id).cxx_construct;
- (void).cxx_destruct;
- (const struct TIconRef *)icon;
- (const struct TFENode *)node;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithNode:(const struct TFENode *)arg1;

@end

@interface TBackupVolumeTableViewController : TTableViewController
{
    struct TFENodeVector _excludeNodes;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setExcludeNodes:(const struct TFENodeVector *)arg1;
- (void)volumeNameChanged:(const struct TFENode *)arg1;
- (void)backupStoreDeleted:(const struct TFENode *)arg1;
- (void)backupStoreAdded:(const struct TFENode *)arg1;
- (void)refresh;
- (void)handleDoubleClick:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)setView:(id)arg1;
- (void)viewLoaded;

@end

@interface TBackupVolumeBrowserWindowController : TScriptableWindowController <NSWindowDelegate>
{
    TTextField *_instructionText;
    TLayoutBinder *_instructionTextLayoutBinder;
    TTableView *_backupVolumeTableView;
    TBackupVolumeTableViewController *_backupVolumeTableViewController;
    TLayoutBinder *_backupVolumeTableViewLayoutBinder;
    TButton *_okBtn;
    TButton *_cancelBtn;
    struct TFENode _selectedBackupStore;
    struct ProcessSerialNumber _entryPSN;
    void *_callback;
}

+ (id)backupVolumeBrowserWindowController;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)showWindow:(id)arg1;
- (void)showWindowWithPSN:(struct ProcessSerialNumber)arg1 callback:(void *)arg2 excludeNodes:(struct TFENodeVector)arg3;
- (void)backupStoreDeleted:(const struct TFENode *)arg1;
- (void)backupStoreAdded:(const struct TFENode *)arg1;
- (void)volumeNameChanged:(const struct TFENode *)arg1;
- (void)selectionChanged:(const struct TFENode *)arg1;
- (void)cmdOK:(id)arg1;
- (void)cmdCancel:(id)arg1;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (void)dealloc;
- (id)init;

@end

@interface TNSSharedFileListItem : NSObject
{
    struct TSharedFileListItem *_item;
}

- (id)iconAsImage;
- (struct TIconRef)icon;
- (id)url;
- (id)displayName;
- (struct OpaqueLSSharedFileListItemRef *)item;
- (void)finalize;
- (void)dealloc;
- (id)initWithSFLItem:(struct OpaqueLSSharedFileListItemRef *)arg1;

@end

@interface TStandardErrorViewController : TViewController
{
    NSScrollView *_messageTextScrollView;
    NSTextView *_messageText;
    NSImageView *_imageView;
    NSImageView *_badgeView;
    NSButton *_leftButton;
    NSButton *_middleButton;
    NSButton *_rightButton;
    NSButton *_applyAllCheckbox;
    NSString *_messageString;
    NSImage *_image;
    NSImage *_badgeImage;
    BOOL _hasApplyAll;
    BOOL _applyAll;
    int _kind;
    TStandardProgressController *_progressController;
}

+ (id)controllerForViewKind:(int)arg1;
@property(readonly, nonatomic) NSButton *rightButton; // @synthesize rightButton=_rightButton;
@property(readonly, nonatomic) NSButton *middleButton; // @synthesize middleButton=_middleButton;
@property(readonly, nonatomic) NSButton *leftButton; // @synthesize leftButton=_leftButton;
@property(nonatomic) BOOL applyAll; // @synthesize applyAll=_applyAll;
@property(nonatomic) BOOL hasApplyAll; // @synthesize hasApplyAll=_hasApplyAll;
@property(retain, nonatomic) NSImage *badgeImage; // @synthesize badgeImage=_badgeImage;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
@property(copy, nonatomic) NSString *messageString; // @synthesize messageString=_messageString;
@property(readonly, nonatomic) NSTextView *messageText; // @synthesize messageText=_messageText;
@property(nonatomic) TStandardProgressController *progressController; // @synthesize progressController=_progressController;
- (id)initialKeyView;
- (void)updateAccessibilityDescriptionForImages;
- (void)rightButtonPressed:(id)arg1;
- (void)middleButtonPressed:(id)arg1;
- (void)leftButtonPressed:(id)arg1;
- (void)viewLoaded;
- (void)sizeAButton:(id)arg1;
- (void)dealloc;
- (id)initWithKind:(int)arg1;

@end

@interface TTaskErrorViewController : TStandardErrorViewController
{
    unsigned int _resolution;
    struct OperationErrorRecord *_errorRecord;
    struct OperationRecord *_operationRecord;
    BOOL _allowContinue;
    BOOL _isShowingConflict;
    unsigned int _taskType;
    struct TTask *_task;
}

@property(nonatomic) BOOL isShowingConflict; // @synthesize isShowingConflict=_isShowingConflict;
@property(nonatomic) unsigned int taskType; // @synthesize taskType=_taskType;
@property(nonatomic) struct OperationErrorRecord *errorRecord; // @synthesize errorRecord=_errorRecord;
@property(nonatomic) struct OperationRecord *operationRecord; // @synthesize operationRecord=_operationRecord;
@property(nonatomic) BOOL allowContinue; // @synthesize allowContinue=_allowContinue;
@property(nonatomic) struct TTask *task; // @synthesize task=_task;
- (void)rightButtonPressed:(id)arg1;
- (void)handleResolution;
- (BOOL)resolutionAppliesToAll;
- (void)setCanSkip:(BOOL)arg1;
- (void)setCanApplyToAll:(BOOL)arg1;
@property(nonatomic) unsigned int resolution; // @dynamic resolution;
@property(nonatomic) int error; // @dynamic error;
- (BOOL)defaultKeyDown;
- (void)setDefaultButton:(BOOL)arg1;
- (BOOL)allowDefaultKeys;

@end

@interface TTaskErrorOrConflictViewController : TTaskErrorViewController
{
    unsigned int _leftResolution;
    unsigned int _middleResolution;
    unsigned int _rightResolution;
    BOOL _optionKeyDown;
}

@property(nonatomic) BOOL optionKeyDown; // @synthesize optionKeyDown=_optionKeyDown;
- (void)buttonHit:(unsigned int)arg1;
- (void)rightButtonPressed:(id)arg1;
- (void)middleButtonPressed:(id)arg1;
- (void)leftButtonPressed:(id)arg1;
- (BOOL)allowDefaultKeys;
- (void)setResolutionsForKind:(int)arg1;
- (void)setCanSkip:(BOOL)arg1;
- (BOOL)resolutionAppliesToAll;
- (void)dealloc;
- (id)initWithKind:(int)arg1;
- (void)flagsDidChange:(id)arg1;

@end

@interface TSkipKeepBothReplaceConflictViewController : TTaskErrorOrConflictViewController
{
    BOOL _showSkipButton;
    BOOL _showKeepBothByDefault;
    BOOL _canSkip;
}

- (void)leftButtonPressed:(id)arg1;
- (void)setCanSkip:(BOOL)arg1;
- (void)setOptionKeyDown:(BOOL)arg1;
- (void)setTask:(struct TTask *)arg1;
- (void)setDefaultLeftButton;
- (void)setShowSkipButton:(BOOL)arg1;
- (BOOL)skipButtonShowing;
- (id)initWithKind:(int)arg1;

@end

@interface TProgressDocumentView : NSView
{
}

- (BOOL)isFlipped;
- (void)superviewFrameChanged:(id)arg1;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)dealloc;

@end

@interface TProgressWindowController : TScriptableWindowController <NSWindowDelegate>
{
    NSScrollView *_scrollView;
    BOOL _sizeWindowToScrollView;
    int _kind;
    unsigned long long _attachedViewsCount;
}

+ (id)controllerForWindowKind:(int)arg1;
- (id)backgroundColorForRow:(unsigned long long)arg1;
- (void)sizeToFitViews;
- (void)layoutViews;
- (void)updateResizeState;
- (double)minimumWindowHeight;
- (double)minimumProgressViewWidth;
- (void)removeView:(id)arg1;
- (id)addView;
- (void)dealloc;
- (id)initWithKind:(int)arg1;

@end

@interface TProgressView : NSView
{
    NSColor *_backgroundColor;
    struct CGSize _minimumSize;
}

@property struct CGSize minimumSize; // @synthesize minimumSize=_minimumSize;
@property(copy) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (id).cxx_construct;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)dealloc;
- (id)init;

@end

@interface TStandardStatusViewController : TViewController
{
    NSString *_cancelMessageString;
    NSProgressIndicator *_progress;
    NSTextField *_titleText;
    NSTextField *_messageText;
    NSButton *_cancelButton;
    NSImageView *_imageView;
    NSImageView *_badgeView;
    NSTrackingArea *_cancelButtonTrackingArea;
    NSString *_titleString;
    NSString *_messageString;
    NSImage *_image;
    NSImage *_badgeImage;
    BOOL _indeterminate;
    BOOL _hasCancel;
    double _percentComplete;
    BOOL _shouldDisplayCancelString;
}

@property(nonatomic) BOOL hasCancel; // @synthesize hasCancel=_hasCancel;
@property(nonatomic) BOOL indeterminate; // @synthesize indeterminate=_indeterminate;
@property(retain, nonatomic) NSImage *badgeImage; // @synthesize badgeImage=_badgeImage;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
@property(retain, nonatomic) NSImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) NSString *titleString; // @synthesize titleString=_titleString;
@property(readonly, nonatomic) NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
- (void)cancel:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)updateTrackingAreas:(id)arg1;
- (void)updateAccessibilityDescriptionForImages;
- (void)setIcon:(struct OpaqueIconRef *)arg1;
@property(retain, nonatomic) NSString *cancelMessageString;
@property(retain, nonatomic) NSString *messageString;
- (void)loadView;
@property(nonatomic) double percentComplete;
- (void)tearDown;
- (void)finalize;
- (void)dealloc;
- (id)initWithStatusKind:(int)arg1;
- (id)init;

@end

@interface TStandardProgressController : NSObject
{
    TProgressWindowController *_progressWindowController;
    TProgressView *_container;
    _Bool _showingStatus;
    _Bool _showingError;
    TStandardStatusViewController *_statusViewController;
}

+ (id)controllerWithWindowController:(id)arg1;
@property(retain) TStandardStatusViewController *statusViewController; // @synthesize statusViewController=_statusViewController;
@property(readonly) TProgressWindowController *progressWindowController; // @synthesize progressWindowController=_progressWindowController;
- (_Bool)isShowingError;
- (void)hideErrorForController:(id)arg1;
- (void)showErrorWithController:(id)arg1;
- (void)showStatusWithController:(id)arg1;
- (_Bool)isShowingStatus;
- (void)hideStatus;
- (void)finalize;
- (void)dealloc;
- (id)initWithWindowController:(id)arg1;

@end

@interface TTargetActionFunctor : NSObject
{
    struct TFunctorBase *_functor;
}

+ (id)targetActionFunctor:(struct TFunctorBase *)arg1;
- (void)action:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithFunctor:(struct TFunctorBase *)arg1;

@end

@interface TSearchCriteriaController : TViewController
{
    TCriteriaSlicesController *_slicesController;
}

@property(readonly) TCriteriaSlicesController *slicesController; // @synthesize slicesController=_slicesController;
- (void)aboutToTearDown;
- (BOOL)includeNonFinderFiles:(BOOL)arg1;
- (BOOL)showSystemFiles:(BOOL)arg1;
- (id)filter;
- (id)criterionWithSuggestion:(id)arg1;
- (id)criteriaWithSearchString:(id)arg1 nameOnly:(BOOL)arg2;
- (void)showCriteria:(id)arg1;
- (void)removeAllSlices;
- (void)configureFor:(BOOL)arg1;
- (long long)criteriaCount;
- (long long)sliceCount;
- (id)nibName;
- (id)initWithDelegate:(id)arg1;

@end

@interface TSearchScopeSliceController : TViewController
{
}

- (void)setScopePlusMinusButtonTitle:(BOOL)arg1;
- (void)setScopePlusMinusButtonEnabled:(BOOL)arg1;
- (void)setSaveButtonEnabled:(BOOL)arg1;
- (id)currentScopeString;
- (unsigned long long)scopeSelection;
- (void)setScopeSelection:(unsigned long long)arg1;
- (void)setButtonTitles:(id)arg1 andHelpTags:(id)arg2;
- (id)scopeSlice;
- (id)nibName;
- (id)initWithDelegate:(id)arg1;

@end

@interface TSearchScopeSlice : TView
{
    TTextField *_searchTextView;
    TScopeBarRadioGroupView *_axScopeRadioGroupView;
    TButton *_saveButton;
    TButton *_plusMinusButton;
    struct TNSRef<NSMutableArray *> _scopeButtons;
    TPopUpButton *_scopeDropdown;
    double _scopeDropdownNaturalWidth;
    TButton *_genericRadioButton;
    id <TSearchScopeSliceControllerDelegate> _delegate;
}

@property(nonatomic) id <TSearchScopeSliceControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)selectedButtonTitle;
- (id)selectedButton;
- (unsigned long long)selectedButtonIndex;
- (void)setButtonEnabled:(BOOL)arg1 atIndex:(unsigned long long)arg2;
- (void)selectButtonAtIndex:(unsigned long long)arg1;
- (void)setPlusMinusButtonEnabled:(BOOL)arg1;
- (void)setPlusMinusButtonTitle:(BOOL)arg1;
- (void)setSaveButtonEnabled:(BOOL)arg1;
- (void)setButtonToolTips:(id)arg1;
- (void)setButtonTitles:(id)arg1;
- (id)createRadioButtonForTitle:(id)arg1;
- (void)plusMinusButtonPressed:(id)arg1;
- (void)saveButtonPressed:(id)arg1;
- (void)scopeDropdownChanged:(id)arg1;
- (void)scopeButtonPressed:(id)arg1;
- (void)chooseScopeButton:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (double)minWidth;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)adjustSubviews;
- (double)gapBetweenSearchAndSavePlusBtn:(BOOL)arg1 save:(BOOL)arg2;
- (double)savePlusBtnXOffset:(BOOL)arg1;
- (double)searchTextXOffset:(BOOL)arg1;
- (BOOL)isLTRLayoutDirection;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface TScopeBarRadioGroupView : TView
{
}

- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (BOOL)accessibilityIsIgnored;

@end

@interface TScopeBarRadioButtonCell : TButtonCell
{
}

- (id)accessibilityAttributeValue:(id)arg1;

@end

@interface TSearchSliceController : NSResponder
{
    TSearchSliceView *_view;
    TSearchForSliceController *_searchForSliceController;
    TSearchScopeSliceController *_scopeSliceController;
    TSearchCriteriaController *_criteriaController;
    SGTSearchField *_toolbarSearchField;
    id <BrowserController> _windowController;
    NSSet *_searchFilterUTIs;
    BOOL _sliceUpdatesAreDisabled;
    BOOL _isSaveable;
    BOOL _configuring;
}

+ (void)copySuggestionsFrom:(id)arg1 to:(id)arg2;
@property(retain) NSSet *searchFilterUTIs; // @synthesize searchFilterUTIs=_searchFilterUTIs;
@property BOOL configuring; // @synthesize configuring=_configuring;
@property BOOL isSaveable; // @synthesize isSaveable=_isSaveable;
@property(nonatomic) id <BrowserController> windowController; // @synthesize windowController=_windowController;
@property(readonly) NSView *view; // @synthesize view=_view;
- (void)updateUIForAction;
- (void)updateQueryFromUIAndClearContent:(BOOL)arg1;
- (id)generateQueryString;
- (id)searchFilter;
- (int)searchWhen;
- (id)appendSearchWhen:(int)arg1 toString:(id)arg2;
- (BOOL)queryIsCannedSearch;
- (struct TMDQueryAliasNode *)queryNode;
- (void)configureForAction:(int)arg1 forSearchString:(id)arg2;
- (void)setDefaultFileNameOnly:(int)arg1;
- (void)setSuggestionFieldScope:(long long)arg1;
- (void)setCriteriaTo:(id)arg1;
- (void)showDefaultCriteria:(BOOL)arg1;
- (void)setCriteriaIsVisible:(BOOL)arg1;
- (BOOL)hasCriteria;
- (BOOL)criteriaIsCollapsed;
- (BOOL)hideCriteria;
- (BOOL)addSearchStringAndSuggestionsToCriteria;
- (BOOL)addCriteria;
- (_Bool)criteriaIsVisible;
- (id)userSlices;
- (id)userCriteria:(BOOL)arg1;
- (void)setCurrentSearchFieldState:(id)arg1;
- (id)currentSearchFieldState;
- (id)currentSearchField;
- (void)setToolbarSearchField:(id)arg1;
- (id)searchForSliceString;
- (void)setScopePlusMinusButtonTitle:(BOOL)arg1;
- (void)setScopePlusMinusButtonEnabled:(BOOL)arg1;
- (void)autoEnableScopeSaveButton;
- (void)setScopeSelection:(unsigned long long)arg1;
- (void)setScopeButtonTitles:(id)arg1 andHelpTags:(id)arg2;
- (BOOL)setScopeIsVisible:(BOOL)arg1;
- (BOOL)removeScopeSlice;
- (BOOL)addScopeSlice;
- (BOOL)makeSearchForSliceFirstResponder;
- (BOOL)searchForSliceIsVisible;
- (void)setSearchForIsVisible:(BOOL)arg1;
- (void)clearSearchField;
- (void)setSearchFieldText:(id)arg1;
- (BOOL)removeSearchForSlice;
- (BOOL)addSearchForSlice;
- (void)configureSlice:(id)arg1;
- (void)criteriaSliceChange:(BOOL)arg1;
- (void)scopeSetByUser:(unsigned long long)arg1;
- (void)plusMinusButtonPressed:(id)arg1 title:(BOOL)arg2;
- (void)updateScopePlusMinusButton;
- (void)removeAllCriteriaSlices;
- (void)saveButtonPressed:(id)arg1;
- (void)saveQuery;
- (void)fieldChanged:(id)arg1 nameOnly:(BOOL)arg2;
- (void)scopeChanged:(id)arg1 index:(unsigned long long)arg2;
- (void)controlTextDidChange:(id)arg1;
- (void)finishedConfiguringSlices;
- (id)currentScopeString;
- (BOOL)scopeSliceIsVisible;
- (void)toggleSlices;
- (void)slicesFrameSizeChanged;
- (void)adjustSlices;
- (void)disableSliceUpdates:(BOOL)arg1;
- (double)height;
- (void)aboutToTearDown:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TSearchSliceView : NSView
{
    NSView *_searchForSlice;
    NSView *_scopeSlice;
}

@property NSView *scopeSlice; // @synthesize scopeSlice=_scopeSlice;
@property NSView *searchForSlice; // @synthesize searchForSlice=_searchForSlice;
- (void)drawRect:(struct CGRect)arg1;
- (id)init;

@end

@interface TSearchForSliceController : TViewController
{
    SGTSearchField *_searchForField;
}

@property(readonly) SGTSearchField *searchForField; // @synthesize searchForField=_searchForField;
- (void)searchTextChanged:(id)arg1;
- (void)setString:(id)arg1;
- (id)string;
- (BOOL)makeSliceFirstResponder;
- (id)nibName;
- (id)initWithDelegate:(id)arg1;

@end

@interface TSearchForSlice : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface TCriteriaSlicesController : NSObject <NSRuleEditorDelegate, NSTextFieldDelegate>
{
    id _delegate;
    NSRuleEditor *_criteriaEditor;
    unsigned long long _suppressUpdatesCount;
    NSMutableArray *_customFieldsArray;
    NSMutableArray *_rootAttributes;
    NSMutableArray *_boundRulesArray;
    NSWindow *_customAttributesSheet;
    NSSearchField *_customAttributeSearchField;
    NSArrayController *_attributesListController;
    NSTableView *_attributesListTable;
    NSMutableArray *_attributesList;
    MDUserSearch *_search;
}

+ (id)queryStringForImages;
+ (id)queryStringForMusic;
+ (id)queryStringForText;
+ (id)queryStringForToDo;
+ (id)queryStringForSystemPrefs;
+ (id)queryStringForPresentations;
+ (id)queryStringForPDF;
+ (id)queryStringForVideo;
+ (id)queryStringForFonts;
+ (id)queryStringForEvents;
+ (id)queryStringForMessages;
+ (id)queryStringForDocuments;
+ (id)queryStringForContacts;
+ (id)queryStringForWebPages;
+ (id)queryStringForExecutables;
+ (id)queryStringForApplications;
+ (id)queryStringForFolders;
@property(retain, nonatomic) NSMutableArray *boundRulesArray; // @synthesize boundRulesArray=_boundRulesArray;
@property(retain, nonatomic) NSMutableArray *rootAttributes; // @synthesize rootAttributes=_rootAttributes;
@property(retain, nonatomic) NSMutableArray *customFieldsArray; // @synthesize customFieldsArray=_customFieldsArray;
@property id delegate; // @synthesize delegate=_delegate;
- (BOOL)includeNonFinderFiles:(BOOL)arg1;
- (BOOL)showSystemFiles:(BOOL)arg1;
- (id)filter;
- (id)archivedSliceIncludingSpotlightItems;
- (id)archivedSliceMatchingSearchString:(id)arg1;
- (id)archivedSliceMatchingFileNameSearch:(id)arg1;
- (id)sliceAsPlistForSuggestion:(id)arg1;
- (id)slicesAsPlist;
- (id)archivedRowForSlice:(id)arg1;
- (id)slicesFromPlist:(id)arg1;
- (id)unarchivedSliceForRow:(id)arg1;
- (void)addKindSlice;
- (void)setupInitialSlice;
- (void)removeAllSlices;
- (void)setSlices:(id)arg1;
- (void)prepareUIForSlices:(id)arg1;
- (unsigned long long)sliceCount;
- (id)slices;
- (id)defaultRootSliceAttributes;
- (void)tearDown:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;
- (void)ruleEditorRowsDidChange:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)controlValueChanged:(id)arg1;
- (id)search;
- (long long)ruleEditor:(id)arg1 parentCriterion:(id)arg2 compareCriterion:(id)arg3 withLocalizedDisplayValue:(id)arg4 toCriterion:(id)arg5 withLocalizedDisplayValue:(id)arg6;
- (id)ruleEditor:(id)arg1 displayValueForCriterion:(id)arg2 inRow:(long long)arg3;
- (id)itemDisplayValueForCriterion:(id)arg1;
- (id)numberDisplayValueForCriterion:(int)arg1 inRow:(long long)arg2;
- (id)controlForCriterion:(int)arg1;
- (id)createLabelPickerView;
- (id)createCheckbox;
- (id)createNumberTextField;
- (id)createNameTextField;
- (id)createDateTextField;
- (id)createDatePickerView;
- (id)ruleEditor:(id)arg1 child:(long long)arg2 forCriterion:(id)arg3 withRowType:(unsigned long long)arg4;
- (id)itemForChild:(unsigned long long)arg1 andCriterion:(id)arg2;
- (id)numberForChild:(unsigned long long)arg1 andCriterion:(id)arg2;
- (id)rootItemForChild:(unsigned long long)arg1 withRowType:(unsigned long long)arg2;
- (long long)ruleEditor:(id)arg1 numberOfChildrenForCriterion:(id)arg2 withRowType:(unsigned long long)arg3;
- (long long)itemChildCount:(id)arg1;
- (long long)numberChildCountForItem:(id)arg1;
- (long long)rootChildCountWithRowType:(unsigned long long)arg1;
- (void)cancelPickCustomField:(id)arg1;
- (void)endPickCustomField:(id)arg1;
- (void)pickCustomField:(id)arg1;
- (void)pickCustomFieldSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)syncToPrefs;
- (id)attributesList;

@end

@interface TCachedAttributeSchema : NSObject
{
    NSString *_attributeName;
    NSString *_localizedAttributeName;
    NSString *_localizedAttributeDescription;
    unsigned long long _dataType;
    BOOL _inMenu;
}

@property BOOL inMenu; // @synthesize inMenu=_inMenu;
@property unsigned long long dataType; // @synthesize dataType=_dataType;
@property(retain) NSString *localizedAttributeDescription; // @synthesize localizedAttributeDescription=_localizedAttributeDescription;
@property(retain) NSString *localizedAttributeName; // @synthesize localizedAttributeName=_localizedAttributeName;
@property(retain) NSString *attributeName; // @synthesize attributeName=_attributeName;
- (void)dealloc;
- (id)initWithAttributeName:(id)arg1;

@end

@interface TNodeBrowserNewAliasDelegate : TNewAliasOperationDelegate
{
    struct TNewAliasCallbackHandler *_callbackHandler;
    struct TFENodeVector _aliases;
}

+ (id)delegateWithNodeBrowser:(struct TNodeBrowser *)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (int)asyncNodeOperation:(id)arg1 subOperationCompleted:(unsigned int)arg2 targetNode:(const struct TFENode *)arg3;
- (void)dealloc;

@end

@interface TNodeBrowserNewFolderDelegate : TNewFolderOperationDelegate
{
    struct TNewFolderCallbackHandler *_callbackHandler;
}

+ (id)delegateWithNodeBrowser:(struct TNodeBrowser *)arg1 newFolderAction:(struct TNewFolderAction *)arg2 createPBF:(BOOL)arg3;
- (int)asyncNodeOperation:(id)arg1 subOperationCompleted:(unsigned int)arg2 targetNode:(const struct TFENode *)arg3;
- (void)finalize;
- (void)dealloc;

@end

@interface TPathControl : NSPathControl
{
}

+ (Class)cellClass;
- (void)dragImage:(id)arg1 at:(struct CGPoint)arg2 offset:(struct CGSize)arg3 event:(id)arg4 pasteboard:(id)arg5 source:(id)arg6 slideBack:(BOOL)arg7;
- (void)draggingEnded:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)canBecomeKeyView;

@end

@interface TPathCell : NSPathCell
{
}

+ (Class)pathComponentCellClass;

@end

@interface TDragAndDrop : NSObject
{
}

+ (void)endDrop;
+ (void)flockingDragCompleted;
+ (unsigned long long)updateDropOnNode:(const struct TFENode *)arg1 withDraggingInfo:(id)arg2 actionsAllowed:(unsigned int)arg3;
+ (unsigned long long)beginDropWithDraggingInfo:(id)arg1;
+ (struct TDropOperation *)currentDropOperation;
+ (BOOL)isDropInProgress;

@end

@interface TBottomBar : NSView
{
    TBottomBarController *_controller;
    struct TNSRef<NSColor *> _backgroundColor;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain, nonatomic) NSColor *backgroundColor; // @dynamic backgroundColor;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (BOOL)acceptsFirstResponder;
- (BOOL)canBecomeKeyView;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)awakeFromNib;

@end

@interface TBottomBarController : NSViewController <NSPathControlDelegate, TNodeObserverProtocol, NSMenuDelegate>
{
    TPathControl *_pathControl;
    struct TNodeObserverCocoaBridge *_nodeObserver;
    id <BrowserController> _browserController;
    struct TFENodeVector _commonPathVector;
    struct TFENodeVector _observedSelection;
}

+ (double)defaultBottombarHeight;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)nodeDeleted:(const struct TFENode *)arg1 fromObservedNode:(const struct TFENode *)arg2;
- (void)nodeChanged:(const struct TFENode *)arg1 inObservedNode:(const struct TFENode *)arg2 property:(unsigned int)arg3;
- (void)pathBar:(id)arg1 draggingEnded:(id)arg2;
- (void)pathBar:(id)arg1 draggingExited:(id)arg2;
- (void)pathBar:(id)arg1 dragImage:(id)arg2 offset:(struct CGSize)arg3 event:(id)arg4;
- (BOOL)pathControl:(id)arg1 shouldDragPathComponentCell:(id)arg2 withPasteboard:(id)arg3;
- (BOOL)pathControl:(id)arg1 acceptDrop:(id)arg2;
- (unsigned long long)pathControl:(id)arg1 validateDrop:(id)arg2;
- (void)pathControlDoubleClick:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (const struct TFENode *)nodeInPathBar:(id)arg1 forLocation:(struct CGPoint)arg2;
- (const struct TFENode *)nodeForCell:(id)arg1;
- (void)updateSelection:(const struct TFENodeVector *)arg1 forceUpdate:(BOOL)arg2;
- (void)setTarget:(const struct TFENode *)arg1 selection:(const struct TFENodeVector *)arg2;
- (BOOL)commonPathForNode:(const struct TFENode *)arg1 andSelection:(const struct TFENodeVector *)arg2;
- (BOOL)preflightSelection:(const struct TFENodeVector *)arg1 commonParent:(struct TFENode *)arg2;
- (void)updatePathComponents;
- (void)setInBrowseMode:(BOOL)arg1;
- (void)windowDidDeactivate;
- (void)windowDidActivate;
- (void)makeActive:(BOOL)arg1;
- (struct TNodeBrowser *)nodeBrowser;
- (void)aboutToTearDown:(id)arg1;
- (void)clearCommonPathNodes;
- (void)clearObservedSelection;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 andBrowserController:(id)arg2;
- (id)browserWindowController;

@end

@interface TPathComponentCell : NSPathComponentCell
{
    TBottomBarController *_controller;
}

- (id)accessibilityActionNames;
- (void)setController:(id)arg1;
- (id)URL;

@end

@interface TFileBasedImageView : TImageView
{
    TViewOptionsWindowController *_controller;
    struct TFENode _imageNode;
}

@property(nonatomic) struct TFENode imageNode; // @synthesize imageNode=_imageNode;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)performDragOperation:(id)arg1;
- (void)handleClick;
- (void)initCommon;

@end

@interface TOpenPanel : NSOpenPanel
{
    int _options;
}

+ (id)openPanelWithOptions:(int)arg1 panelTitle:(id)arg2 okButtonTitle:(id)arg3 cancelButtonTitle:(id)arg4 messageText:(id)arg5;
+ (id)openPanelWithOptions:(int)arg1;
@property(nonatomic) int options; // @synthesize options=_options;
- (void)runWithParentWindow:(id)arg1;
- (void)getSelectedNodes:(struct TFENodeVector *)arg1;
- (void)setAccessoryView:(id)arg1;
- (void)setMessage:(id)arg1;
- (void)dealloc;
- (void)_updateOkButtonEnabledState;

@end

@interface TSavePanel : NSSavePanel
{
    int _options;
}

+ (id)savePanelWithOptions:(int)arg1 panelTitle:(id)arg2 okButtonTitle:(id)arg3 cancelButtonTitle:(id)arg4 messageText:(id)arg5 name:(id)arg6;
+ (id)savePanelWithOptions:(int)arg1;
@property(nonatomic) int options; // @synthesize options=_options;
- (void)runWithParentWindow:(id)arg1;
- (struct TFENode)destination;
- (id)name;
- (void)setName:(id)arg1;
- (void)setAccessoryView:(id)arg1;
- (void)setMessage:(id)arg1;
- (void)dealloc;

@end

@interface TShrinkToFitLayoutManager : NSLayoutManager
{
}

- (struct CGRect *)rectArrayForCharacterRange:(struct _NSRange)arg1 withinSelectedCharacterRange:(struct _NSRange)arg2 inTextContainer:(id)arg3 rectCount:(unsigned long long *)arg4;

@end

@interface TShrinkToFitScrollView : TFocusRingScrollView
{
}

- (void)sizeToFit;
- (void)viewDidMoveToWindow;
- (void)stfTextViewFrameChanged:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (void)dealloc;
- (void)initCommon;
- (id)initWithSTFTextView:(id)arg1;

@end

@interface TFocusRingContentView : TView
{
    TFocusRingTextView *_fieldEditor;
}

@property TFocusRingTextView *fieldEditor; // @synthesize fieldEditor=_fieldEditor;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)_focusRingRect;
- (void)initCommon;

@end

@interface TShrinkToFitWindow : NSPanel
{
    TShrinkToFitScrollView *_stfScrollView;
    TShrinkToFitTextView *_stfTextView;
}

- (void)undo:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (struct CGRect)calcGlobalFrame;
- (void)sizeToFit;
- (void)stfScrollViewScrollerStyleChanged:(id)arg1;
- (void)stfScrollViewFrameChanged:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (void)_resignKeyFocus;
- (BOOL)_canBecomeSecondaryKeyWindow;
- (BOOL)canBecomeKeyWindow;
- (void)dealloc;
- (id)initWithSTFTextView:(id)arg1;
- (double)_focusRingThickness;

@end

@interface TShrinkToFitTextView : TFocusRingTextView
{
    struct TNSRef<TShrinkToFitWindow *> _stfWindow;
    struct TNSRef<NSWindow *> _parentWindow;
    struct CGRect _maxGlobalFrame;
    unsigned long long _maxUniChars;
    TShrinkToFitController *_controller;
}

@property(nonatomic) TShrinkToFitController *controller; // @synthesize controller=_controller;
@property(nonatomic) unsigned long long maxUniChars; // @synthesize maxUniChars=_maxUniChars;
@property(nonatomic) struct CGRect maxGlobalFrame; // @synthesize maxGlobalFrame=_maxGlobalFrame;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)setMaxSize:(struct CGSize)arg1;
- (void)setMinSize:(struct CGSize)arg1;
- (void)setFont:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (BOOL)shouldChangeTextInRange:(struct _NSRange)arg1 replacementString:(id)arg2;
- (BOOL)isEditing;
- (void)stopEditing:(BOOL)arg1;
- (void)startEditing;
- (void)didChangeText;
- (void)setString:(id)arg1;
- (void)setConstrainedFrameSize:(struct CGSize)arg1;
- (void)configureAttributes;
@property(retain, nonatomic) NSWindow *parentWindow;
- (void)dealloc;
- (id)init;

@end

@interface TShrinkToFitController : NSObject <NSWindowDelegate>
{
    TShrinkToFitTextView *_stfTextView;
    NSWindow *_parentWindow;
    NSTimer *_delayTimer;
    NSString *_initialText;
    NSFont *_font;
    struct _NSRange _selectionRange;
    struct CGRect _maxGlobalFrame;
    unsigned long long _maxUniChars;
    unsigned long long _alignment;
    BOOL _wasAborted;
    TRenameOperation *_renameOp;
    id <TShrinkToFitDelegateProtocol> _delegate;
}

@property(retain, nonatomic) NSFont *font; // @synthesize font=_font;
@property(nonatomic) unsigned long long alignment; // @synthesize alignment=_alignment;
@property(nonatomic) unsigned long long maxUniChars; // @synthesize maxUniChars=_maxUniChars;
@property(nonatomic) struct CGRect maxGlobalFrame; // @synthesize maxGlobalFrame=_maxGlobalFrame;
@property(readonly, nonatomic) TRenameOperation *renameOp; // @synthesize renameOp=_renameOp;
@property(readonly, nonatomic) NSWindow *parentWindow; // @synthesize parentWindow=_parentWindow;
@property(readonly, nonatomic) TShrinkToFitTextView *stfTextView; // @synthesize stfTextView=_stfTextView;
- (id).cxx_construct;
- (void)setWasAborted:(BOOL)arg1;
- (BOOL)wasAborted;
- (void)shrinkToFitTextViewAboutToClose;
- (void)shrinkToFitTextViewEditingComplete:(id)arg1;
- (BOOL)shrinkToFitTextViewAboutToOpen;
- (void)windowDidResignKey:(id)arg1;
@property(readonly, nonatomic) BOOL isEditing;
- (void)stopEditing:(BOOL)arg1;
- (void)startEditingViaDelayTimer:(id)arg1;
- (void)startEditing:(BOOL)arg1;
- (BOOL)shouldOffsetFocusRing;
- (struct CGRect)globalFrame;
- (void)setText:(id)arg1 selectionRange:(const struct _NSRange *)arg2;
- (void)configureForNode:(const struct TFENode *)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithParentWindow:(id)arg1 renameOp:(id)arg2 delegate:(id)arg3;
- (id)init;

@end

@interface TTableViewShrinkToFitController : TShrinkToFitController
{
    unsigned long long _row;
    unsigned long long _column;
}

@property unsigned long long column; // @synthesize column=_column;
@property unsigned long long row; // @synthesize row=_row;
- (BOOL)shouldOffsetFocusRing;
- (id)initWithParentWindow:(id)arg1 renameOp:(id)arg2 delegate:(id)arg3 row:(unsigned long long)arg4 column:(unsigned long long)arg5;
- (id)init;

@end

@interface TIconViewSettings : NSObject
{
    NSMutableDictionary *_settings;
}

+ (id)settingsForNode:(struct TFENode *)arg1;
+ (id)settingsFromViewOptions:(id)arg1;
+ (id)settingsFromPList:(id)arg1;
+ (id)settingsFromBrowserSettings:(struct TIconBrowserSettings *)arg1;
+ (id)defaultSettingsForNewUser;
@property(readonly, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
- (BOOL)isEquivalentTo:(id)arg1;
@property(nonatomic) struct CGPoint scrollPosition; // @dynamic scrollPosition;
@property(retain, nonatomic) NSData *backgroundImageBookmark; // @dynamic backgroundImageBookmark;
- (void)setBackgroundImageAlias:(id)arg1;
- (id)backgroundImageAlias;
@property(nonatomic) FINode *backgroundImageFINode; // @dynamic backgroundImageFINode;
@property(retain, nonatomic) NSColor *backgroundColor; // @dynamic backgroundColor;
- (void)setBackgroundColorRed:(double)arg1 green:(double)arg2 blue:(double)arg3;
@property(nonatomic) int backgroundType; // @dynamic backgroundType;
@property(retain, nonatomic) NSString *arrangeBy; // @dynamic arrangeBy;
@property(nonatomic) BOOL showIconPreview; // @dynamic showIconPreview;
@property(nonatomic) BOOL showItemInfo; // @dynamic showItemInfo;
@property(nonatomic) BOOL labelOnBottom; // @dynamic labelOnBottom;
@property(nonatomic) struct CGPoint gridOffset; // @dynamic gridOffset;
@property(nonatomic) double gridSpacing; // @dynamic gridSpacing;
@property(nonatomic) double textSize; // @dynamic textSize;
@property(nonatomic) double iconSize; // @dynamic iconSize;
- (unsigned long long)checkIntegrity:(const struct TFENode *)arg1;
- (BOOL)checkNumberSettingForKey:(id)arg1 lowValue:(double)arg2 highValue:(double)arg3;
- (void)dealloc;
- (id)initWithPList:(id)arg1;
- (id)initWithIconBrowserSettings:(struct TIconBrowserSettings *)arg1;

@end

@interface TListViewSettings : NSObject
{
    NSMutableDictionary *_settings;
    NSMutableDictionary *_columnSettings;
}

+ (id)settingsFromExtendedSettings:(id)arg1;
+ (BOOL)useExtendedSettings:(id)arg1;
+ (id)extendedSettings:(id)arg1;
+ (id)backwardCompatibleSettings:(id)arg1;
+ (id)settingsForNode:(struct TFENode *)arg1;
+ (id)settingsFromViewOptions:(id)arg1;
+ (id)settingsFromPList:(id)arg1;
+ (id)settingsFromBrowserSettings:(struct TListBrowserSettings *)arg1;
+ (id)defaultSettingsForNewUser;
+ (BOOL)isSnowLeopardColumn:(id)arg1;
+ (BOOL)columnIsBuiltInColumn:(id)arg1;
+ (BOOL)columnIsSpotlightAttribute:(id)arg1;
+ (id)columnDictionaryFromColumnArray:(vector_abc0d4d8 *)arg1;
+ (id)columnDictionaryForWidth:(long long)arg1 index:(long long)arg2 sortOrder:(BOOL)arg3 visibility:(BOOL)arg4;
@property(retain, nonatomic) NSMutableDictionary *columnSettings; // @synthesize columnSettings=_columnSettings;
@property(retain, nonatomic) NSMutableDictionary *settings; // @synthesize settings=_settings;
- (BOOL)isEquivalentTo:(id)arg1;
@property(nonatomic) struct CGPoint scrollPosition;
- (unsigned long long)columnCount;
- (id)columnIDStringAtIndex:(unsigned long long)arg1;
- (BOOL)visibleForColumn:(id)arg1;
- (void)setVisibleForColumn:(id)arg1 visible:(BOOL)arg2;
- (BOOL)sortOrderAscendingForColumn:(id)arg1;
- (void)setSortOrderAscendingForColumn:(id)arg1 ascending:(BOOL)arg2;
- (unsigned long long)indexForColumn:(id)arg1;
- (id)columnNamesInOrder;
- (void)setColumnsOrder:(id)arg1;
- (void)addSpotlightListViewColumn:(id)arg1;
- (unsigned long long)widthForColumn:(id)arg1;
- (void)setWidthForColumn:(id)arg1 width:(unsigned long long)arg2;
@property(nonatomic) NSString *sortColumn;
@property(nonatomic) BOOL showIconPreview;
@property(nonatomic) BOOL calculateAllSizes;
@property(nonatomic) BOOL useRelativeDates;
@property(nonatomic) double textSize;
@property(nonatomic) double iconSize;
- (unsigned long long)checkIntegrity:(const struct TFENode *)arg1;
- (BOOL)checkNumberSettingForKey:(id)arg1 lowValue:(double)arg2 highValue:(double)arg3;
- (void)addDateAddedSettingsIfNeeded:(struct TFENode *)arg1;
- (void)dealloc;
- (id)initWithPList:(id)arg1;
- (id)initWithListBrowserSettings:(struct TListBrowserSettings *)arg1;

@end

@interface TBrowserWindow : NSWindow
{
    TBrowserWindowController *_browserWindowController;
    BOOL _closing;
    BOOL _reconfiguringForAnimation;
}

@property(nonatomic) BOOL reconfiguringForAnimation; // @synthesize reconfiguringForAnimation=_reconfiguringForAnimation;
@property(nonatomic) BOOL closing; // @synthesize closing=_closing;
@property(retain, nonatomic) TBrowserWindowController *browserWindowController; // @synthesize browserWindowController=_browserWindowController;
- (void)zoom:(id)arg1;
- (void)setFrame:(struct CGRect)arg1 display:(BOOL)arg2;
- (void)_hideToolbar:(id)arg1 animate:(BOOL)arg2;
- (void)_showToolbar:(id)arg1 animate:(BOOL)arg2;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (void)toggleToolbarShown:(id)arg1;
- (void)redo:(id)arg1;
- (void)undo:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)makeFirstResponder:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)_hasActiveAppearance;
- (BOOL)_hasMainAppearance;
- (BOOL)_hasActiveControls;
- (BOOL)_hasActiveAppearanceIgnoringKeyFocus;
- (BOOL)_hasKeyAppearance;
- (void)disableScreenUpdatesUntilFlush;
- (void)dealloc;
- (id)init;

@end

@interface TAboutWindowController : TScriptableWindowController
{
    NSImageView *_image;
    NSTextField *_finderFld;
    NSTextField *_experienceFld;
    NSTextField *_finderVersionFld;
    NSTextField *_desktopServicesVersionFld;
    NSTextField *_copyrightFld;
    NSTextField *_rightsFld;
    BOOL _extraInfo;
}

+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (void)aboutWindow;
+ (id)aboutWindowWithExtraInfo:(BOOL)arg1;
- (void)cancel:(id)arg1;
- (void)dealloc;
- (void)windowWillClose:(id)arg1;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)windowDidLoad;
- (id)init;
- (void)getDesktopServicesVersion:(struct TString *)arg1 andBuild:(struct TString *)arg2;
- (void)getFinderVersion:(struct TString *)arg1 andBuild:(struct TString *)arg2 extraInfo:(BOOL)arg3;
- (void)displayAboutWindowWithExtraInfo:(BOOL)arg1;

@end

@interface TViewStyleIndexToStringTransformer : NSValueTransformer
{
}

- (BOOL)allowsReverseTransformation;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface NSString_IsEmptyOrNilValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface NSString_IsNotEmptyOrNilValueTransformer : NSString_IsEmptyOrNilValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface NSArray_IsEmptyOrNilValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface NSArray_IsNotEmptyOrNilValueTransformer : NSArray_IsEmptyOrNilValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface NSDateToNSString_RelativeMediumDateTime_Transformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface NSDateToNSString_RelativeFullDateTime_Transformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface TGroupHeaderTextSizeTransformer : NSValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface TValueConverter : NSObject
{
}

+ (BOOL)object:(id)arg1 stringValue:(struct TString *)arg2;
+ (BOOL)object:(id)arg1 rectValue:(struct CGRect *)arg2;
+ (BOOL)object:(id)arg1 pointValue:(struct CGPoint *)arg2;
+ (BOOL)object:(id)arg1 sizeValue:(struct CGSize *)arg2;
+ (BOOL)object:(id)arg1 fourCharCodeValue:(unsigned int *)arg2;
+ (BOOL)object:(id)arg1 sint64Value:(long long *)arg2;
+ (BOOL)object:(id)arg1 sint32Value:(int *)arg2;
+ (BOOL)object:(id)arg1 integerValue:(long long *)arg2;
+ (BOOL)object:(id)arg1 cgFloatValue:(double *)arg2;
+ (BOOL)object:(id)arg1 floatValue:(float *)arg2;
+ (BOOL)object:(id)arg1 doubleValue:(double *)arg2;
+ (BOOL)object:(id)arg1 boolValue:(char *)arg2;

@end

@interface TWindowCreationOptions : NSObject
{
    struct TNSRef<TBrowserWindowController *> _targetWindowController;
    struct TFENodeVector fNodesToSelect;
    int _alwaysSpawn;
    int _reuseFrontWindow;
    int _closeSpawningWindow;
    int _invertBrowseInPlace;
    struct ISpawnOrigin *_spawnOrigin;
    BOOL _forceContainerWindow;
    BOOL _inheritBrowseStateFromTarget;
    BOOL _sendFolderAction;
}

+ (id)optionsForTargetingSelectingOrCreating:(id)arg1 alwaysSpawn:(int)arg2 reuseFrontWindow:(int)arg3 closeSpawningWindow:(int)arg4 invertBrowseInPlace:(int)arg5 spawnOrigin:(struct ISpawnOrigin *)arg6;
+ (id)optionsForSelectingOrCreatingOnly:(BOOL)arg1 forceToolbarHidden:(BOOL)arg2 fromNewViewerCommand:(BOOL)arg3 sendFolderAction:(BOOL)arg4;
+ (id)defaultWindowOptions;
@property(nonatomic) BOOL sendFolderAction; // @synthesize sendFolderAction=_sendFolderAction;
@property(nonatomic) BOOL inheritBrowseStateFromTarget; // @synthesize inheritBrowseStateFromTarget=_inheritBrowseStateFromTarget;
@property(nonatomic) BOOL forceContainerWindow; // @synthesize forceContainerWindow=_forceContainerWindow;
@property(nonatomic) struct ISpawnOrigin *spawnOrigin; // @synthesize spawnOrigin=_spawnOrigin;
@property(nonatomic) int invertBrowseInPlace; // @synthesize invertBrowseInPlace=_invertBrowseInPlace;
@property(nonatomic) int closeSpawningWindow; // @synthesize closeSpawningWindow=_closeSpawningWindow;
@property(nonatomic) int reuseFrontWindow; // @synthesize reuseFrontWindow=_reuseFrontWindow;
@property(nonatomic) int alwaysSpawn; // @synthesize alwaysSpawn=_alwaysSpawn;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)getNodesToSelect:(struct TFENodeVector *)arg1;
- (void)setNodesToSelect:(const struct TFENodeVector *)arg1;
@property(nonatomic) TBrowserWindowController *targetWindowController;

@end

@interface TGlobalWindowController : NSResponder
{
    BOOL _windowStateSavePending;
    BOOL _restoringWindowState;
    TBrowserWindowController *_mainBrowserWindowController;
}

+ (void)targetSelectOrCreateWindowForTarget:(const struct TFENode *)arg1 withOptions:(id)arg2;
+ (struct TString)urlForNode:(const struct TFENode *)arg1;
+ (struct TFENode)nodeForUrl:(const struct TString *)arg1;
+ (id)globalWindowController;
@property(nonatomic) TBrowserWindowController *mainBrowserWindowController; // @synthesize mainBrowserWindowController=_mainBrowserWindowController;
@property(nonatomic) BOOL restoringWindowState; // @synthesize restoringWindowState=_restoringWindowState;
@property(nonatomic) BOOL windowStateSavePending; // @synthesize windowStateSavePending=_windowStateSavePending;
- (id)orderedBrowserWindowsIncludingDesktop;
- (id)orderedBrowserWindows;
- (void)reduceRootedPath:(struct TFENodeVector *)arg1;
- (id)frontmostBrowserWindowControllerIncludingDesktop;
- (id)frontmostBrowserWindowControllerExcludingDesktop;
- (void)restoreOneBrowserWindowFromState:(id)arg1 withCompletion:(id)arg2;
- (void)windowDidChange;
- (void)browserWindowDidBecomeMain:(id)arg1;
- (void)updateMainBrowserWindowController;
- (BOOL)anyWindowIsSpringing;
- (void)saveWindowState;
- (void)cmdBringAllToFront:(id)arg1;
- (BOOL)validateBringAllToFront:(id)arg1;
- (void)cmdGoTo:(id)arg1;
- (BOOL)validateGoTo:(id)arg1;
- (void)cmdGoToUtilities:(id)arg1;
- (BOOL)validateGoToUtilities:(id)arg1;
- (void)cmdGoToPublic:(id)arg1;
- (BOOL)validateGoToPublic:(id)arg1;
- (void)cmdGoToPictures:(id)arg1;
- (BOOL)validateGoToPictures:(id)arg1;
- (void)cmdGoToMovies:(id)arg1;
- (BOOL)validateGoToMovies:(id)arg1;
- (void)cmdGoToMusic:(id)arg1;
- (BOOL)validateGoToMusic:(id)arg1;
- (void)cmdGoToFavorites:(id)arg1;
- (BOOL)validateGoToFavorites:(id)arg1;
- (void)cmdGoToDocuments:(id)arg1;
- (BOOL)validateGoToDocuments:(id)arg1;
- (void)cmdGoToAllMyFiles:(id)arg1;
- (BOOL)validateGoToAllMyFiles:(id)arg1;
- (void)cmdGoToApplications:(id)arg1;
- (BOOL)validateGoToApplications:(id)arg1;
- (void)cmdGoToMeetingRoom:(id)arg1;
- (BOOL)validateGoToMeetingRoom:(id)arg1;
- (void)cmdGoToNetwork:(id)arg1;
- (BOOL)validateGoToNetwork:(id)arg1;
- (void)cmdGoToUserLibrary:(id)arg1;
- (BOOL)validateGoToUserLibrary:(id)arg1;
- (void)cmdGoToDownloads:(id)arg1;
- (BOOL)validateGoToDownloads:(id)arg1;
- (void)cmdGoToDesktop:(id)arg1;
- (BOOL)validateGoToDesktop:(id)arg1;
- (void)cmdGoHome:(id)arg1;
- (BOOL)validateGoHome:(id)arg1;
- (void)cmdGoToComputer:(id)arg1;
- (BOOL)validateGoToComputer:(id)arg1;
- (void)goToCommon:(const struct TFENode *)arg1;
- (BOOL)commonValidateGoToForNode:(const struct TFENode *)arg1;
- (void)cmdSetFocusToSearchField:(id)arg1;
- (void)cmdSpotlightFindFile:(id)arg1;
- (void)cmdAlternateFindFile:(id)arg1;
- (void)cmdFindFile:(id)arg1;
- (void)cmdCloseAllWindows:(id)arg1;
- (BOOL)validateCloseAllWindows:(id)arg1;
- (void)cmdNewSmartFolder:(id)arg1;
- (void)cmdNewFileViewer:(id)arg1;
- (BOOL)frameForFrontBrowserWindow:(struct CGRect *)arg1;
- (void)staggerBrowserWindow:(id)arg1 defaultWindowSettings:(BOOL)arg2;
- (void)openDockTargetForFFK:(const struct TFENode *)arg1;
- (void)closeAllWindowsForFFK;
- (void)closeAllWindowsForQuitting;
- (void)closeAllWindowsExceptDesktop;
- (void)applicationDidFinishRestoringWindows:(id)arg1;
- (void)closeAllAccessoryWindows;
- (void)setFrontRaiseOneWindow:(id)arg1;
- (void)closeAllWindowsToOrInsideNode:(const struct TFENode *)arg1;
- (void)closeAllTrashWindows;
- (void)handleReopenAppleEvent;
- (BOOL)isFrontWindowBackupBrowser;
- (BOOL)isBrowserWindow:(id)arg1;
- (unsigned long long)browserWindowCount;
- (void)typeSelectInFrontmostBrowser:(id)arg1;
- (id)windowForTimeMachine;
- (void)springNewWindowForTarget:(const struct TFENode *)arg1 atLocation:(struct CGPoint)arg2 includingMouseLocation:(BOOL)arg3 withOrigin:(struct ISpawnOrigin *)arg4;
- (struct CGRect)pinWindowFrame:(struct CGRect)arg1 toScreenContainingPoint:(struct CGPoint)arg2 includingMouse:(BOOL)arg3;
- (void)closeOrRetargetWindowForTarget:(const struct TFENode *)arg1 toPath:(const struct TFENodeVector *)arg2 originatingBrowser:(unsigned long long)arg3;
- (void)replaceUnresolvedTargets:(const struct TFENode *)arg1 withTarget:(const struct TFENode *)arg2;
- (void)springWindowDockCallback:(const char *)arg1 forRect:(const struct CGRect *)arg2 inDirection:(int)arg3;
- (void)revertAllSprungWindowsIncludingUnderMouse:(BOOL)arg1;
- (struct TFENode)nodeFromDockPath:(const struct TString *)arg1;
- (void)openEnclosingFolderOfNodes:(const struct TFENodeVector *)arg1 inWindow:(id)arg2 alwaysSpawn:(int)arg3 closeSpawningWindow:(int)arg4 invertBrowseInPlace:(int)arg5 alwaysSelectNodes:(BOOL)arg6;
- (id)targetSelectOrCreateWindowWithOptions:(id)arg1 inTarget:(const struct TFENode *)arg2;
- (void)targetSelectOrCreateWindow:(id)arg1 inTarget:(const struct TFENode *)arg2 selectNodes:(const struct TFENodeVector *)arg3;
- (void)targetSelectOrCreateWindowWithTarget:(const struct TFENode *)arg1;
- (id)retargetFrontOrCreateWindowForFind:(int)arg1 searchString:(id)arg2 shouldSpawn:(BOOL)arg3;
- (unsigned long long)selectionForKeyWindow:(struct TFENodeVector *)arg1 maxItems:(unsigned long long)arg2;
- (id)findBrowserWindowControllerAndSelectNodes:(const struct TFENodeVector *)arg1;
- (id)findBrowserWindowControllerForNode:(const struct TFENode *)arg1 skipController:(id)arg2 includeDesktop:(BOOL)arg3;
- (id)findBrowserWindowControllerForNode:(const struct TFENode *)arg1;
- (id)selectOrCreateWindowWithOptions:(id)arg1 inTarget:(const struct TFENode *)arg2;
- (id)selectOrCreateWindow:(const struct TFENode *)arg1 alwaysCreate:(BOOL)arg2 forceToolbarHidden:(BOOL)arg3 fromNewViewerCommand:(BOOL)arg4 sendFolderAction:(BOOL)arg5;
- (id)createWindowWithTarget:(const struct TFENode *)arg1 forceContainer:(BOOL)arg2 spawnOrigin:(struct ISpawnOrigin *)arg3 desiredLocation:(struct CGPoint)arg4;
- (id)createWindowWithTarget:(const struct TFENode *)arg1 forceContainer:(BOOL)arg2;
- (id)createWindowWithTarget:(const struct TFENode *)arg1;
- (id)createWindowWithDefaultTarget;
- (struct TFENode)defaultWindowTarget;
- (id)init;

@end

@interface TSharedServerViewController : NSNavSharedServerController <TNodeObserverProtocol>
{
    BOOL _waitingToEject;
    struct TNodeObserverCocoaBridge *_nodeObserver;
}

+ (void)initialize;
- (void)screenShareClicked:(id)arg1;
- (void)askToUseODSClicked:(id)arg1;
- (void)connectAsButtonClicked:(id)arg1;
- (void)connectToSharedServerAs;
- (void)setRepresentedObject:(id)arg1;
- (void)updateConnectionState;
- (void)updateConnectionStateAsRemoteDisc;
- (void)updateConnectionStateAsSharedServer;
- (void)updateLayout;
- (void)openSyncCompleted:(const struct TFENode *)arg1;
- (void)openSyncStarted:(const struct TFENode *)arg1;
- (void)nodeDeleted:(const struct TFENode *)arg1 fromObservedNode:(const struct TFENode *)arg2;
- (void)nodeChanged:(const struct TFENode *)arg1 inObservedNode:(const struct TFENode *)arg2 property:(unsigned int)arg3;
- (void)nodeAdded:(const struct TFENode *)arg1 toObservedNode:(const struct TFENode *)arg2;
- (void)stopObservingNode:(const struct TFENode *)arg1;
- (void)startObservingNode:(const struct TFENode *)arg1;
- (struct TFENode)serverNode;
- (void)finalize;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface TNotifyingSliderCell : NSSliderCell
{
}

- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;

@end

@interface TScriptableWindowController : NSWindowController <TNodeObserverProtocol>
{
    struct TNodeObserverCocoaBridge *_proxyNodeObserver;
    struct TFENode _proxyNode;
    struct CGRect _oldFrame;
}

+ (id)controllerForWindow:(id)arg1;
+ (void)initialize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct CGRect)finderScriptingContentRectForFrameRect:(const struct CGRect *)arg1;
- (struct CGRect)finderScriptingFrameRectForContentRect:(const struct CGRect *)arg1;
- (void)finderScriptingSetProperty:(unsigned int)arg1 value:(const struct AEDesc *)arg2 reply:(struct AEDesc *)arg3;
- (void)finderScriptingGetProperty:(unsigned int)arg1 requestedType:(const struct AEDesc *)arg2 desc:(struct AEDesc *)arg3;
- (unsigned int)finderScriptingModelKind;
- (void)windowDidEndMove:(id)arg1;
- (void)windowWillMove:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
- (BOOL)window:(id)arg1 shouldDragDocumentWithEvent:(id)arg2 from:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;
- (struct TFENode)fetchWindowProxyNode;
@property(readonly) struct TFENode target;
- (void)pathPopupSelect:(id)arg1;
- (void)pathPopupSelectedWithNode:(const struct TFENode *)arg1;
- (void)populatePathMenu:(id)arg1;
- (BOOL)shouldEnablePathMenuItem:(id)arg1 forNode:(const struct TFENode *)arg2;
- (id)windowIcon;
- (id)windowTitle;
- (void)updateWindowIcon;
- (void)updateWindowTitle;
- (void)configureWindowTitleAndIcon;
- (void)nodeChanged:(const struct TFENode *)arg1 inObservedNode:(const struct TFENode *)arg2 property:(unsigned int)arg3;
- (void)cmdClose:(id)arg1;
- (void)dealloc;
- (id)initWithWindow:(id)arg1;

@end

@interface TToolbar : NSToolbar
{
}

- (BOOL)_allowsSizeMode:(unsigned long long)arg1;

@end

@interface TToolbarController : NSController <NSToolbarDelegate>
{
    NSToolbar *_toolbar;
    TBrowserWindowController *_browserWindowController;
    NSMenuItem *_actionMenu;
    NSPopUpButton *_actionView;
    NSPopUpButton *_arrangeView;
    NSSegmentedControl *_backForwardView;
    NSMenu *_historySearchTemplate;
    NSMenuItem *_labelStamperMenu;
    NSSegmentedControl *_labelStamperView;
    NSMenuItem *_pathMenu;
    NSPopUpButton *_pathView;
    NSButton *_quickLookView;
    SGTSearchField *_searchView;
    NSButton *_toolbarButtonTemplate;
    NSMenuItem *_viewSwitcherMenu;
    NSSegmentedControl *_viewSwitcherView;
    NSMenuItem *_shareMenu;
    NSButton *_shareView;
    NSMenuItem *_arrangeMenu;
}

+ (unsigned int)kindFromPercentEscapedString:(id)arg1;
+ (const struct ToolbarItemInfo *)itemEntryFromKind:(unsigned int)arg1;
+ (id)identifierFromKind:(unsigned int)arg1;
+ (unsigned int)kindFromIdentifier:(id)arg1;
@property(readonly, nonatomic) NSMenuItem *arrangeMenu; // @synthesize arrangeMenu=_arrangeMenu;
@property(readonly, nonatomic) NSButton *shareView; // @synthesize shareView=_shareView;
@property(readonly, nonatomic) NSMenuItem *shareMenu; // @synthesize shareMenu=_shareMenu;
@property(readonly, nonatomic) NSButton *toolbarButtonTemplate; // @synthesize toolbarButtonTemplate=_toolbarButtonTemplate;
@property(readonly, nonatomic) NSMenuItem *labelStamperMenu; // @synthesize labelStamperMenu=_labelStamperMenu;
@property(readonly, nonatomic) NSSegmentedControl *labelStamperView; // @synthesize labelStamperView=_labelStamperView;
@property(readonly, nonatomic) NSButton *quickLookView; // @synthesize quickLookView=_quickLookView;
@property(readonly, nonatomic) NSMenu *historySearchTemplate; // @synthesize historySearchTemplate=_historySearchTemplate;
@property(readonly, nonatomic) SGTSearchField *searchView; // @synthesize searchView=_searchView;
@property(readonly, nonatomic) NSPopUpButton *arrangeView; // @synthesize arrangeView=_arrangeView;
@property(readonly, nonatomic) NSMenuItem *actionMenu; // @synthesize actionMenu=_actionMenu;
@property(readonly, nonatomic) NSPopUpButton *actionView; // @synthesize actionView=_actionView;
@property(readonly, nonatomic) NSMenuItem *pathMenu; // @synthesize pathMenu=_pathMenu;
@property(readonly, nonatomic) NSPopUpButton *pathView; // @synthesize pathView=_pathView;
@property(readonly, nonatomic) NSMenuItem *viewSwitcherMenu; // @synthesize viewSwitcherMenu=_viewSwitcherMenu;
@property(readonly, nonatomic) NSSegmentedControl *viewSwitcherView; // @synthesize viewSwitcherView=_viewSwitcherView;
@property(readonly, nonatomic) NSSegmentedControl *backForwardView; // @synthesize backForwardView=_backForwardView;
@property(readonly, nonatomic) TBrowserWindowController *browserWindowController; // @synthesize browserWindowController=_browserWindowController;
- (void)upgradeNSToolbarPrefs:(BOOL)arg1;
- (void)configurationAddItem:(unsigned int)arg1 afterItem:(unsigned int)arg2;
- (void)backForwardClicked:(id)arg1;
- (void)searchTextChanged:(id)arg1;
- (void)myCancelButtonAction:(id)arg1;
- (void)setSearchFieldText:(id)arg1;
- (id)searchSuggestions;
- (id)searchFieldText;
- (id)currentSearchFieldSuggestion;
- (BOOL)makeSearchFieldFirstResponder;
- (BOOL)searchFieldIsVisible;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 withPropertyListRepresentation:(id)arg3 willBeInsertedIntoToolbar:(BOOL)arg4;
- (id)toolbar:(id)arg1 itemsFromPasteboard:(id)arg2;
- (void)dealloc;
- (void)aboutToTearDown:(id)arg1;
- (void)toolbarDidRemoveItem:(id)arg1;
- (void)toolbarDidReorderItem:(id)arg1;
- (void)toolbarWillAddItem:(id)arg1;
- (void)windowSplitterViewUpdated;
- (void)fixUpFlexibleSpacersForItems:(id)arg1;
- (id)toolbarItemForKind:(unsigned int)arg1 withPropertyList:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)toolbar;
- (id)initWithBrowserWindowController:(id)arg1;

@end

@interface TBackForwardToolbarItem : TToolbarItem <NSMenuDelegate>
{
}

- (void)validate;
- (void)menuNeedsUpdate:(id)arg1;
- (id)menuItemForHistoryEntryAtPosition:(long long)arg1;
- (id)initWithItemIdentifier:(id)arg1 entry:(const struct ToolbarItemInfo *)arg2 controller:(id)arg3 propertyList:(id)arg4 willBeInsertedIntoToolbar:(BOOL)arg5;

@end

@interface TActionToolbarItemPopUpCell : NSPopUpButtonCell
{
}

- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;

@end

@interface TActionToolbarItem : TToolbarItem <NSMenuDelegate>
{
}

- (void)validate;
- (void)menuNeedsUpdate:(id)arg1;
- (id)initWithItemIdentifier:(id)arg1 entry:(const struct ToolbarItemInfo *)arg2 controller:(id)arg3 propertyList:(id)arg4 willBeInsertedIntoToolbar:(BOOL)arg5;

@end

@interface TToolbarItemDropTargetView : NSButton
{
    TLocationToolbarItem *_toolbarItem;
}

- (unsigned long long)controlSize;
- (void)setControlSize:(unsigned long long)arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 toolbarItem:(id)arg2;

@end

@interface TLocationToolbarItem : TToolbarItem
{
    unsigned int _itemKind;
    unsigned int _iconType;
    unsigned int _iconCreator;
    BOOL _dropTarget;
    BOOL _highlight;
}

+ (struct TFENode)nodeForToolbarItemKind:(unsigned int)arg1;
+ (unsigned int)toolbarItemKindForNode:(const struct TFENode *)arg1;
- (void)setHighlight:(BOOL)arg1 forDrop:(BOOL)arg2;
- (void)updateIcon;
- (void)setImageFromIcon:(const struct TIconRef *)arg1 highlight:(BOOL)arg2;
- (void)validate;
- (struct TFENode)location;
- (id)initWithItemIdentifier:(id)arg1 entry:(const struct ToolbarItemInfo *)arg2 controller:(id)arg3 propertyList:(id)arg4 willBeInsertedIntoToolbar:(BOOL)arg5;

@end

@interface TPathToolbarItem : TToolbarItem <NSMenuDelegate>
{
}

- (void)validate;
- (void)menuNeedsUpdate:(id)arg1;
- (id)initWithItemIdentifier:(id)arg1 entry:(const struct ToolbarItemInfo *)arg2 controller:(id)arg3 propertyList:(id)arg4 willBeInsertedIntoToolbar:(BOOL)arg5;

@end

@interface TQuickLookToolbarItem : TToolbarItem
{
}

- (void)flagsDidChange:(id)arg1;
- (void)flagsMayHaveChanged:(id)arg1;
- (void)setImageFromFlags:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithItemIdentifier:(id)arg1 entry:(const struct ToolbarItemInfo *)arg2 controller:(id)arg3 propertyList:(id)arg4 willBeInsertedIntoToolbar:(BOOL)arg5;

@end

@interface TSearchToolbarItem : TToolbarItem
{
}

- (id)initWithItemIdentifier:(id)arg1 entry:(const struct ToolbarItemInfo *)arg2 controller:(id)arg3 propertyList:(id)arg4 willBeInsertedIntoToolbar:(BOOL)arg5;

@end

@interface TToolbarItem : NSToolbarItem
{
    TToolbarController *_controller;
    BOOL _forceStandardSize;
}

- (void)dealloc;
- (void)toolbarControllerAboutToTearDown:(id)arg1;
- (struct CGSize)minSize;
- (void)validate;
- (id)initWithItemIdentifier:(id)arg1 entry:(const struct ToolbarItemInfo *)arg2 controller:(id)arg3 propertyList:(id)arg4 willBeInsertedIntoToolbar:(BOOL)arg5;

@end

@interface TUserLocationToolbarItem : TLocationToolbarItem <TNodeObserverProtocol>
{
    struct TFENode _location;
    NSURL *_locationURL;
    struct AliasRecord **_locationAlias;
    struct TNodeObserverCocoaBridge *_nodeObserver;
}

+ (id)userLocationToolbarItemForNode:(const struct TFENode *)arg1 toolbarController:(id)arg2;
@property(retain, nonatomic) NSURL *locationURL; // @synthesize locationURL=_locationURL;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setLocation:(const struct TFENode *)arg1;
- (void)nodeGoingAway:(const struct TFENode *)arg1;
- (void)nodeMoved:(const struct TFENode *)arg1;
- (void)showAllExtensionsPreferenceChanged:(id)arg1;
- (void)nodeChanged:(const struct TFENode *)arg1 inObservedNode:(const struct TFENode *)arg2 property:(unsigned int)arg3;
- (void)cmdGoToToolbarUserLocation:(id)arg1;
- (BOOL)allowsDuplicatesInToolbar;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)updateLabel;
- (void)updateIcon;
- (id)initWithItemIdentifier:(id)arg1 entry:(const struct ToolbarItemInfo *)arg2 controller:(id)arg3 propertyList:(id)arg4 willBeInsertedIntoToolbar:(BOOL)arg5;
- (void)updateMenuFormRepresentation;
- (void)updatePropertyListRepresentation;
- (id)persistentData;
- (void)decodeConfigData:(id)arg1;
- (struct TFENode)location;
- (void)setLocationAlias:(struct AliasRecord **)arg1;

@end

@interface TViewSwitcherToolbarItem : TToolbarItem
{
}

- (void)validate;
- (id)initWithItemIdentifier:(id)arg1 entry:(const struct ToolbarItemInfo *)arg2 controller:(id)arg3 propertyList:(id)arg4 willBeInsertedIntoToolbar:(BOOL)arg5;

@end

@interface TIsFTPURLToFileHelper : NSObject <NSURLConnectionDelegate>
{
    struct TriStateBool _isFileURL;
    struct TMutex _isFileURLLock;
    struct TConditionVariable _isFileURLCondition;
    struct TNSAutoRef<NSURLConnection *> _ftpURLConnection;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (struct TriStateBool)isFileURL;
- (void)startConnection:(id)arg1;

@end

@interface TSaveSearchAccessoryViewController : NSViewController
{
    BOOL _addToSidebar;
    BOOL _forceAddToSidebar;
}

@property BOOL forceAddToSidebar; // @synthesize forceAddToSidebar=_forceAddToSidebar;
@property BOOL addToSidebar; // @synthesize addToSidebar=_addToSidebar;
- (id)init;

@end

@interface TSaveSearchSheetController : TSaveObjectController
{
    TSaveSearchAccessoryViewController *_accessoryViewController;
    id <TSaveSearchSheetControllerDelegate> _delegate;
}

+ (id)controllerForWindow:(id)arg1 withDelegate:(id)arg2 withName:(const struct TString *)arg3 forceAddToSidebar:(BOOL)arg4;
@property(readonly) TSaveSearchAccessoryViewController *accessoryViewController; // @synthesize accessoryViewController=_accessoryViewController;
- (void)savePanelDidEnd:(id)arg1 returnCode:(long long)arg2;
- (BOOL)validateName:(const struct TString *)arg1 inDestination:(const struct TFENode *)arg2;
- (void)dealloc;
- (id)init;

@end

@interface TOperationSheetClientWithBlocks : NSObject <TStdAlertSheetClientProtocol>
{
    id _nextStep;
    id _cancel;
}

+ (id)clientWithNextStep:(id)arg1 cancel:(void)arg2;
- (void)stdAlertSheetCancelButtonPressed;
- (void)stdAlertSheetOKButtonPressed;
- (void)dealloc;

@end

@interface TWindowHistoryEntry : NSObject
{
    struct TFENodeVector _targetPath;
    NSDictionary *_windowState;
}

+ (id)historyEntryForTargetPath:(const struct TFENodeVector *)arg1 windowState:(id)arg2;
@property(retain, nonatomic) NSDictionary *windowState; // @synthesize windowState=_windowState;
@property(nonatomic) struct TFENodeVector targetPath; // @synthesize targetPath=_targetPath;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)isValid;
- (void)dealloc;

@end

@interface TWindowHistory : NSObject <TNodeObserverProtocol>
{
    NSMutableArray *_historyList;
    long long _historyPosition;
    struct TNodeObserverCocoaBridge *_nodeObserver;
    id <BrowserController> _controller;
}

@property(nonatomic) long long historyPosition; // @synthesize historyPosition=_historyPosition;
- (void)nodeMoved:(const struct TFENode *)arg1;
- (void)nodeDeleted:(const struct TFENode *)arg1 fromObservedNode:(const struct TFENode *)arg2;
- (void)updateCurrentEntryWindowState:(id)arg1;
- (void)startObservingNodes:(const struct TFENodeVector *)arg1;
- (void)stopObservingNodes:(const struct TFENodeVector *)arg1;
- (void)removeNodeFromHistory:(const struct TFENode *)arg1;
- (void)addToHistory:(const struct TFENodeVector *)arg1 windowState:(id)arg2;
@property(readonly, nonatomic) TWindowHistoryEntry *next;
@property(readonly, nonatomic) TWindowHistoryEntry *previous;
@property(readonly, nonatomic) BOOL atEnd;
@property(readonly, nonatomic) BOOL atBeginning;
- (long long)endPosition;
- (void)removeEntry:(id)arg1;
- (id)entryAtPosition:(long long)arg1;
@property(readonly, nonatomic) long long entryCount;
- (void)aboutToTearDown;
- (void)dealloc;
- (id)initWithBrowserController:(id)arg1;

@end

@interface TBannerViewController : TViewController <TCoalescingNodeObserverProtocol>
{
    TTextField *_bannerFld;
    NSButton *_bannerBtn;
    struct TString _text;
    int _type;
    struct TCoalescingNodeObserverCocoaBridge *_nodeObserver;
    id <BrowserController> _browserController;
    struct TFENode _observedNode;
}

+ (void)initialize;
@property(nonatomic) id <BrowserController> browserController; // @synthesize browserController=_browserController;
@property(nonatomic) int type; // @synthesize type=_type;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)nodesChanged:(const vector_614ab7ad *)arg1 inObservedNode:(const struct TFENode *)arg2;
- (void)openSyncCompleted:(const struct TFENode *)arg1;
- (void)nodesDeleted:(const struct TFENodeVector *)arg1 fromObservedNode:(const struct TFENode *)arg2;
- (void)nodesAdded:(const struct TFENodeVector *)arg1 toObservedNode:(const struct TFENode *)arg2;
- (void)populationChangedInContainerNode:(const struct TFENode *)arg1;
- (void)stopObservingTargetNode;
- (void)startObservingTargetNode;
- (void)burn:(id)arg1;
- (void)updateButtonStateForBurnFolder;
- (void)updateTitleForBurnFolder;
- (void)emptyTrash:(id)arg1;
- (void)preferencesUpdated:(id)arg1;
- (struct TString)titleForTrashButton;
- (void)updateButtonStateForTrashFolder;
- (void)updateLayout;
@property(copy, nonatomic) NSString *text; // @dynamic text;
- (void)setRepresentedObject:(id)arg1;
- (struct TFENode)representedNode;
- (void)viewLoaded;
- (void)finalize;
- (void)dealloc;
- (id)initWithBannerType:(int)arg1 withParentController:(id)arg2;

@end

@interface TBannerControllerView : NSNavBannerView
{
    TBannerViewController *_bannerViewController;
}

- (void)setFrameSize:(struct CGSize)arg1;

@end

@interface TApplicationController : NSResponder <NSMenuDelegate, NSApplicationDelegate>
{
    NSDictionary *_sharedIKContext;
    unsigned long long _sharedIKContextNumClients;
    struct TApplicationEventHandler *_application;
    struct TUndoableActionManager *_undoableActionManager;
    long long _lastRecentFoldersMenuUpdate;
    NSMenu *_openWithMenu;
    NSMenu *_alwaysOpenWithMenu;
    NSMenu *_goMenu;
    NSMenu *_recentFoldersMenu;
    TArrangeByMenuController *_arrangeByMenuController;
    NSMenu *_dockMenu;
    TMidnightTimer *_midnightTimer;
    BOOL _doBackupCheck;
}

+ (id)viewMenu;
+ (id)editMenu;
+ (id)fileMenu;
+ (id)finderMenu;
+ (id)menubar;
+ (id)instanceMethodSignatureForSelector:(SEL)arg1;
+ (BOOL)shouldForwardSelectorToGlobalWindowController:(SEL)arg1;
+ (id)sharedApplicationController;
+ (void)startQuitSequence;
@property(nonatomic) BOOL doBackupCheck; // @synthesize doBackupCheck=_doBackupCheck;
- (id)applicationDockMenu:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillFinishLaunching:(id)arg1;
- (void)cmdBrowseOtherTimeMachineDisks:(id)arg1;
- (void)cmdAnimateStarFieldBackward:(id)arg1;
- (void)cmdAnimateStarFieldForward:(id)arg1;
- (void)cmdShowHideStarField:(id)arg1;
- (void)cmdEnterTimeMachine:(id)arg1;
- (void)cmdCycleWindows:(id)arg1;
- (BOOL)validateCycleWindows:(id)arg1;
- (void)cmdConnectTo:(id)arg1;
- (BOOL)validateConnectTo:(id)arg1;
- (void)cmdClearRecentFolders:(id)arg1;
- (BOOL)validateClearRecentFolders:(id)arg1;
- (void)cmdRecentFoldersItem:(id)arg1;
- (void)cmdRecentFolders:(id)arg1;
- (BOOL)validateRecentFolders:(id)arg1;
- (void)cmdSelectStartupDisk:(id)arg1;
- (BOOL)validateSelectStartupDisk:(id)arg1;
- (void)cmdToggleViewOptions:(id)arg1;
- (BOOL)validateToggleViewOptions:(id)arg1;
- (void)cmdShowClipboard:(id)arg1;
- (void)redo:(id)arg1;
- (BOOL)validateRedo:(id)arg1;
- (void)undo:(id)arg1;
- (BOOL)validateUndo:(id)arg1;
- (void)cmdSetLabel:(id)arg1;
- (BOOL)validateSetLabel:(id)arg1;
- (BOOL)validateQuickLook:(id)arg1;
- (void)cmdEmptyTrashSecureSilently:(id)arg1;
- (BOOL)validateEmptyTrashSecureSilently:(id)arg1;
- (void)cmdEmptyTrashSecure:(id)arg1;
- (BOOL)validateEmptyTrashSecure:(id)arg1;
- (void)cmdEmptyTrashSilently:(id)arg1;
- (BOOL)validateEmptyTrashSilently:(id)arg1;
- (void)cmdEmptyTrash:(id)arg1;
- (BOOL)validateEmptyTrash:(id)arg1;
- (void)cmdSwitchToSimpleFinder:(id)arg1;
- (void)switchToSimpleFinder;
- (BOOL)validateSwitchToSimpleFinder:(id)arg1;
- (void)cmdSwitchToFullFinder:(id)arg1;
- (BOOL)validateSwitchToFullFinder:(id)arg1;
- (void)cmdPreferences:(id)arg1;
- (void)cmdAbout:(id)arg1;
- (void)releaseImageCache;
- (void)resetInternalCacheVersionForNode:(const struct TFENode *)arg1;
- (void)detachImageCacheFromView:(id)arg1;
- (void)attachImageCacheToView:(id)arg1;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;
- (void)resetEditMenuItemTitles;
- (void)resetMenuItemOfMenu:(id)arg1 withAction:(SEL)arg2 toTitle:(id)arg3;
- (void)buildOpenWithMenu:(id)arg1 action:(SEL)arg2;
- (void)buildRecentFoldersMenu:(id)arg1;
- (void)configureMenuBar;
- (void)loadMenuBar;
- (void)configureDebugMenu;
- (void)menuDidSendAction:(id)arg1;
- (void)configureWindowMenu;
- (void)configureGoMenu;
- (void)configureGoMenuIcons;
- (void)setIconType:(unsigned int)arg1 forAction:(SEL)arg2 inMenu:(id)arg3;
- (void)setIcon:(const struct TIconRef *)arg1 forAction:(SEL)arg2 inMenu:(id)arg3;
- (void)setImage:(id)arg1 forAction:(SEL)arg2 inMenu:(id)arg3;
- (id)imageForAction:(SEL)arg1 inMenu:(id)arg2;
- (void)configureViewMenu;
- (void)configureEditMenu;
- (void)configureFileMenu;
- (void)loadLabelViewMenuItem;
- (void)configureArrangeByMenuItem;
- (void)configureOpenWithMenuItem;
- (void)configureFinderMenu;
- (void)configureTrashMenuItems;
- (void)hideMenuItemButAllowKeyEquivalent:(id)arg1;
- (id)setMenuDelegateForItem:(long long)arg1 inMenu:(id)arg2;
- (BOOL)validateToolbarItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (short)handleAction:(SEL)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TBrowserViewSwitchAnimator : NSObject
{
    struct TNSRef<NSWindow *> _parentWindow;
    struct TNSRef<NSWindow *> _coverWindow;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _initialBrowserImage;
    struct TNSRef<CALayer *> _initialBrowserLayer;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _finalBrowserImage;
    struct TNSRef<CALayer *> _finalBrowserLayer;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)animateTransition;
- (void)showCoverWindowWithFrame:(struct CGRect)arg1;
- (void)hideCoverWindow;
- (id)createCoverWindowWithFrame:(struct CGRect)arg1;
- (id)finalBrowserLayer;
- (id)initialBrowserLayer;
- (void)setFinalBrowserImage:(struct CGImage *)arg1;
- (void)setInitialBrowserImage:(struct CGImage *)arg1;
- (void)setParentWindow:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)tearDown;

@end

@interface TCA3PartLayer : CALayer
{
    struct TNSRef<CALayer *> _left;
    struct TNSRef<CALayer *> _center;
    struct TNSRef<CALayer *> _centerFill;
    struct TNSRef<CALayer *> _right;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _image;
    double _leftWidth;
    double _rightWidth;
    double _scaleFactor;
}

+ (id)layerWithLeftWidth:(double)arg1 andRightWidth:(double)arg2 andScaleFactor:(double)arg3;
@property(nonatomic) double rightWidth; // @synthesize rightWidth=_rightWidth;
@property(nonatomic) double leftWidth; // @synthesize leftWidth=_leftWidth;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setBounds:(struct CGRect)arg1;
- (void)updateSubViewsLayout:(const struct CGRect *)arg1;
@property(nonatomic) struct CGImage *image;
- (id)initWithLeftWidth:(double)arg1 andRightWidth:(double)arg2 andScaleFactor:(double)arg3;

@end

@interface TBrowserWindowController : TScriptableWindowController <BrowserController, NSWindowDelegate, TNodeObserverProtocol, ISpawnOriginDelegateProtocol, TSaveSearchSheetControllerDelegate, QLSeamlessCloserDelegate>
{
    struct TFENodeVector _targetPath;
    TBrowserViewController *_browserViewController;
    TBrowserViewDataSource *_dataSource;
    NSViewController *_bannerViewController;
    struct TNodeBrowser *_nodeBrowser;
    TNodeViewSettings *_viewSettings;
    struct ISpawnOrigin *_spawnOrigin;
    NSButton *_closeButton;
    TToolbarController *_toolbarController;
    TSidebarSplitterController *_sidebarSplitterController;
    TMeetingRoomInfoViewController *_meetingRoomInfoViewController;
    TAirDropNotAvailableViewController *_airDropNotAvailableViewController;
    TSearchSliceController *_searchSliceController;
    TBottomBarController *_bottombarController;
    TStatusBarController *_statusBarController;
    struct TNSRef<TBrowserViewSwitchAnimator *> _viewSwitchAnimator;
    TWindowHistory *_history;
    NSTimer *_springToFrontTimer;
    struct CGRect _springAnchorRect;
    struct OpaqueCoreDragHandler *_springTrackingHandler;
    struct CGRect _springRememberedFrame;
    long long _springRememberedWindowWeWereBehind;
    struct TFENodeVector _springRememberedTargetPath;
    NSString *_springRememberedViewStyle;
    BOOL _springCloseWhenDragLeavesWindow;
    unsigned long long _itemCount;
    unsigned long long _selectedNodesCount;
    struct TNSRef<NSString *> _viewStyle;
    NSString *_windowDefaultViewStyle;
    struct TFENode _initialTarget;
    double _initialSidebarWidthFromWindowState;
    struct TNSRef<NSString *> _groupBy;
    BOOL _gotoInProgress;
    BOOL _binding;
    BOOL _initingWindow;
    BOOL _isZooming;
    BOOL _windowStateSavePending;
    BOOL _doNotResetFirstResponder;
    BOOL _smartDiscardTargetIsStored;
    BOOL _smartDiscardRebuildView;
    int _smartDiscardSearchAction;
    struct TFENodeVector _smartDiscardTargetPath;
    NSString *_smartDiscardViewStyle;
    struct TNSRef<NSString *> _lastRecentSearchAdded;
    struct TNodeObserverCocoaBridge *_publishedFolderNodeObserver;
    NSView *_cachedBrowserBaseView;
    unsigned long long _serialID;
    double _searchKeyCoalescing;
    struct TString _suggestionsScopeQuery;
    BOOL _usesSuggestions;
    struct TNSRef<NSMutableDictionary *> _sharedItemsCache;
}

+ (id)controllerWithID:(unsigned long long)arg1;
+ (unsigned long long)controllerIDOf:(id)arg1;
+ (BOOL)shouldShowStatusBar;
+ (BOOL)shouldShowBottombarForTarget:(const struct TFENode *)arg1;
+ (void)springNowWithNoSpringController;
+ (void)springImmediately;
+ (double)windowStaggerOffset;
+ (id)defaultWindowStateForNode:(const struct TFENode *)arg1;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (id)instanceMethodSignatureForSelector:(SEL)arg1;
+ (BOOL)shouldForwardSelectorToViewController:(SEL)arg1;
+ (BOOL)suggestionsFrameworkAvailable;
+ (id)defaultFileSuggesters;
@property(nonatomic) BOOL binding; // @synthesize binding=_binding;
@property(retain, nonatomic) NSView *cachedBrowserBaseView; // @synthesize cachedBrowserBaseView=_cachedBrowserBaseView;
@property(nonatomic) int smartDiscardSearchAction; // @synthesize smartDiscardSearchAction=_smartDiscardSearchAction;
@property(nonatomic) BOOL isZooming; // @synthesize isZooming=_isZooming;
@property(nonatomic) BOOL initingWindow; // @synthesize initingWindow=_initingWindow;
@property(nonatomic) BOOL windowStateSavePending; // @synthesize windowStateSavePending=_windowStateSavePending;
@property(nonatomic) double initialSidebarWidthFromWindowState; // @synthesize initialSidebarWidthFromWindowState=_initialSidebarWidthFromWindowState;
@property(nonatomic) BOOL gotoInProgress; // @synthesize gotoInProgress=_gotoInProgress;
@property(retain, nonatomic) NSString *windowDefaultViewStyle; // @synthesize windowDefaultViewStyle=_windowDefaultViewStyle;
@property(nonatomic) unsigned long long selectedNodesCount; // @synthesize selectedNodesCount=_selectedNodesCount;
@property(nonatomic) unsigned long long itemCount; // @synthesize itemCount=_itemCount;
@property(retain, nonatomic) TNodeViewSettings *viewSettings; // @synthesize viewSettings=_viewSettings;
@property(nonatomic) struct TNodeBrowser *nodeBrowser; // @synthesize nodeBrowser=_nodeBrowser;
@property(readonly) TBrowserViewController *browserViewController; // @synthesize browserViewController=_browserViewController;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)nodeIsDimmed:(const struct TFENode *)arg1;
- (void)nodeDeleted:(const struct TFENode *)arg1 fromObservedNode:(const struct TFENode *)arg2;
- (void)nodeAdded:(const struct TFENode *)arg1 toObservedNode:(const struct TFENode *)arg2;
- (void)publishedFolderListDidChange;
- (void)springRemoveDragTrackingHandler;
- (void)springInstallDragTrackingHandler;
- (void)configureAccessoryViews;
- (void)configurePersistentViewsWithState:(id)arg1;
- (void)createBrowserViewWithViewStyle:(id)arg1;
- (_Bool)browserDefaultsToGroupView;
- (void)finishWindowInitialization;
- (void)destroyBrowserView;
- (void)updateViewLayout;
- (void)updateViewLayout:(BOOL)arg1;
- (void)switchToViewStyle:(id)arg1;
- (void)setPreferredViewStyle:(id)arg1;
@property(nonatomic) NSString *toolbarViewStyle;
@property(retain, nonatomic) NSString *viewStyle;
- (void)buildBrowserView:(BOOL)arg1;
- (void)setupViewSwitchAnimator;
- (id)viewSwitchAnimator;
- (void)viewSwitcherAction:(id)arg1;
- (id)seamlessCloserSourcePreviewViewForPreviewItem:(id)arg1;
- (id)seamlessCloserTransitionImageForPreviewItem:(id)arg1 contentRect:(struct CGRect *)arg2;
- (struct CGRect)seamlessCloserSourceFrameOnScreenForPreviewItem:(id)arg1;
- (id)quickLookSharedPreviewViewForPreviewNode:(const struct TFENode *)arg1;
- (id)zoomImageForNode:(const struct TFENode *)arg1 contentRect:(struct CGRect *)arg2;
- (struct CGRect)globalZoomRectForNode:(const struct TFENode *)arg1;
- (void)configureWindowForContentChange;
- (struct CGSize)minimumSizeForContent;
- (id)windowContentView;
- (struct CGRect)browserViewContainerFrame;
- (id)browserViewContainer;
- (id)sidebarViewContainer;
- (id)splitView;
- (unsigned long long)serialID;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowWillStartLiveResize:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)windowDidEndMove:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowDidChange;
- (void)windowDidResignMain:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)retargetToNodeAndComputePath:(const struct TFENode *)arg1;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (BOOL)validateForward:(id)arg1;
- (BOOL)validateBack:(id)arg1;
- (void)historyChanged;
- (void)pathNodeGoingAway:(const struct TFENode *)arg1;
- (void)pathPopupSelectedWithNode:(const struct TFENode *)arg1;
- (BOOL)shouldEnablePathMenuItem:(id)arg1 forNode:(const struct TFENode *)arg2;
- (void)openSelection;
- (void)cmdSearchFromToolbar:(id)arg1;
- (BOOL)canSetFocusToSearchField;
- (void)cmdToggleSearchSlices:(id)arg1;
- (BOOL)validateToggleSearchSlices:(id)arg1;
- (void)cmdToggleBottombar:(id)arg1;
- (BOOL)validateToggleBottombar:(id)arg1;
- (void)cmdToggleStatusBar:(id)arg1;
- (BOOL)validateToggleStatusBar:(id)arg1;
- (void)cmdShowSidebarPrefs:(id)arg1;
- (void)cmdAddToDock:(id)arg1;
- (BOOL)validateAddToDock:(id)arg1;
- (void)cmdRemoveFromSidebar:(id)arg1;
- (BOOL)validateRemoveFromSidebar:(id)arg1;
- (void)cmdRenameInSidebar:(id)arg1;
- (BOOL)validateRenameInSidebar:(id)arg1;
- (void)cmdToggleSidebar:(id)arg1;
- (BOOL)validateToggleSidebar:(id)arg1;
- (BOOL)validateRunToolbarCustomizationPalette:(id)arg1;
- (void)runToolbarCustomizationPalette:(id)arg1;
- (void)cmdToggleToolbar:(id)arg1;
- (BOOL)validateToggleToolbar:(id)arg1;
- (void)cmdViewAsFlow:(id)arg1;
- (BOOL)validateViewAsFlow:(id)arg1;
- (void)cmdViewAsColumns:(id)arg1;
- (BOOL)validateViewAsColumns:(id)arg1;
- (void)cmdViewAsList:(id)arg1;
- (BOOL)validateViewAsList:(id)arg1;
- (void)cmdViewAsIcons:(id)arg1;
- (BOOL)validateViewAsIcons:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)cmdClose:(id)arg1;
- (void)cmdViewAsSubmenu:(id)arg1;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (BOOL)validateToolbarItem:(id)arg1;
- (short)handleAction:(SEL)arg1 sender:(id)arg2;
- (BOOL)validateTargetForMenuItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1 withObject:(id)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (void)saveQuery:(BOOL)arg1;
- (id)userSearchSlices;
- (void)copySearchFieldFromOther:(id)arg1;
- (int)saveSearchWithName:(const struct TString *)arg1 inDestination:(const struct TFENode *)arg2 addToSidebar:(BOOL)arg3;
- (void)searchSaveSheetDismissedWithCode:(long long)arg1;
- (void)searchWasSaved;
- (void)configureForSearchAction:(int)arg1 forSearchString:(id)arg2;
- (void)addingSearchToolbarItem:(id)arg1;
- (void)searchFieldTextChanged;
- (struct TString)_backupBrowserSnapshotPath;
- (BOOL)_toolbarSearchFieldIsVisible;
- (id)_toolbarSearchField;
- (id)_historySearchTemplateMenu;
- (id)currentSearchField;
- (BOOL)isAppCentric;
- (BOOL)isICloud;
- (BOOL)uiAllowsRenamingNode:(const struct TFENode *)arg1;
- (void)configureStatusBar:(BOOL)arg1 mode:(BOOL)arg2;
- (void)toggleStatusBarVisibility:(BOOL)arg1 animate:(BOOL)arg2 mode:(BOOL)arg3;
- (double)statusBarHeightDeltaForVisibility:(BOOL)arg1 mode:(BOOL)arg2;
- (void)configureWindowFrameForStatusBarVisible:(BOOL)arg1 mode:(BOOL)arg2;
- (BOOL)statusBarIsVisible;
- (void)airDropAvailabilityChanged:(id)arg1;
- (double)configureForMeetingRoom:(BOOL)arg1;
- (double)configureMeetingRoomInfoView:(BOOL)arg1;
- (double)configureAirDropNotAvailableView:(BOOL)arg1;
- (BOOL)meetingRoomInfoViewIsVisible;
- (BOOL)airDropNotAvailableViewIsVisible;
- (id)splitViewForToolbarAlignment;
- (void)configureSidebar:(BOOL)arg1 setSplitterPosition:(BOOL)arg2;
- (BOOL)sidebarIsVisible;
- (BOOL)shouldShowSidebarSplitter;
- (double)bannerHeight;
- (BOOL)toolbarIsVisible;
- (id)toolbar;
- (struct CGSize)minimumBrowserViewSize;
- (BOOL)isSprungAwayFromOriginalTarget;
- (void)revertToPreviousSpringState;
- (BOOL)windowIsSpringing;
- (void)setCloseWhenDragLeavesWindow;
- (void)nodeBrowserReceivingDrag;
- (void)forgetSpringState;
- (void)springWindowFromTimer:(id)arg1;
- (void)springNow;
- (struct CGRect)rememberSpringState;
- (void)springDragInsideWindow:(struct OpaqueCoreDrag *)arg1;
- (void)springDragLeaveWindow:(struct OpaqueCoreDrag *)arg1;
- (void)springDragEnterWindow:(struct OpaqueCoreDrag *)arg1;
- (void)springUpdateAnchorRect:(struct OpaqueCoreDrag *)arg1;
- (void)stopSpringToFrontTimer;
- (void)setInBrowseMode:(BOOL)arg1;
- (void)animateToBrowseMode:(BOOL)arg1;
- (void)getBrowseModeAnimationInfo:(struct TBrowseModeAnimationInfo *)arg1;
- (void)getContainerModeAnimationInfo:(struct TBrowseModeAnimationInfo *)arg1;
- (void)configureForBrowseMode:(BOOL)arg1;
- (void)createImage:(struct CGImage **)arg1 andFrame:(struct CGRect *)arg2 forView:(id)arg3;
- (void)createImage:(struct CGImage **)arg1 andFrame:(struct CGRect *)arg2 forChildrenOfView:(id)arg3;
- (void)createShadowImage:(struct CGImage **)arg1 andFrame:(struct CGRect *)arg2 forWindow:(id)arg3;
- (void)configureSidebarForMode:(BOOL)arg1;
- (void)configureWindowForMode:(BOOL)arg1;
- (BOOL)inBrowseMode;
- (void)resizeWindowWithSize:(struct CGSize)arg1 animate:(BOOL)arg2;
- (void)setWindowFrame:(struct CGRect)arg1 animate:(BOOL)arg2;
- (BOOL)isDesktop;
- (long long)windowNumber;
- (id)browserWindow;
- (struct TFENode)fetchWindowProxyNode;
- (BOOL)shouldStaggerWindowPositions;
- (void)close;
- (void)handleCloseButton;
- (void)magnifyWithEvent:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (BOOL)getSelectionForServices:(struct TFENodeVector *)arg1;
- (struct CGRect)finderScriptingContentRectForFrameRect:(const struct CGRect *)arg1;
- (struct CGRect)finderScriptingFrameRectForContentRect:(const struct CGRect *)arg1;
- (unsigned int)finderScriptingModelKind;
- (void)reduceRootedPath:(struct TFENodeVector *)arg1;
- (void)openLocation:(const struct TFENode *)arg1 origin:(struct ISpawnOrigin *)arg2;
- (struct TFENode)sidebarTarget;
- (void)closeOrRetargetWindowForTarget:(const struct TFENode *)arg1 toPath:(const struct TFENodeVector *)arg2 originatingBrowser:(unsigned long long)arg3;
- (void)replaceUnresolvedTarget:(const struct TFENode *)arg1 withTarget:(const struct TFENode *)arg2;
- (void)backForwardCommon:(BOOL)arg1;
- (void)gotoHistoryEntry:(id)arg1;
- (const struct TFENodeVector *)targetPath;
- (const struct TFENode *)initialTarget;
- (struct TFENode)target;
- (void)setTargetPath:(const struct TFENodeVector *)arg1;
- (void)setTargetPath:(const struct TFENodeVector *)arg1 withViewStyle:(id)arg2;
- (void)setTargetPath:(const struct TFENodeVector *)arg1 withViewStyle:(id)arg2 rebuildView:(BOOL)arg3;
- (void)alwaysOpenWithChanged:(id)arg1;
- (void)rebindViewStyle;
- (void)showDiscardSmartFolderSheetForAction:(int)arg1;
- (void)showDiscardSmartFolderSheetForAction:(int)arg1 target:(const struct TFENodeVector *)arg2 viewStyle:(id)arg3 rebuildView:(BOOL)arg4;
- (void)completeSetTargetWithStoredValues;
- (void)updateSidebarSelectionForCurrentTarget;
- (BOOL)browserViewHasFocus;
- (void)selectNodesNowOrLater:(const struct TFENodeVector *)arg1;
- (void)browserSelectionChanged;
- (BOOL)shouldCascadeWindows;
- (void)configureWindowWithState:(id)arg1;
- (void)unlockOverlayScrollerStateOnMainThread;
- (void)unlockOverlayScrollerState;
- (void)lockOverlayScrollersToHiddenState;
- (void)viewContentChanged;
- (void)configureWindowCloseButton;
- (void)configureAndPlaceWindowWithState:(id)arg1;
- (struct CGRect)pinWindowFrame:(struct CGRect)arg1 toScreenContainingPoint:(struct CGPoint)arg2 includingMouse:(BOOL)arg3;
- (void)showOnOpen:(BOOL)arg1;
- (BOOL)windowStateIsValid:(id)arg1;
- (id)nodeViewSettings;
- (id)windowStateForNode:(const struct TFENode *)arg1 forceContainer:(BOOL)arg2;
- (void)saveWindowState;
- (void)dealloc;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)windowDidLoad;
- (id)initWithTargetPath:(const struct TFENodeVector *)arg1 forceContainer:(BOOL)arg2 spawnOrigin:(struct ISpawnOrigin *)arg3 desiredLocation:(struct CGPoint)arg4;
- (id)initWithState:(id)arg1 targetPath:(const struct TFENodeVector *)arg2;
- (id)init;
- (id)windowNibName;
- (id)windowState;
- (id)viewStyleFromState:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)setTargetPath:(const struct TFENodeVector *)arg1 withViewStyle:(id)arg2 rebuildView:(BOOL)arg3 retarget:(BOOL)arg4;
- (void)refreshSnapshots;
- (BOOL)isBackupDeleteAllowed;
- (BOOL)isValidTargetForSnapshot:(const struct TFENode *)arg1;
- (id)restoreImages;
- (struct TString)pathForOriginalAbsolutePath:(const struct TString *)arg1;
- (struct TFENode)targetForOriginalNode:(const struct TFENode *)arg1;
- (struct TFENode)originalOrLatestNodeForNode:(const struct TFENode *)arg1;
- (struct TFENode)originalNodeForNode:(const struct TFENode *)arg1;
- (const struct TFENode *)snapshotNode;
@property(readonly, nonatomic) BOOL isTimeMachineBrowser;
@property(readonly, nonatomic) BOOL isSnapshotImageBrowser;
@property(readonly, nonatomic) BOOL isBackupBrowser;
- (void)cmdShareFromToolbarItem:(id)arg1;
- (void)shareWithSharingService:(id)arg1;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (void)sharingService:(id)arg1 didShareItems:(id)arg2;
- (void)sharingService:(id)arg1 didFailToShareItems:(id)arg2 error:(id)arg3;
- (id)sharingServicePicker:(id)arg1 delegateForSharingService:(id)arg2;
- (void)sharingServicePicker:(id)arg1 didChooseSharingService:(id)arg2;
- (void)clearSharedItemsCache;
- (void)cacheSharedItems:(struct TFENodeVector *)arg1;
- (BOOL)validateShare:(id)arg1;
- (void)cmdShare:(id)arg1;
- (void)newTargetPathForNode:(const struct TFENode *)arg1 existingPath:(const struct TFENodeVector *)arg2 newPath:(struct TFENodeVector *)arg3;
- (void)cmdGotoHistoryPosition:(id)arg1;
- (id)history;
- (void)cmdForward:(id)arg1;
- (void)cmdBack:(id)arg1;
- (void)searchWasChanged;
- (BOOL)searchSlicesAreVisible;
- (BOOL)shouldUseSuggestions;
- (struct TString)searchScopeName;
- (void)tryFocusingSearchField;
- (id)searchFieldText;
- (BOOL)targetIsEditedSmartFolder;
- (BOOL)targetIsUnsavedSmartFolder;
- (void)configureWindowForTargetChange;
- (void)updateBottombar;
- (double)configureBottombar:(BOOL)arg1;
- (BOOL)bottombarIsVisible;
- (void)configureBanner;
- (void)sidebarDidChangeVisibility:(BOOL)arg1;
- (BOOL)bannerIsVisible;
- (void)tearDownPersistentViews;
- (void)commonFinishInitialization;
- (void)unbindViewSettings;
- (void)bindViewSettings;
- (void)configureBrowserView;
- (void)tearDownAccessoryViews;
- (void)tearDownViewController:(id)arg1;
- (void)reloadGroupView;
@property(retain, nonatomic) NSString *groupBy;
- (void)resetHistory;
- (void)targetToSearch;
- (unsigned int)defaultSearchScope;
- (void)updateSearchTarget:(struct TFENode)arg1;
- (void)searchFieldCancel;
- (BOOL)showScopeBar;
- (void)updateForSearchSliceChange;
- (void)configureSearchBannerSettingTarget:(BOOL)arg1;
- (void)configureSuggestions;
- (void)addRecentSearch:(id)arg1;
- (BOOL)usesSuggestions;
- (id)searchSliceController;
- (BOOL)resultCountIsPartial;
- (struct TMDQueryAliasNode *)savedSearchTarget;
- (struct TMDQueryAliasNode *)searchTarget;
- (void)hideOverlayScrollers;
- (void)makeKeyAndOrderFront;
- (void)drawCompletelyIntoBackBuffer;
- (void)setSidebarWidth:(double)arg1 snapToOptimalWidth:(BOOL)arg2;
- (double)sidebarWidth;

@end

@interface TDiscardSmartFolderSheetClient : NSObject <TStdAlertSheetClientProtocol>
{
    TBrowserWindowController *_controller;
}

+ (id)clientWithWindowController:(id)arg1;
- (void)stdAlertSheetOtherButtonPressed;
- (void)stdAlertSheetCancelButtonPressed;
- (void)stdAlertSheetOKButtonPressed;

@end

@interface TContextMenuItem : NSMenuItem
{
    BOOL _showMeAnyway;
}

@property(nonatomic) BOOL showMeAnyway; // @synthesize showMeAnyway=_showMeAnyway;

@end

@interface TShareKitMenuController : NSObject <NSMenuDelegate>
{
    id <BrowserController> _browserController;
    struct TFENodeVector _nodes;
}

+ (id)shareKitMenuControllerForBrowserController:(id)arg1 andNodes:(const struct TFENodeVector *)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface TContextMenu : NSMenu
{
}

+ (BOOL)handleEventAsRightClick:(id)arg1 targetObject:(id)arg2;
+ (void)handleContextMenuCommon:(unsigned int)arg1 nodes:(const struct TFENodeVector *)arg2 event:(id)arg3 view:(id)arg4 browserController:(id)arg5 addPlugIns:(BOOL)arg6;
+ (void)buildContextMenu:(id)arg1 forContext:(unsigned int)arg2 browserController:(id)arg3 maxItems:(unsigned long long)arg4 addServices:(BOOL)arg5;
+ (void)addViewSpecificStuffToMenu:(id)arg1 browserViewController:(id)arg2 context:(unsigned int)arg3;
+ (void)addSharingServicesToMenu:(id)arg1 forCommand:(SEL)arg2 browserController:(id)arg3 andNodes:(const struct TFENodeVector *)arg4;
+ (void)populateActionMenu:(id)arg1 browserController:(id)arg2;
+ (void)contextMenuClickedOnContainer:(const struct TFENode *)arg1 event:(id)arg2 view:(id)arg3 browserController:(id)arg4;
+ (void)contextMenuClickedOnNodes:(const struct TFENodeVector *)arg1 event:(id)arg2 view:(id)arg3 browserController:(id)arg4;
+ (BOOL)allowContextualMenuForEvent:(id)arg1;
+ (void)clearContextMenuState;
+ (id)contextMenuWithDelegate:(id)arg1;
- (void)menuDidCompleteInteraction:(id)arg1;
- (void)configureForPathbarWithNode:(const struct TFENode *)arg1 browserController:(id)arg2;
- (void)configureForSidebarWithNode:(const struct TFENode *)arg1 browserController:(id)arg2 constrained:(BOOL)arg3 data:(id)arg4;
- (void)configureWithNodes:(const struct TFENodeVector *)arg1 browserController:(id)arg2 container:(BOOL)arg3;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;
- (id)initWithObject:(id)arg1 nodes:(const struct TFENodeVector *)arg2 event:(id)arg3;
- (id)initWithTitle:(id)arg1;

@end

@interface TOpenWithMenuController : NSObject <NSMenuDelegate>
{
}

+ (id)openWithMenuController;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface TBackupBrowserWindowController : TBrowserWindowController <BackupBrowserController>
{
    struct TRef<TTimeMachineTarget *, TRetainReleasePolicy<TTimeMachineTarget *>> _snapshot;
    struct TFENodeVector _backupLastUserSelection;
    BOOL _backupResettingSelection;
    BOOL _backupTargetChangedViaCallback;
    struct CGPoint _backupLastScrollPosition;
    NSMutableArray *_watchedViews;
}

@property(retain, nonatomic) NSMutableArray *watchedViews; // @synthesize watchedViews=_watchedViews;
@property(nonatomic) struct TFENodeVector backupLastUserSelection; // @synthesize backupLastUserSelection=_backupLastUserSelection;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)nodeViewSettings;
- (void)stopWatchingScrollChanges;
- (void)startWatchingScrollChanges;
- (void)addViewToWatchedViews:(id)arg1;
- (void)scrollContentChanged:(id)arg1;
- (void)delayedScrollContentChanged:(id)arg1;
- (void)cancelDelayedScrollContentChange;
- (void)viewContentChanged;
- (void)updateSearchTarget:(struct TFENode)arg1;
- (void)setTargetPath:(const struct TFENodeVector *)arg1 withViewStyle:(id)arg2 rebuildView:(BOOL)arg3 retarget:(BOOL)arg4;
- (void)setTargetPath:(const struct TFENodeVector *)arg1 withViewStyle:(id)arg2 rebuildView:(BOOL)arg3;
- (void)setTargetPath:(const struct TFENodeVector *)arg1 withViewStyle:(id)arg2;
- (void)setColumnViewTargetPathMatchingBackupPath:(const struct TFENodeVector *)arg1 rebuildView:(BOOL)arg2;
- (struct TFENodeVector)getPathSegmentMatchingPathNode:(const struct TFENode *)arg1 rootedAt:(const struct TFENode *)arg2 usingPathNode:(const struct TFENode *)arg3;
- (struct TFENodeVector)getCommonPathTail:(const struct TFENode *)arg1;
- (BOOL)isNodeSnapshotRoot:(const struct TFENode *)arg1;
- (void)browserSelectionChanged;
- (struct TFENodeVector)nodesToRestore;
- (void)backupTargetDeactivate:(const struct TFENode *)arg1;
- (void)backupTargetActivate:(const struct TFENode *)arg1;
- (struct CGPoint)lastScrollPosition;
- (void)mapBackupSelectionToContainer:(const struct TFENode *)arg1 outSelection:(struct TFENodeVector *)arg2;
- (void)setSnapshotForNode:(const struct TFENode *)arg1;
- (void)backupDismissed;
- (void)cancel:(id)arg1;
- (void)refreshBackupSnapshots;
- (void)refreshSnapshots;
- (BOOL)isBackupDeleteAllowed;
- (BOOL)isValidTargetForSnapshot:(const struct TFENode *)arg1;
- (struct TString)pathForOriginalAbsolutePath:(const struct TString *)arg1;
- (struct TFENode)targetForOriginalNode:(const struct TFENode *)arg1;
- (void)openLocation:(const struct TFENode *)arg1 origin:(struct ISpawnOrigin *)arg2;
- (struct TFENode)originalOrLatestNodeForNode:(const struct TFENode *)arg1;
- (struct TFENode)originalNodeForNode:(const struct TFENode *)arg1;
- (const struct TFENode *)snapshotNode;
- (BOOL)isSnapshotImageBrowser;
- (BOOL)isBackupBrowser;
- (void)setSnapshot:(const struct TTimeMachineTarget *)arg1;
- (const struct TTimeMachineTarget *)snapshot;
- (void)windowDidEndLiveResize:(id)arg1;
- (BOOL)window:(id)arg1 shouldDragDocumentWithEvent:(id)arg2 from:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (struct TFENode)fetchWindowProxyNode;
- (void)cmdToggleToolbar:(id)arg1;
- (void)pathPopupSelectedWithNode:(const struct TFENode *)arg1;
- (void)switchToViewStyle:(id)arg1;
- (BOOL)shouldStaggerWindowPositions;
- (BOOL)windowShouldClose:(id)arg1;
- (void)dealloc;
- (void)configureWindowCloseButton;
- (id)initWithState:(id)arg1 targetPath:(const struct TFENodeVector *)arg2 timeMachineTarget:(const struct TTimeMachineTarget *)arg3;

@end

@interface TSpringController : NSObject
{
    id <TSpringDelegate> _delegate;
    long long _stage;
    struct TFENode _target;
    struct CGRect _anchorRect;
    NSTimer *_timer;
    short _dragModifiers;
    struct CGPoint _dragGlobalMouseLoc;
    unsigned int _dragAttributes;
}

+ (double)windowSpringDelay;
+ (BOOL)isWindowSpringingEnabled;
+ (double)springDelay;
+ (BOOL)isSpringingEnabled;
+ (void)cancelSpringing;
+ (BOOL)springImmediately;
@property(nonatomic) struct CGPoint globalMouse; // @synthesize globalMouse=_dragGlobalMouseLoc;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)springNow;
- (void)advanceSpringStage:(id)arg1;
- (BOOL)commandKeyDown;
- (BOOL)springBlinkOff;
- (void)clearSpringTarget;
- (void)setSpringTarget:(const struct TFENode *)arg1;
- (void)startSpringTimer;
- (void)stopSpringTimer;
- (void)dealloc;
- (id)initWithSpringDelegate:(id)arg1;

@end

@interface TBackupSnapshotWindowController : TBackupBrowserWindowController
{
}

- (const struct TFENode *)snapshotNode;
- (id)nodeViewSettings;
- (void)refreshSnapshots;
- (void)drawCompletelyIntoBackBuffer;
- (void)setTargetPath:(const struct TFENodeVector *)arg1 withViewStyle:(id)arg2 rebuildView:(BOOL)arg3;
- (void)setTargetPath:(const struct TFENodeVector *)arg1 withViewStyle:(id)arg2;
- (void)refreshBackupSnapshots;
- (BOOL)isSnapshotImageBrowser;

@end

@interface TLabelView : NSLabelView
{
}

+ (struct CGSize)sizeWithImagePosition:(unsigned long long)arg1;

@end

@interface TLabelViewForMenu : TLabelView
{
}

+ (id)titleFieldFromMenuItem:(id)arg1;
+ (id)labelViewFromMenuItem:(id)arg1;
+ (id)labelViewForMenu:(id)arg1;
- (void)gumdropValueChangedInMenu:(id)arg1;

@end

@interface IPropertyValueController : TViewController
{
    NSObject *_value;
    TLayoutBinder *_layoutBinder;
    double _viewHeight;
    IPropertyValueExtractor *_valueExtractor;
    BOOL _shouldBeVisible;
    BOOL _shouldBeEnabled;
}

+ (id)propertyValueControllerWithValueExtractor:(id)arg1;
+ (id)propertyValueController;
@property(nonatomic) BOOL shouldBeEnabled; // @synthesize shouldBeEnabled=_shouldBeEnabled;
@property(nonatomic) BOOL shouldBeVisible; // @synthesize shouldBeVisible=_shouldBeVisible;
@property(retain, nonatomic) IPropertyValueExtractor *valueExtractor; // @synthesize valueExtractor=_valueExtractor;
@property(readonly, nonatomic) TLayoutBinder *layoutBinder; // @synthesize layoutBinder=_layoutBinder;
@property(retain, nonatomic) NSObject *value; // @synthesize value=_value;
- (void)handleNodeMDAttributesChanged:(const struct TFENode *)arg1 attributes:(id)arg2 isDisplayAttributes:(BOOL)arg3;
- (void)handleNodesGoingAway:(const struct TFENodeVector *)arg1;
- (void)handleBulkNodesDeleted:(const map_6f5aee00 *)arg1 observedNodes:(const struct TFENodeVector *)arg2;
- (void)handleBulkNodesChanged:(const map_9a8e9377 *)arg1 observedNodes:(const struct TFENodeVector *)arg2;
- (BOOL)adjustSize:(BOOL)arg1;
- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;
- (void)flush;
- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (void)updateWithNodes:(const struct TFENodeVector *)arg1;
- (void)setView:(id)arg1;
- (id)defaultValue;
- (void)finalize;
- (void)dealloc;
- (void)initCommon;
- (id)initWithValueExtractor:(id)arg1;

@end

@interface IPropertyValueApplicatorController : IPropertyValueController
{
    IPropertyValueApplicator *_valueApplicator;
    struct TFENodeVector _nodes;
}

@property(retain) IPropertyValueApplicator *valueApplicator; // @synthesize valueApplicator=_valueApplicator;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;
- (const struct TFENodeVector *)nodes;
- (int)applyValueToNodes:(id)arg1;
- (void)updateWithNodes:(const struct TFENodeVector *)arg1;
- (void)dealloc;

@end

@interface IPropertyScrollViewController : IPropertyValueApplicatorController
{
    NSView *_subview;
}

@property(retain, nonatomic) NSView *subview; // @synthesize subview=_subview;
- (void)dealloc;

@end

@interface TPropertyTextFieldController : IPropertyValueController
{
}

- (BOOL)adjustSize:(BOOL)arg1;

@end

@interface TPropertyEditTextFieldController : IPropertyValueApplicatorController
{
    unsigned long long _maxChars;
}

@property(nonatomic) unsigned long long maxChars; // @synthesize maxChars=_maxChars;
- (void)textDidEndEditing:(id)arg1;
- (void)setView:(id)arg1;
- (void)initCommon;

@end

@interface TPropertyTextViewController : IPropertyScrollViewController <NSTextViewDelegate>
{
    unsigned long long _maxChars;
}

@property(nonatomic) unsigned long long maxChars; // @synthesize maxChars=_maxChars;
- (void)textDidEndEditing:(id)arg1;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)setSubview:(id)arg1;
- (void)dealloc;
- (void)initCommon;

@end

@interface TPropertyImageViewController : IPropertyValueController
{
}

@end

@interface TPropertyLabelViewController : IPropertyValueApplicatorController
{
}

- (void)labelClicked:(id)arg1;

@end

@interface TPropertyButtonController : IPropertyValueApplicatorController
{
}

- (void)buttonPressed:(id)arg1;

@end

@interface TPropertyPopupButtonController : TPropertyButtonController <NSMenuDelegate>
{
}

- (void)populate:(const struct TFENodeVector *)arg1;
- (void)updateWithNodes:(const struct TFENodeVector *)arg1;
- (void)dealloc;

@end

@interface TPropertyTableViewController : IPropertyScrollViewController
{
    TTableViewController *_tableViewController;
}

@property(retain, nonatomic) TTableViewController *tableViewController; // @synthesize tableViewController=_tableViewController;
- (void)populate;
- (void)setSubview:(id)arg1;
- (void)setValue:(id)arg1;
- (void)dealloc;
- (id)initWithTableViewController:(id)arg1;

@end

@interface TPropertyNameController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyKindController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyKindWithoutArchitectureController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface IPropertySizeController : TPropertyTextFieldController
{
}

- (void)handleBulkNodesChanged:(const map_9a8e9377 *)arg1 observedNodes:(const struct TFENodeVector *)arg2;

@end

@interface TPropertyPhysicalSizeController : IPropertySizeController
{
}

- (void)initCommon;

@end

@interface TPropertyLogicalSizeController : IPropertySizeController
{
}

- (void)initCommon;

@end

@interface TPropertyInfoWindowSizeController : IPropertySizeController
{
    NSColor *_textColor;
}

@property(retain) NSColor *textColor; // @synthesize textColor=_textColor;
- (void)updateWithNodes:(const struct TFENodeVector *)arg1;
- (void)setView:(id)arg1;
- (void)initCommon;

@end

@interface TPropertyWherePathController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyServerURLController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyDiskImagePathController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyCreationDateController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyModificationDateController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyLastOpenedDateController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyShortVersionController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyLongVersionController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertySavedSearchQueryController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyFormatController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyCapacityController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyFreeSpaceController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyUsedController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyProcessorController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyMemoryController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyStartupDiskController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertySeparatorController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyFontNameController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyCopyrightController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyAliasOriginalPathController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyLabelController : TPropertyLabelViewController
{
}

- (void)labelClicked:(id)arg1;
- (void)setValue:(id)arg1;
- (void)setView:(id)arg1;
- (void)initCommon;

@end

@interface TSelectNewOriginalForAliasController : TPropertyButtonController
{
}

- (int)applyValueToNodes:(id)arg1;
- (void)initCommon;

@end

@interface THFSTextEncodingController : TPropertyPopupButtonController
{
}

- (void)populate:(const struct TFENodeVector *)arg1;
- (void)initCommon;

@end

@interface TPropertyOpenIn32BitController : TPropertyButtonController
{
}

- (void)initCommon;

@end

@interface TPropertyOpenInLowRezController : TPropertyButtonController
{
}

- (void)preferencesChanged:(id)arg1;
- (void)dealloc;
- (void)initCommon;

@end

@interface TPropertySharedFolderController : TPropertyButtonController <TStdAlertSheetClientProtocol>
{
}

- (void)stdAlertSheetOtherButtonPressed;
- (void)stdAlertSheetCancelButtonPressed;
- (void)stdAlertSheetOKButtonPressed;
- (int)applyValueToNodes:(id)arg1;
- (void)initCommon;

@end

@interface TPropertyStationaryPadController : TPropertyButtonController
{
}

- (void)initCommon;

@end

@interface TPropertyLockedController : TPropertyButtonController
{
}

- (void)initCommon;

@end

@interface TPropertyIconController : TPropertyImageViewController
{
    struct TFENodeVector _nodes;
    BOOL _nodesHaveSameIcon;
    BOOL _nodesHaveCustomIcon;
    BOOL _nodesCanChangeIcon;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)aboutToTearDown;
- (BOOL)progressState:(int *)arg1 amount:(unsigned int *)arg2 cancellable:(char *)arg3;
- (void)concludeDragOperation:(id)arg1;
- (void)paste:(id)arg1;
- (BOOL)validatePaste:(id)arg1;
- (void)delete:(id)arg1;
- (BOOL)validateDelete:(id)arg1;
- (void)cut:(id)arg1;
- (BOOL)validateCut:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)validateCopy:(id)arg1;
- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;
- (void)updateWithNodes:(const struct TFENodeVector *)arg1;
- (void)initCommon;

@end

@interface TPropertyCommentsController : TPropertyTextViewController
{
}

- (void)resetFirstResponderToTextView;
- (void)textDidEndEditing:(id)arg1;
@property(readonly) NSFont *commentsFont; // @dynamic commentsFont;
- (void)initCommon;

@end

@interface TSpotlightMetaDataController : IPropertyValueController
{
}

- (void)handleNodeMDAttributesChanged:(const struct TFENode *)arg1 attributes:(id)arg2 isDisplayAttributes:(BOOL)arg3;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (BOOL)adjustSize:(BOOL)arg1;
- (void)setView:(id)arg1;
- (void)dealloc;

@end

@interface TPropertyRawNameController : TPropertyEditTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyExtensionHiddenController : TPropertyButtonController
{
}

- (void)initCommon;

@end

@interface TPropertyDeviceController : TPropertyTextFieldController
{
}

- (void)flush;
- (void)initCommon;

@end

@interface TPropertyMediaCapacityController : TPropertyTextFieldController
{
}

- (void)flush;
- (void)initCommon;

@end

@interface TPropertyContentSizeController : TPropertyTextFieldController
{
    NSColor *_textColor;
}

@property(retain) NSColor *textColor; // @synthesize textColor=_textColor;
- (void)flush;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (void)dealloc;
- (void)initCommon;

@end

@interface TPropertyCalculateContentSizeButtonController : TPropertyButtonController <TPBFSizingThreadCallbackProtocol>
{
    TPropertyContentSizeController *_contentSizeController;
    struct TPBFSizingThread *_pbfSizingThread;
    struct TPBFSizingThreadCallbackCocoaBridge *_pbfSizingThreadBridge;
}

- (void)pbfSizingCompletionCallback:(unsigned long long)arg1;
- (void)buttonPressed:(id)arg1;
- (void)flush;
- (void)dealloc;
- (void)initCommon;

@end

@interface TBannerFactory : NSObject
{
}

+ (int)bannerTypeForContainerNode:(const struct TFENode *)arg1 selectedNode:(const struct TFENode *)arg2 withParentController:(id)arg3;
+ (int)bannerTypeForBanner:(id)arg1;
+ (id)bannerViewControllerForType:(int)arg1 withParentController:(id)arg2;

@end

@interface TInfoWindowBurningViewController : TInfoWindowViewController
{
    TPropertyDeviceController *_deviceController;
    TPropertyMediaCapacityController *_mediaCapacityController;
    TPropertyContentSizeController *_contentSizeController;
    TPropertyCalculateContentSizeButtonController *_calculateButtonController;
}

+ (id)controller;
- (unsigned int)scriptingID;
- (void)loadValueControllers;
- (id)expandedPrefKey;
- (double)bottomMargin;

@end

@interface IInfoWindowControllerBase : TScriptableWindowController <NSWindowDelegate, TCoalescingNodeObserverProtocol>
{
    struct TFENodeVector _infoNodes;
    TSliceContainerView *_sliceContainer;
    TLayoutBinder *_sliceContainerLayoutBinder;
    NSArray *_infoViewControllers;
    struct TCoalescingNodeObserverCocoaBridge *_nodeObserver;
    unsigned int _infoNodesNotificationOptions;
    NSEnumerator *_expansionEnumerator;
    BOOL _allExpanded;
}

+ (id)sliceClassNamesForInfoNodes:(const struct TFENodeVector *)arg1;
+ (double)preferredWindowContentWidth;
+ (struct CGSize)defaultWindowContentSize;
+ (unsigned long long)styleMask;
+ (id)controller;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)setAllSlicesExpanded:(BOOL)arg1;
- (void)viewControllerDidFinishAnimating:(id)arg1;
- (id)windowWillReturnUndoManager:(id)arg1;
- (void)nodeMDAttributeChanged:(const struct TFENode *)arg1 attributes:(id)arg2 isDisplayAttributes:(BOOL)arg3;
- (void)aliasesTargetChanged:(const struct TFENodeVector *)arg1;
- (void)nodesGoingAway:(const struct TFENodeVector *)arg1;
- (void)bulkNodesDeleted:(const map_6f5aee00 *)arg1;
- (void)bulkNodesChanged:(const map_9a8e9377 *)arg1;
- (void)positionWindow;
- (void)layoutSlices;
- (void)configureSlicesForInfoNodes:(const struct TFENodeVector *)arg1;
- (unsigned int)notificationOptionsForInfoNodes:(const struct TFENodeVector *)arg1;
- (void)setInfoNodes:(const struct TFENodeVector *)arg1;
- (const struct TFENodeVector *)infoNodes;
- (id)infoViewControllers;
- (void)setContentView;
- (id)windowIcon;
- (id)windowTitle;
- (struct TFENode)fetchWindowProxyNode;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)initCommon;
- (id)infoWindow;

@end

@interface TInfoWindowController : IInfoWindowControllerBase
{
    struct ISpawnOrigin *_spawnOrigin;
    NSButton *_closeButton;
}

+ (unsigned long long)calcSummaryInfoWindowNodeLimit;
+ (void)removeInfoWindowController:(id)arg1;
+ (void)addInfoWindowController:(id)arg1;
+ (id)infoWindowControllers;
+ (unsigned long long)styleMask;
+ (id)infoWindowControllerForInfoNodes:(const struct TFENodeVector *)arg1;
+ (id)infoWindowControllerForNodes:(const struct TFENodeVector *)arg1;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (id)showInfoWindowForInfoNodes:(const struct TFENodeVector *)arg1 browserWindowController:(id)arg2;
+ (void)showInfoWindowForNodes:(const struct TFENodeVector *)arg1 alwaysShowSummary:(BOOL)arg2 originWindowController:(id)arg3;
- (BOOL)exposeOneSliceIfAvailable:(unsigned int)arg1;
- (unsigned int)topmostExpandedSliceScriptingID;
- (unsigned int)finderScriptingModelKind;
- (void)setSpawnOrigin:(const struct ISpawnOrigin *)arg1;
- (void)bulkNodesDeleted:(const map_6f5aee00 *)arg1;
- (void)positionWindow;
- (void)closeWindow;
- (void)close;
- (void)closeButtonClicked;
- (void)dealloc;
- (void)windowWillClose:(id)arg1;
- (void)initCommon;
- (id)infoWindow;

@end

@interface TInspectorWindowController : IInfoWindowControllerBase
{
}

+ (unsigned long long)styleMask;
+ (id)inspectorWindowController;
+ (void)updateWithNodes:(const struct TFENodeVector *)arg1;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (void)toggleWindowVisibility:(const struct TFENodeVector *)arg1;
- (void)positionWindow;
- (void)windowWillClose:(id)arg1;
- (void)initCommon;
- (id)infoWindow;

@end

@interface TSliceView : TView
{
    NSBox *_separator;
}

@property(readonly) NSBox *separator; // @synthesize separator=_separator;
- (void)awakeFromNib;
- (void)initCommon;
- (void)_finishedMakingConnections;

@end

@interface TSliceContainerView : TView
{
}

- (void)initCommon;

@end

@interface TInfoWindowUndoManager : NSUndoManager
{
    BOOL _finderCanUndo;
    BOOL _finderCanRedo;
}

+ (id)infoWindowUndoManager;
- (void)redo;
- (BOOL)canRedo;
- (void)undo;
- (BOOL)canUndo;

@end

@interface TInfoWindowGeneralViewController : TInfoWindowViewController
{
    TPropertyKindController *_kindController;
    TPropertyInfoWindowSizeController *_sizeController;
    TPropertyWherePathController *_wherePathController;
    TPropertyServerURLController *_serverURLController;
    TPropertyDiskImagePathController *_diskImagePathController;
    TPropertyCreationDateController *_createDateController;
    TPropertyModificationDateController *_modDateController;
    TPropertyLongVersionController *_versionController;
    TPropertySavedSearchQueryController *_queryController;
    TPropertyFormatController *_formatController;
    TPropertyCapacityController *_capacityController;
    TPropertyFreeSpaceController *_freeSpaceController;
    TPropertyUsedController *_usedController;
    TPropertyProcessorController *_processorController;
    TPropertyMemoryController *_memoryController;
    TPropertyStartupDiskController *_startupDiskController;
    TPropertySeparatorController *_separatorController;
    TPropertyFontNameController *_fontNameController;
    TPropertyCopyrightController *_copyrightController;
    TPropertyAliasOriginalPathController *_aliasOriginalPathController;
    TPropertyLabelController *_labelController;
    TSelectNewOriginalForAliasController *_newOriginalForAliasController;
    THFSTextEncodingController *_hfsTextEncodingController;
    TPropertyOpenIn32BitController *_openIn32BitController;
    TPropertyOpenInLowRezController *_openInLowRezController;
    TPropertySharedFolderController *_sharedFolderController;
    TPropertyStationaryPadController *_stationaryPadController;
    TPropertyLockedController *_lockedController;
    struct TNSRef<NSArray *> _titleFlds;
    struct TNSRef<NSArray *> _checkboxes;
}

+ (id)controller;
- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned int)scriptingID;
- (void)adjustTitleWidths;
- (void)bulkNodesChanged:(const map_9a8e9377 *)arg1;
- (unsigned int)notificationOptionsForNodes:(const struct TFENodeVector *)arg1;
- (void)refresh;
- (void)loadValueControllers;
- (id)expandedPrefKey;
- (BOOL)expandedDefaultValue;
- (void)aboutToTearDown;
- (void)viewLoaded;

@end

@interface TInfoHeaderSizeController : TPropertyLogicalSizeController
{
    struct CGRect _textFieldFrame;
}

- (id).cxx_construct;
- (BOOL)adjustSize:(BOOL)arg1;
- (void)setView:(id)arg1;
- (void)textFieldFrameChanged:(id)arg1;

@end

@interface TInfoWindowSimpleHeaderViewController : TInfoWindowViewController
{
    TPropertyIconController *_iconController;
    TPropertyNameController *_nameController;
    TInfoHeaderSizeController *_sizeController;
    TPropertyModificationDateController *_modDateController;
}

+ (id)controller;
- (unsigned int)scriptingID;
- (unsigned int)notificationOptionsForNodes:(const struct TFENodeVector *)arg1;
- (void)setSubviewsHidden:(BOOL)arg1;
- (void)loadValueControllers;
- (void)viewLoaded;
- (BOOL)expandedDefaultValue;
- (BOOL)expanded;
- (double)disclosedHeight;
- (void)aboutToTearDown;

@end

@interface TInfoWindowHeaderViewController : TInfoWindowSimpleHeaderViewController
{
    TPropertyCommentsController *_commentsController;
    BOOL _overrideExpandedState;
}

+ (id)controller;
- (unsigned int)scriptingID;
- (void)setSubviewsHidden:(BOOL)arg1;
- (void)nodeMDAttributeChanged:(const struct TFENode *)arg1 attributes:(id)arg2 isDisplayAttributes:(BOOL)arg3;
- (void)nodesGoingAway:(const struct TFENodeVector *)arg1;
- (void)bulkNodesDeleted:(const map_6f5aee00 *)arg1;
- (void)bulkNodesChanged:(const map_9a8e9377 *)arg1;
- (void)setNodes:(const struct TFENodeVector *)arg1;
- (void)loadValueControllers;
- (void)viewLoaded;
- (BOOL)expanded;
- (id)expandedPrefKey;
- (double)bottomMargin;
- (double)disclosedHeight;

@end

@interface TCommentsDisclosureTriangleTitleField : TTitleField
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface TInfoWindowViewWithBackground : TView
{
    NSButton *_disclosureTriangle;
    TTitleField *_titleFld;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)_windowChangedKeyState;
- (void)awakeFromNib;

@end

@interface TInfoWindowSpotlightMetaDataGroupView : TSpotlightMetaDataGroupView
{
    TInfoWindowSpotlightMetaDataController *_controller;
    TTextField *_noDataTextField;
}

- (void)clear;
- (void)reset;
- (void)populate;
- (void)aboutToTearDown;
- (void)awakeFromNib;

@end

@interface TInfoWindowSpotlightMetaDataController : TSpotlightMetaDataController
{
    BOOL _isFetching;
}

@property BOOL isFetching; // @synthesize isFetching=_isFetching;
- (void)flush;
- (void)handleNodeMDAttributesChanged:(const struct TFENode *)arg1 attributes:(id)arg2 isDisplayAttributes:(BOOL)arg3;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (void)initCommon;

@end

@interface TInfoWindowMoreInfoViewController : TInfoWindowViewController
{
    TInfoWindowSpotlightMetaDataController *_spotlightMetaDataController;
}

+ (id)controller;
- (unsigned int)scriptingID;
- (void)loadValueControllers;
- (id)expandedPrefKey;

@end

@interface TInfoWindowNameViewController : TInfoWindowViewController
{
    TPropertyRawNameController *_nameController;
    TPropertyExtensionHiddenController *_hideExtensionController;
}

+ (id)controller;
- (unsigned int)scriptingID;
- (void)loadValueControllers;
- (id)expandedPrefKey;

@end

@interface TCurrentApplicationExtractor : IPropertyFINodeExtractor
{
    struct TLaunchListCache *_launchListCache;
}

- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (void)setLaunchListCache:(struct TLaunchListCache *)arg1;

@end

@interface TPropertyOpenWithApplicator : IPropertyFINodeApplicator
{
    struct TLaunchListCache *_launchListCache;
}

- (int)applyApp:(const struct TFENode *)arg1 toAllNodesOfSameType:(const struct TFENodeVector *)arg2 forceChange:(BOOL)arg3;
- (int)applyApp:(const struct TFENode *)arg1 toNodes:(const struct TFENodeVector *)arg2 strong:(BOOL)arg3;
- (int)applyValue:(id)arg1 toNodes:(struct TFENodeVector *)arg2;
- (BOOL)canChangeHandler:(const struct TFENodeVector *)arg1;
- (void)setLaunchListCache:(struct TLaunchListCache *)arg1;

@end

@interface TChangeAllButtonApplicator : TPropertyOpenWithApplicator
{
}

- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;
- (int)applyValue:(id)arg1 toNodes:(struct TFENodeVector *)arg2;

@end

@interface TOpenWithPopupController : TPropertyPopupButtonController <TAsyncChooseAppBinderProtocol>
{
    struct TLaunchListCache *_launchListCache;
}

- (void)flush;
- (void)setLaunchListCache:(struct TLaunchListCache *)arg1;
- (void)invoke:(const struct TFENodeVector *)arg1 chosenApp:(const struct TFENode *)arg2 alwaysOpen:(BOOL)arg3;
- (void)cmdOpenWithOther:(id)arg1;
- (void)cmdOpenWithFirenze:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)populate:(const struct TFENodeVector *)arg1;
- (void)openWithBindingChanged:(id)arg1;
- (void)dealloc;
- (void)initCommon;

@end

@interface TOpenWithInstructionsTextExtractor : IPropertyTextExtractor
{
}

- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TOpenWithInstructionsTextController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TChangeAllButtonController : TPropertyButtonController
{
    struct TLaunchListCache *_launchListCache;
}

- (void)openWithBindingChanged:(id)arg1;
- (void)setLaunchListCache:(struct TLaunchListCache *)arg1;
- (void)flush;
- (void)dealloc;
- (void)initCommon;

@end

@interface TInfoWindowOpenWithViewController : TInfoWindowViewController
{
    TOpenWithPopupController *_openWithPopupController;
    TOpenWithInstructionsTextController *_instructionsTextController;
    TChangeAllButtonController *_changeAllButtonController;
    struct TLaunchListCache _launchListCache;
}

+ (id)controller;
- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned int)scriptingID;
- (void)setNodes:(const struct TFENodeVector *)arg1;
- (void)loadValueControllers;
- (double)bottomMargin;
- (id)expandedPrefKey;

@end

@interface TNodePermissionsInfo : NSObject <NSCopying>
{
    struct TFENode _node;
    struct FSPermissionInfo _permissionsInfo;
    struct TRef<__FSFileSecurity *, TRetainReleasePolicy<FSFileSecurityRef>> _fileSecurityRef;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _permissionsArray;
}

+ (BOOL)findFirstUserGroupInPermissionsArray:(struct __CFArray *)arg1 node:(const struct TFENode *)arg2 findUser:(BOOL)arg3 foundidentity:(struct TIdentity *)arg4;
+ (BOOL)isInPermissionsArray:(struct __CFArray *)arg1 node:(const struct TFENode *)arg2 uuid:(struct __CFUUID *)arg3 aci:(const struct TAccessControlInfo *)arg4;
+ (BOOL)removeFromPermissionsArray:(struct __CFArray *)arg1 node:(const struct TFENode *)arg2 uuid:(struct __CFUUID *)arg3 aci:(const struct TAccessControlInfo *)arg4;
+ (BOOL)addToPermissionsArray:(struct __CFArray *)arg1 node:(const struct TFENode *)arg2 uuid:(struct __CFUUID *)arg3 isPOSIXOwner:(BOOL)arg4 isPOSIXGroup:(BOOL)arg5 aci:(const struct TAccessControlInfo *)arg6;
+ (BOOL)updatePermissionsArray:(struct __CFArray *)arg1 node:(const struct TFENode *)arg2 uuid:(struct __CFUUID *)arg3 from:(const struct TAccessControlInfo *)arg4 to:(const struct TAccessControlInfo *)arg5;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct __CFArray *)mutableCopyPermissionsArray;
- (struct __CFArray *)copyPermissionsArray;
- (struct __CFArray *)permissionsArray;
- (struct __FSFileSecurity *)fileSecurityRef;
- (unsigned int)userAccess;
- (unsigned int)groupID;
- (unsigned int)userID;
- (const struct FSPermissionInfo *)permissionsInfo;
- (const struct TFENode *)node;
- (int)updateFromPermissionsArray:(struct __CFArray *)arg1 newOwner:(unsigned int)arg2 newGroup:(unsigned int)arg3 vRefNum:(short)arg4 isContainer:(BOOL)arg5;
- (BOOL)removeIdentity:(const struct TIdentity *)arg1 aci:(const struct TAccessControlInfo *)arg2;
- (BOOL)addIdentity:(const struct TIdentity *)arg1;
- (BOOL)updateIdentity:(const struct TIdentity *)arg1 from:(const struct TAccessControlInfo *)arg2 to:(const struct TAccessControlInfo *)arg3;
- (BOOL)changeGroupTo:(const struct TIdentity *)arg1;
- (BOOL)changeOwnerTo:(const struct TIdentity *)arg1;
- (BOOL)changeOwnerOrGroupTo:(const struct TIdentity *)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithNode:(const struct TFENode *)arg1 permissionsInfo:(const struct FSPermissionInfo *)arg2 permissionsArray:(struct __CFArray *)arg3;
- (id)init;

@end

@interface TPrivsSummaryTextExtractor : IPropertyTextExtractor
{
}

- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPrivsSummaryTextController : TPropertyTextFieldController
{
}

- (void)initCommon;

@end

@interface TPropertyButtonControllerWithTableViewController : TPropertyButtonController
{
    TPrivsTableViewMainController *_tableViewController;
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (void)dealloc;
- (void)viewLoaded;

@end

@interface TPrivsPlusButtonController : TPropertyButtonControllerWithTableViewController
{
}

- (int)applyValueToNodes:(id)arg1;
- (void)initCommon;

@end

@interface TPrivsMinusButtonController : TPropertyButtonControllerWithTableViewController
{
}

- (int)applyValueToNodes:(id)arg1;
- (void)initCommon;

@end

@interface TPrivsActionPopUpButtonController : TPropertyPopupButtonController
{
    TPrivsTableViewMainController *_tableViewController;
    struct TString _baseMakeUserOwnerTitle;
    NSString *_makeUserOwnerTitle;
    BOOL _isAuthenticated;
    BOOL _volumeSupportsACLs;
    BOOL _makeUserOwnerShouldBeVisible;
    BOOL _makeUserOwnerShouldBeEnabled;
    BOOL _applyToEnclosedShouldBeVisible;
    BOOL _applyToEnclosedShouldBeEnabled;
    BOOL _revertShouldBeEnabled;
}

@property(nonatomic) BOOL revertShouldBeEnabled; // @synthesize revertShouldBeEnabled=_revertShouldBeEnabled;
@property(nonatomic) BOOL applyToEnclosedShouldBeEnabled; // @synthesize applyToEnclosedShouldBeEnabled=_applyToEnclosedShouldBeEnabled;
@property(nonatomic) BOOL applyToEnclosedShouldBeVisible; // @synthesize applyToEnclosedShouldBeVisible=_applyToEnclosedShouldBeVisible;
@property(nonatomic) BOOL makeUserOwnerShouldBeEnabled; // @synthesize makeUserOwnerShouldBeEnabled=_makeUserOwnerShouldBeEnabled;
@property(nonatomic) BOOL makeUserOwnerShouldBeVisible; // @synthesize makeUserOwnerShouldBeVisible=_makeUserOwnerShouldBeVisible;
@property(nonatomic) BOOL volumeSupportsACLs; // @synthesize volumeSupportsACLs=_volumeSupportsACLs;
@property(nonatomic) BOOL isAuthenticated; // @synthesize isAuthenticated=_isAuthenticated;
@property(retain) NSString *makeUserOwnerTitle; // @synthesize makeUserOwnerTitle=_makeUserOwnerTitle;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)menuNeedsUpdate:(id)arg1;
- (void)populate:(const struct TFENodeVector *)arg1;
- (void)buttonPressed:(id)arg1;
- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (void)updateWithNodes:(const struct TFENodeVector *)arg1;
- (void)dealloc;
- (void)viewLoaded;
- (void)initCommon;

@end

@interface IPrivsAFPUserGroupSheetBaseController : NSWindowController <NSWindowDelegate, NSTextFieldDelegate>
{
    TPrivsTableViewMainController *_tableViewController;
    TEditTextField *_editUserGroupTextFld;
    NSString *_enterUserGroupText;
    NSNumber *_userGroupRadioButtonValue;
    BOOL _userGroupRadioButtonShouldBeVisible;
    BOOL _okButtonShouldBeEnabled;
    struct TFENode _volume;
}

+ (id)controllerWithTableViewController:(id)arg1 volume:(const struct TFENode *)arg2;
@property(nonatomic) BOOL userGroupRadioButtonShouldBeVisible; // @synthesize userGroupRadioButtonShouldBeVisible=_userGroupRadioButtonShouldBeVisible;
@property(nonatomic) BOOL okButtonShouldBeEnabled; // @synthesize okButtonShouldBeEnabled=_okButtonShouldBeEnabled;
@property(retain, nonatomic) NSNumber *userGroupRadioButtonValue; // @synthesize userGroupRadioButtonValue=_userGroupRadioButtonValue;
@property(retain, nonatomic) NSString *enterUserGroupText; // @synthesize enterUserGroupText=_enterUserGroupText;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)enterUserGroupTextForIndex:(unsigned long long)arg1;
- (void)cancelButtonPressed:(id)arg1;
- (void)handleOKButtonPressed:(const struct TIdentity *)arg1;
- (void)okButtonPressed:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)run;
- (void)windowWillClose:(id)arg1;
- (void)dealloc;

@end

@interface TPrivsAddAFPUserGroupSheetController : IPrivsAFPUserGroupSheetBaseController
{
}

- (id)enterUserGroupTextForIndex:(unsigned long long)arg1;
- (void)handleOKButtonPressed:(const struct TIdentity *)arg1;

@end

@interface TPrivsChangeAFPOwnerGroupSheet : IPrivsAFPUserGroupSheetBaseController
{
}

+ (id)controllerWithTableViewController:(id)arg1 volume:(const struct TFENode *)arg2 changeOwner:(BOOL)arg3;
- (id)enterUserGroupTextForIndex:(unsigned long long)arg1;
- (void)handleOKButtonPressed:(const struct TIdentity *)arg1;

@end

@interface TInfoWindowApplyToWindowController : NSWindowController
{
    TIconImageView *_iconImageView;
    NSTextField *_applyToText;
    NSProgressIndicator *_applyToProgress;
}

- (void)windowWillClose:(id)arg1;
- (id)initControllerWithParentWindow:(id)arg1 nodes:(const struct TFENodeVector *)arg2;

@end

@interface TPrivsAuthButtonExtractor : IPropertyNumberExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)defaultValue;

@end

@interface TPrivsAuthButtonApplicator : IPropertyNumberApplicator
{
}

- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPrivsAuthButtonController : TPropertyButtonController <IAsyncNodeOperationDelegateProtocol>
{
    TInfoWindowPermissionsViewController *_sliceController;
    TPrivsTableViewMainController *_tableViewController;
    TPrivsIgnoreOwnershipCheckboxController *_ignoreOwnershipController;
    TPrivilegesOperation *_privilegesOperation;
    BOOL _isLocked;
    BOOL _tableViewControllerShouldBeVisible;
    BOOL _ignoreOwnershipControllerShouldBeVisible;
    TInfoWindowApplyToWindowController *_applyToWindowController;
}

+ (id)keyPathsForValuesAffectingIsAuthenticated;
@property(nonatomic) BOOL ignoreOwnershipControllerShouldBeVisible; // @synthesize ignoreOwnershipControllerShouldBeVisible=_ignoreOwnershipControllerShouldBeVisible;
@property(nonatomic) BOOL tableViewControllerShouldBeVisible; // @synthesize tableViewControllerShouldBeVisible=_tableViewControllerShouldBeVisible;
@property(readonly, nonatomic) BOOL isLocked; // @synthesize isLocked=_isLocked;
- (void)unauthenticate;
- (int)asyncNodeOperation:(id)arg1 completedNotification:(const struct OperationMonitor *)arg2;
- (void)privsOperationCompleted;
- (int)asyncNodeOperation:(id)arg1 subOperationCompleted:(unsigned int)arg2 targetNode:(const struct TFENode *)arg3;
- (int)asyncNodeOperation:(id)arg1 subOperationStarted:(unsigned int)arg2;
- (int)asyncNodeOperation:(id)arg1 errorNotification:(const struct OperationMonitor *)arg2 error:(const struct OperationErrorRecord *)arg3 reply:(struct NodeEventReply *)arg4;
- (int)asyncNodeOperation:(id)arg1 statusNotification:(const struct OperationMonitor *)arg2;
- (int)startSuboperation:(unsigned int)arg1 fileSecurityRef:(struct __FSFileSecurity *)arg2;
- (int)applyValueToNodes:(id)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
@property(readonly, nonatomic) BOOL isAuthenticated; // @dynamic isAuthenticated;
- (void)setIsLocked:(BOOL)arg1;
- (void)dealloc;
- (void)viewLoaded;
- (void)initCommon;

@end

@interface TPrivsIgnoreOwnershipCheckboxExtractor : IPropertyNumberExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPrivsIgnoreOwnershipCheckboxApplicator : IPropertyNumberApplicator
{
}

- (int)applyValue:(id)arg1 toNodes:(struct TFENodeVector *)arg2;

@end

@interface TPrivsIgnoreOwnershipCheckboxController : TPropertyButtonController
{
    TPrivsAuthButtonController *_authButtonController;
}

- (int)applyValueToNodes:(id)arg1;
- (void)initCommon;

@end

@interface TPrivsPopUpButtonCell : TPopUpButtonCell
{
}

+ (struct TAccessControlInfo)accessControlInfoForIndex:(long long)arg1;
+ (unsigned long long)indexForAccessControlInfo:(const struct TAccessControlInfo *)arg1;
+ (void)configureMenu:(id)arg1 forNodes:(const struct TFENodeVector *)arg2 accessControlInfo:(const struct TAccessControlInfo *)arg3 isEveryone:(BOOL)arg4;
- (void)initPrivsPopUpButtonCellCommon;
- (void)awakeFromNib;
- (id)initTextCell:(id)arg1 pullsDown:(BOOL)arg2;

@end

@interface TPrivilegesTableViewItem : TTableViewItem
{
    struct TIdentity _identity;
    struct TIconRef _icon;
    struct TAccessControlInfo _accessControlInfo;
    int _type;
    BOOL _isOwner;
}

+ (const struct TIconRef *)unknownIcon;
+ (const struct TIconRef *)everyoneIcon;
+ (const struct TIconRef *)groupIcon;
+ (const struct TIconRef *)userIcon;
+ (const struct TIconRef *)ownerIcon;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)swapAltNameAndName;
- (int)type;
- (id)name;
- (void)mergeAccessControlInfo:(const struct TAccessControlInfo *)arg1;
- (void)setAccessControlInfo:(const struct TAccessControlInfo *)arg1;
- (const struct TAccessControlInfo *)accessControlInfo;
- (const struct TIconRef *)icon;
- (int)posixID;
- (struct __CFUUID *)uuidRef;
- (void)setIdentity:(const struct TIdentity *)arg1;
- (const struct TIdentity *)identity;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIdentity:(const struct TIdentity *)arg1 accessControlInfo:(const struct TAccessControlInfo *)arg2 isOwner:(BOOL)arg3;

@end

@interface TNodePermissionsInfoArrayExtractor : IPropertyArrayExtractor
{
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;

@end

@interface TPrivsTableViewDataSource : TTableViewDataSource
{
    TPrivsTableViewMainController *_controller;
}

- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)preferencesChanged:(id)arg1;
- (void)usersAndGroupsCacheChanged:(id)arg1;
- (void)dealloc;
- (void)initCommon;

@end

@interface TPrivsTableViewController : TTableViewController
{
    TPrivsTableViewMainController *_controller;
}

- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)viewLoaded;

@end

@interface TPrivsTableViewMainController : TPropertyTableViewController <NSMenuDelegate, TStdAlertSheetClientProtocol, TIdentityPickerDelegate>
{
    TInfoWindowViewController *_controller;
    TPrivsAuthButtonController *_authButtonController;
    NSArray *_initialNodePermissionsInfoArray;
    BOOL _isAuthenticated;
    BOOL _shouldEnableRevertMenuItem;
    BOOL _shouldEnableMinusButton;
    unsigned long long _runSoonHandlerID;
}

@property(nonatomic) BOOL shouldEnableMinusButton; // @synthesize shouldEnableMinusButton=_shouldEnableMinusButton;
@property(nonatomic) BOOL shouldEnableRevertMenuItem; // @synthesize shouldEnableRevertMenuItem=_shouldEnableRevertMenuItem;
@property(nonatomic) BOOL isAuthenticated; // @synthesize isAuthenticated=_isAuthenticated;
- (void)identityPickerDidEnd:(id)arg1 returnCode:(long long)arg2;
- (void)stdAlertSheetCancelButtonPressed;
- (void)stdAlertSheetOKButtonPressed;
- (void)revertChangesPressed;
- (void)applyToEnclosedPressed;
- (void)chooseNewGroupPressed;
- (void)chooseNewOwnerPressed;
- (void)makeUserOwnerPressed;
- (void)minusButtonPressed;
- (void)plusButtonPressed;
- (int)changePermissionsTo:(id)arg1;
- (void)applyToEnclosed;
- (BOOL)setPrivilegesForIdentity:(const struct TIdentity *)arg1 from:(const struct TAccessControlInfo *)arg2 to:(const struct TAccessControlInfo *)arg3;
- (void)changeGroupTo:(const struct TIdentity *)arg1;
- (void)changeOwnerTo:(const struct TIdentity *)arg1;
- (void)removeSelection;
- (void)removeIdentities:(const struct TIdentityVector *)arg1 withAccessControlInfo:(const vector_27cb8753 *)arg2;
- (void)addIdentities:(const struct TIdentityVector *)arg1;
- (void)getDisplayedIdentities:(struct TIdentityVector *)arg1;
- (void)tableViewSelectionDidChange;
- (void)menuNeedsUpdate:(id)arg1;
- (void)populate;
- (void)targetNodesChanging;
- (BOOL)canModifyNodes:(const struct TFENodeVector *)arg1;
- (BOOL)adjustSize:(BOOL)arg1;
- (void)setValue:(id)arg1;
- (void)aboutToTearDown;
- (void)dealloc;
- (void)viewLoaded;
- (void)initCommon;

@end

@interface TInfoWindowPermissionsViewController : TInfoWindowViewController
{
    TPrivsSummaryTextController *_youCanSummaryTextController;
    TSpacerView *_tableViewSpacerView;
    TPrivsTableViewMainController *_tableViewController;
    TSpacerView *_buttonsSpacerView;
    TPrivsPlusButtonController *_plusButtonController;
    TPrivsMinusButtonController *_minusButtonController;
    TPrivsActionPopUpButtonController *_actionPopUpButtonController;
    TPrivsAuthButtonController *_authButtonController;
    TSpacerView *_ignoreOwnershipSpacerView;
    TPrivsIgnoreOwnershipCheckboxController *_ignoreOwnershipCheckboxController;
}

+ (id)controller;
- (unsigned int)scriptingID;
- (void)targetNodesChanging;
- (void)loadValueControllers;
- (id)expandedPrefKey;
- (void)dealloc;

@end

@interface TQLPreviewView : QLPreviewView
{
}

@end

@interface TQLPreviewViewZoomController : NSObject <ISpawnOriginDelegateProtocol, TQLPreviewWindowControllerProtocol, QLSeamlessCloserDelegate>
{
    TQLPreviewView *_previewView;
    unsigned long long _handlerID;
}

+ (void)initialize;
@property(readonly) unsigned long long handlerID; // @synthesize handlerID=_handlerID;
- (BOOL)isBackupBrowser;
- (BOOL)quickLookHandleEvent:(id)arg1;
- (id)seamlessCloserSourcePreviewViewForPreviewItem:(id)arg1;
- (id)seamlessCloserTransitionImageForPreviewItem:(id)arg1 contentRect:(struct CGRect *)arg2;
- (struct CGRect)seamlessCloserSourceFrameOnScreenForPreviewItem:(id)arg1;
- (id)quickLookSharedPreviewViewForPreviewNode:(const struct TFENode *)arg1;
- (id)zoomImageForNode:(const struct TFENode *)arg1 contentRect:(struct CGRect *)arg2;
- (struct CGRect)globalZoomRectForNode:(const struct TFENode *)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithPreviewView:(id)arg1;

@end

@interface TQLPreviewViewExtractor : IPropertyFINodeExtractor
{
    NSString *_nodeSuffix;
}

- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1 node:(const struct TFENode *)arg2;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (void)dealloc;

@end

@interface TQLPreviewViewController : IPropertyValueController <QLPreviewViewDelegate, FIAliasResolution>
{
    struct TInfoPreviewViewQTEjectHelper _ejectHelper;
    struct TNSRef<TQLPreviewViewZoomController *> _zoomController;
}

+ (void)initialize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)alias:(const struct TFENode *)arg1 resolvedAs:(const struct TFENode *)arg2 temporaryNode:(const struct TFENode *)arg3;
- (BOOL)previewView:(id)arg1 writePreviewItem:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)previewView:(id)arg1 acceptDrop:(id)arg2 onPreviewItem:(id)arg3;
- (unsigned long long)previewView:(id)arg1 validateDrop:(id)arg2 onPreviewItem:(id)arg3;
- (void)previewView:(id)arg1 doubleClickedOnPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 willShowPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 willLoadPreviewItem:(id)arg2;
- (void)timeMachineWillStart:(id)arg1;
- (void)adjustPreviewFrame;
- (BOOL)isResizable;
- (void)refresh;
- (void)stopPlaying;
- (BOOL)adjustSize:(BOOL)arg1;
- (void)flush;
- (void)handleNodesGoingAway:(const struct TFENodeVector *)arg1;
- (void)handleBulkNodesDeleted:(const map_6f5aee00 *)arg1 observedNodes:(const struct TFENodeVector *)arg2;
- (void)handleBulkNodesChanged:(const map_9a8e9377 *)arg1 observedNodes:(const struct TFENodeVector *)arg2;
- (void)setView:(id)arg1;
- (void)viewLoaded;
- (void)finalize;
- (void)dealloc;
- (void)initCommon;

@end

@interface TInfoQLPreviewViewController : TQLPreviewViewController
{
    struct CGRect _cachedSuperviewFrame;
    BOOL _handlingSuperviewFrameChange;
    double _leftRightMargin;
}

- (id).cxx_construct;
- (void)adjustPreviewFrame;
- (struct CGSize)calcPreviewSizeForWidth:(double)arg1;
- (void)superviewFrameChanged:(id)arg1;
- (void)dealloc;
- (void)viewLoaded;

@end

@interface TPreviewViewController : TInfoWindowViewController
{
    TInfoQLPreviewViewController *_qlPreviewViewController;
}

+ (id)controller;
- (unsigned int)scriptingID;
- (void)loadValueControllers;
- (void)preToggle;
- (id)expandedPrefKey;
- (BOOL)expandedDefaultValue;

@end

@interface TInfoWindowViewController : TViewController <TViewAnimationDelegate>
{
    struct TFENodeVector _nodes;
    double _expandedHeight;
    NSView *_bottomBindingView;
    BOOL _expanded;
    BOOL _prefExpanded;
    BOOL _isSetFrameHeightInProgress;
    BOOL _isToggleInProgress;
    NSArray *_valueControllers;
    TLayoutBinder *_layoutBinder;
    TLayoutBinder *_separatorLayoutBinder;
}

@property(retain, nonatomic) NSArray *valueControllers; // @synthesize valueControllers=_valueControllers;
@property(readonly, nonatomic) TLayoutBinder *layoutBinder; // @synthesize layoutBinder=_layoutBinder;
@property(readonly, nonatomic) BOOL isToggleInProgress; // @synthesize isToggleInProgress=_isToggleInProgress;
@property(nonatomic) BOOL expanded; // @synthesize expanded=_expanded;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)disableBottomViewBindings;
- (void)enableBottomViewBindings;
- (void)nodeMDAttributeChanged:(const struct TFENode *)arg1 attributes:(id)arg2 isDisplayAttributes:(BOOL)arg3;
- (void)nodesGoingAway:(const struct TFENodeVector *)arg1;
- (void)bulkNodesDeleted:(const map_6f5aee00 *)arg1;
- (void)bulkNodesChanged:(const map_9a8e9377 *)arg1;
- (unsigned int)notificationOptionsForNodes:(const struct TFENodeVector *)arg1;
@property(nonatomic) BOOL prefExpanded; // @synthesize prefExpanded=_prefExpanded;
- (id)expandedPrefKey;
- (BOOL)expandedDefaultValue;
- (double)disclosedHeight;
@property(readonly, nonatomic) double bottomMargin;
- (void)refresh;
- (void)targetNodesChanged;
- (void)setNodes:(const struct TFENodeVector *)arg1;
- (void)targetNodesChanging;
- (const struct TFENodeVector *)nodes;
- (void)setFrameHeight:(double)arg1;
- (void)bottomBindingViewFrameChanged:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)toggleExpanded:(id)arg1;
- (unsigned int)scriptingID;
- (void)setSubviewsHidden:(BOOL)arg1;
- (void)postToggle;
- (void)preToggle;
- (void)loadValueControllers;
- (void)aboutToTearDown;
- (void)viewLoaded;

@end

@interface TGotoWindowController : TScriptableWindowController <NSTextFieldDelegate, NSWindowDelegate>
{
    TEditTextField *_pathFld;
    NSProgressIndicator *_progress;
    NSString *_errorMsgText;
    BOOL _isGoingToFolder;
    BOOL _isAutoCompleting;
    TBrowserViewController *_parentBrowserViewController;
    NSWindow *_parentWindow;
    BOOL _selectionChangedDuringAutoCompletion;
    struct TFENode _relativeNode;
    struct TFENode _candidateNode;
    struct TFENode _backupResolvedNode;
    struct TString _previousDecomposedPath;
    id _completionHandler;
}

+ (id)keyPathsForValuesAffectingShowProgress;
+ (id)keyPathsForValuesAffectingEnableGoBtn;
+ (id)gotoWindowController;
+ (void)showGotoForBrowserViewController:(id)arg1 window:(id)arg2 initialFilename:(id)arg3 completionHandler:(id)arg4;
+ (void)showGotoForBrowserViewController:(id)arg1;
@property(copy) id completionHandler; // @synthesize completionHandler=_completionHandler;
@property(nonatomic) NSWindow *parentWindow; // @synthesize parentWindow=_parentWindow;
@property(nonatomic) TBrowserViewController *parentBrowserViewController; // @synthesize parentBrowserViewController=_parentBrowserViewController;
@property(nonatomic) BOOL isAutoCompleting; // @synthesize isAutoCompleting=_isAutoCompleting;
@property(nonatomic) BOOL isGoingToFolder; // @synthesize isGoingToFolder=_isGoingToFolder;
@property(retain, nonatomic) NSString *errorMsgText; // @synthesize errorMsgText=_errorMsgText;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)cancel:(id)arg1;
- (void)threadedGoWithPath:(id)arg1;
- (void)gotoNodeItem:(const struct TFENode *)arg1 lastPathComponent:(id)arg2;
- (void)go:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)autoCompletionDone:(id)arg1;
- (void)autoCompletionWithArgs:(id)arg1;
- (void)autoCompleteNowAndValidate:(BOOL)arg1;
- (void)autoCompleteNow;
- (void)autoCompleteSoon;
- (id)autocompletePath:(id)arg1 validate:(BOOL)arg2;
- (struct TFENode)candidateNodeForPath:(id)arg1 allowCompletion:(BOOL)arg2 path:(id *)arg3;
- (struct TFENode)nodeForPathMappedToBackup:(id)arg1 withController:(id)arg2;
- (BOOL)shouldAutoCompletePath:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)unsetup;
- (void)setupWithFilename:(id)arg1;
@property(readonly, nonatomic) BOOL showProgress; // @dynamic showProgress;
- (void)updateEnableGoBtn;
@property(readonly, nonatomic) BOOL enableGoBtn; // @dynamic enableGoBtn;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (void)dealloc;
- (id)init;

@end

@interface TTextCell : NSTextFieldCell
{
    double _leftMargin;
    double _rightMargin;
    struct TNSRef<NSColor *> _enabledTextColor;
    struct TNSRef<NSColor *> _disabledTextColor;
    struct _NSRange _truncateInRange;
    BOOL _drawGrayTextWhenDisabled;
    BOOL _centerVertically;
    BOOL _subpixelAntialiasing;
}

@property(nonatomic) BOOL subpixelAntialiasing; // @synthesize subpixelAntialiasing=_subpixelAntialiasing;
@property(nonatomic) BOOL centerVertically; // @synthesize centerVertically=_centerVertically;
@property(nonatomic) BOOL drawGrayTextWhenDisabled; // @synthesize drawGrayTextWhenDisabled=_drawGrayTextWhenDisabled;
@property(nonatomic) struct _NSRange truncateInRange; // @synthesize truncateInRange=_truncateInRange;
@property(nonatomic) double rightMargin; // @synthesize rightMargin=_rightMargin;
@property(nonatomic) double leftMargin; // @synthesize leftMargin=_leftMargin;
- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawWithExpansionFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (void)setEnabled:(BOOL)arg1;
@property(retain, nonatomic) NSColor *disabledTextColor; // @dynamic disabledTextColor;
@property(retain, nonatomic) NSColor *enabledTextColor; // @dynamic enabledTextColor;
- (void)awakeCommon;
- (void)initCommon;
- (void)awakeFromNib;
- (id)initImageCell:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initTextCell:(id)arg1;

@end

@interface TIconAndTextCell : TTextCell
{
    struct TIconRef _icon;
    struct CGSize _iconSize;
    double _iconToTextSpacing;
    BOOL _showIcon;
}

@property BOOL showIcon; // @synthesize showIcon=_showIcon;
@property(nonatomic) double iconToTextSpacing; // @synthesize iconToTextSpacing=_iconToTextSpacing;
@property struct CGSize iconSize; // @synthesize iconSize=_iconSize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)highlightColorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawIconWithFrame:(struct CGRect)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (const struct TIconRef *)icon;
- (void)setIcon:(const struct TIconRef *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)initCommon;

@end

@interface TButtonCell : NSButtonCell
{
    BOOL _acceptsFirstMouse;
}

@property BOOL acceptsFirstMouse; // @synthesize acceptsFirstMouse=_acceptsFirstMouse;
- (BOOL)acceptsFirstMouseFE:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (long long)nextState;
- (void)initCommon;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface TTableViewButtonCell : TButtonCell
{
}

- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;

@end

@interface TNodeIconAndNameCell : TIconAndTextWithActionCell
{
    struct TFENode _node;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)setNode:(const struct TFENode *)arg1;
- (const struct TFENode *)node;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TLayoutBinderAnchorView : TView
{
}

+ (id)anchorView;
- (void)dealloc;

@end

@interface TLayoutBinder : NSObject <NSCopying>
{
    NSView *_slaveView;
    struct TLayoutBinding _layoutBinding;
    struct map<TNSRef<NSView *>, unsigned long, std::__1::less<TNSRef<NSView *>>, std::__1::allocator<std::__1::pair<const TNSRef<NSView *>, unsigned long>>> _observedMasterViews;
}

@property(readonly) NSView *slaveView; // @synthesize slaveView=_slaveView;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)getMaxDelta:(double *)arg1 minDelta:(double *)arg2 fromSideBinding:(const struct TSideLayoutBinding *)arg3 superviewIsFlipped:(BOOL)arg4;
- (void)getNewOrigin:(double *)arg1 newSize:(double *)arg2 suspendMinBinding:(char *)arg3 fromMaxBinding:(struct TSideLayoutBinding *)arg4 fromMinBinding:(struct TSideLayoutBinding *)arg5 masterView:(id)arg6 masterViewFrame:(const struct CGRect *)arg7 superviewIsFlipped:(BOOL)arg8;
- (void)masterViewFrameChanged:(id)arg1;
- (void)stopObservingMasterView:(id)arg1;
- (void)startObservingMasterView:(id)arg1;
- (void)clearBinding:(struct TSideLayoutBinding *)arg1;
- (void)setBinding:(id)arg1 kind:(int)arg2 sideBinding:(struct TSideLayoutBinding *)arg3;
- (void)clearRightBinding;
- (void)setRightBinding:(id)arg1 kind:(int)arg2;
- (void)getRightBinding:(id *)arg1 kind:(int *)arg2;
- (void)anchorRightBinding;
- (id)rightMasterView;
- (int)rightBindingKind;
- (void)clearLeftBinding;
- (void)setLeftBinding:(id)arg1 kind:(int)arg2;
- (void)getLeftBinding:(id *)arg1 kind:(int *)arg2;
- (void)anchorLeftBinding;
- (id)leftMasterView;
- (int)leftBindingKind;
- (void)clearBottomBinding;
- (void)setBottomBinding:(id)arg1 kind:(int)arg2;
- (void)getBottomBinding:(id *)arg1 kind:(int *)arg2;
- (void)anchorBottomBinding;
- (id)bottomMasterView;
- (int)bottomBindingKind;
- (void)clearTopBinding;
- (void)setTopBinding:(id)arg1 kind:(int)arg2;
- (void)getTopBinding:(id *)arg1 kind:(int *)arg2;
- (void)anchorTopBinding;
- (id)topMasterView;
- (int)topBindingKind;
- (void)clearBindings;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithSlaveView:(id)arg1;

@end

@interface TAdvancedPaneController : TPaneController
{
    TButton *_showAllFileExtensionsBtn;
    TButton *_showExtensionWarningBtn;
    TButton *_showTrashWarningBtn;
    TButton *_emptyTrashSecurelyBtn;
    TPopUpButton *_defaultSearchLocationBtn;
}

- (void)defaultSearchLocation:(id)arg1;
- (void)emptyTrashSecurely:(id)arg1;
- (void)showTrashWarnings:(id)arg1;
- (void)showExtensionWarnings:(id)arg1;
- (void)showAllExtensions:(id)arg1;
- (void)preferencesUpdated:(id)arg1;
- (void)open;
- (void)configure;
- (_Bool)emptyTrashSecurely;
- (_Bool)warnOnTrashEmpty;
- (_Bool)showExtensionsChangeWarning;

@end

@interface TSelectLocationController : TChooseFolderController
{
    TGeneralPaneController *_parent;
}

- (BOOL)shouldEnableNode:(const struct TFENode *)arg1;
- (int)defaultOptions;
- (BOOL)validateNode:(const struct TFENode *)arg1;
- (void)setParent:(id)arg1;

@end

@interface TGeneralPaneController : TPaneController <NSMenuDelegate>
{
    TButton *_hardDisksOnDesktopBtn;
    TButton *_externalDisksOnDesktopBtn;
    TButton *_otherDisksOnDesktopBtn;
    TButton *_connectedServersOnDesktopBtn;
    TPopUpButton *_newFinderWindowsBtn;
    TButton *_alwaysOpenNewWindowsBtn;
    TButton *_springLoadedBtn;
    NSSlider *_delayBtn;
    TTextField *_shortFld;
    TTextField *_mediumFld;
    TTextField *_longFld;
    struct TFENode _customLocation;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)delay:(id)arg1;
- (void)springLoaded:(id)arg1;
- (void)alwaysOpenNewWindows:(id)arg1;
- (void)selectCustomTarget:(id)arg1;
- (void)newFinderWindows:(id)arg1;
- (void)connectedServersOnDesktop:(id)arg1;
- (void)otherDisksOnDesktop:(id)arg1;
- (void)externalDisksOnDesktop:(id)arg1;
- (void)hardDisksOnDesktop:(id)arg1;
- (void)open;
- (void)preferencesUpdated:(id)arg1;
- (void)configure;
- (void)configureSpringingControls;
- (void)configureNewFinderWindowsPopup;
- (void)menuNeedsUpdate:(id)arg1;
- (void)updateCustomLocationMenuItem;
- (void)configureMenuItem:(id)arg1 withNode:(const struct TFENode *)arg2;
- (void)setMenuSelection;
- (void)addVolumes;
- (void)setCustomLocation:(const struct TFENode *)arg1;
- (struct TFENode)nodeForSelectedVolume;
- (void)setTarget:(const struct TFENode *)arg1 withTag:(long long)arg2;
- (long long)newFinderWindowOpensTarget:(struct TFENode *)arg1;
- (long long)defaultTarget:(struct TFENode *)arg1;
- (struct TFENode)nodeForTag:(long long)arg1;
- (unsigned int)typeForTag:(long long)arg1;
- (long long)tagForType:(unsigned int)arg1;
- (void)awakeFromNib;

@end

@interface TLabelSwatch : TView
{
    unsigned long long _labelIndex;
}

@property(nonatomic) unsigned long long labelIndex; // @synthesize labelIndex=_labelIndex;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface TLabelField : TEditTextField
{
    unsigned long long _labelIndex;
}

@property(nonatomic) unsigned long long labelIndex; // @synthesize labelIndex=_labelIndex;

@end

@interface TLabelsPaneController : TPaneController
{
    TLabelSwatch *_swatch1;
    TLabelField *_field1;
    TLabelSwatch *_swatch2;
    TLabelField *_field2;
    TLabelSwatch *_swatch3;
    TLabelField *_field3;
    TLabelSwatch *_swatch4;
    TLabelField *_field4;
    TLabelSwatch *_swatch5;
    TLabelField *_field5;
    TLabelSwatch *_swatch6;
    TLabelField *_field6;
    TLabelSwatch *_swatch7;
    TLabelField *_field7;
}

+ (unsigned long long)labelIndexForOrder:(unsigned long long)arg1;
- (void)labelNameChange:(id)arg1;
- (void)setColorName:(id)arg1 forLabelIndex:(unsigned long long)arg2;
- (void)labelColorOrNameChanged:(id)arg1;
- (void)open;
- (void)updateLabels;
- (void)dealloc;
- (void)initCommon;

@end

@interface TPaneController : TViewController
{
    NSWindow *_window;
}

@property(readonly) NSWindow *window; // @synthesize window=_window;
- (void)preferencesUpdated:(id)arg1;
- (void)setBoolValue:(_Bool)arg1 forKey:(int)arg2;
- (void)configureControl:(id)arg1 withValue:(long long)arg2 andCommand:(SEL)arg3;
- (void)close;
- (void)open;
- (void)dealloc;
- (void)initCommon;

@end

@interface TPreferencesWindowController : TScriptableWindowController
{
    NSToolbar *_toolbar;
    TGeneralPaneController *_generalPaneController;
    TLabelsPaneController *_labelsPaneController;
    TSidebarPaneController *_sidebarPaneController;
    TAdvancedPaneController *_advancedPaneController;
    long long _currentPane;
    double _toolbarOffset;
}

+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (id)preferencesWindow;
+ (id)show;
+ (id)instance;
- (void)cancel:(id)arg1;
- (void)setPane:(int)arg1;
- (int)pane;
- (void)advanced:(id)arg1;
- (void)sidebar:(id)arg1;
- (void)labels:(id)arg1;
- (void)general:(id)arg1;
- (id)toolbarSelectableItemIdentifiers:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)dealloc;
- (unsigned int)finderScriptingModelKind;
- (void)windowDidLoad;
- (id)init;
- (void)windowDidResignMain:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)selectPaneAtIndex:(long long)arg1;
- (id)controllerForPaneAtIndex:(long long)arg1;
- (id)currentPaneController;
- (void)configureToolbar;
- (int)paneTypeForIndex:(long long)arg1;
- (long long)indexForPaneType:(int)arg1;

@end

@interface TSidebarPrefsBG : TView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)_windowChangedKeyState;

@end

@interface TSidebarPrefsCategory : TTextField
{
}

- (void)initCommon;

@end

@interface TSidebarPrefsItemCell : TButtonCell
{
    NSImage *_icon;
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)iconFrameForBounds:(struct CGRect)arg1;
- (BOOL)layoutDirectionIsRTL;
- (void)setIcon:(id)arg1;
- (void)dealloc;

@end

@interface TSidebarPrefsItem : TButton
{
    int _category;
}

@property(nonatomic) int category; // @synthesize category=_category;
- (void)configureWithCategory:(int)arg1 creator:(unsigned int)arg2 type:(unsigned int)arg3;
- (void)configureWithCategory:(int)arg1 image:(id)arg2;
- (void)synchronizeSidebarItemState;
- (void)initCommon;

@end

@interface TSidebarPaneController : TPaneController
{
    TSidebarPrefsBG *_background;
    TSidebarPrefsCategory *_devicesFld;
    TSidebarPrefsItem *_computerBtn;
    TSidebarPrefsItem *_hardDisksBtn;
    TSidebarPrefsItem *_externalDisksBtn;
    TSidebarPrefsItem *_ejectablesBtn;
    TSidebarPrefsCategory *_sharedFld;
    TSidebarPrefsItem *_btmmBtn;
    TSidebarPrefsItem *_serversBtn;
    TSidebarPrefsItem *_bonjourBtn;
    TSidebarPrefsCategory *_placesFld;
    TSidebarPrefsItem *_homeBtn;
    TSidebarPrefsItem *_desktopBtn;
    TSidebarPrefsItem *_applicationsBtn;
    TSidebarPrefsItem *_documentsBtn;
    TSidebarPrefsItem *_allMyFilesBtn;
    TSidebarPrefsItem *_meetingRoomBtn;
    TSidebarPrefsItem *_downloadsBtn;
    TSidebarPrefsItem *_musicBtn;
    TSidebarPrefsItem *_moviesBtn;
    TSidebarPrefsItem *_picturesBtn;
}

- (void)sidebarItemToggle:(id)arg1;
- (void)preferencesUpdated:(id)arg1;
- (void)handleItemsAddedOrRemoved:(id)arg1;
- (void)close;
- (void)open;
- (void)viewLoaded;
- (void)removeButton:(id)arg1;

@end

@interface TNonClickThroughButton : TButton
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TFocusRingScrollView : TScrollView
{
}

- (struct CGRect)_boundsInsetForBorder;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (BOOL)canBecomeKeyView;
- (void)initCommon;

@end

@interface TFocusRingTextView : NSTextView
{
    BOOL _doesntAcceptFirstResponder;
    double _focusRingOffset;
}

@property double focusRingOffset; // @synthesize focusRingOffset=_focusRingOffset;
- (void)setLayer:(id)arg1;
- (id)makeBackingLayer;
- (void)setEditable:(BOOL)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)invalidateFocusRing:(id)arg1;
- (void)setKeyboardFocusRingNeedsDisplayInRect:(struct CGRect)arg1;
- (void)invalidateFocusRing;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)isOpaque;

@end

@interface TIconImageView : TImageView
{
    TPropertyIconController *_controller;
}

@property TPropertyIconController *controller; // @synthesize controller=_controller;
- (void)draggingEnded:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)redo:(id)arg1;
- (BOOL)validateRedo:(id)arg1;
- (void)undo:(id)arg1;
- (BOOL)validateUndo:(id)arg1;
- (void)paste:(id)arg1;
- (BOOL)validatePaste:(id)arg1;
- (void)delete:(id)arg1;
- (BOOL)validateDelete:(id)arg1;
- (void)cut:(id)arg1;
- (BOOL)validateCut:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)validateCopy:(id)arg1;
- (BOOL)canChangeIcon;
- (void)setImage:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)initCommon;

@end

@interface TBackupProgressView : NSView
{
    NSColor *_backgroundColor;
}

@property(copy) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (BOOL)acceptsFirstResponder;
- (void)awakeFromNib;

@end

@interface TBackupProgressWindowController : TScriptableWindowController <NSWindowDelegate>
{
    TBackupProgressView *_view;
    NSImageView *_icon;
    NSTextField *_phaseFld;
    NSProgressIndicator *_progress;
    NSTextField *_messageFld;
    NSButton *_cancelBtn;
    NSTrackingArea *_cancelBtnTrackingArea;
    struct TString _cachedMouseOverMessage;
    BOOL _showingMouseOverMessage;
    BOOL _cancelRequested;
}

+ (id)nonNilBackupProgressWindowController;
+ (id)backupProgressWindowController;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)cancelBackup:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)close;
- (void)updateProgress:(struct __CFDictionary *)arg1;
- (id)messageForStatus:(const struct TBackupStatus *)arg1;
- (struct TString)phaseForStatus:(const struct TBackupStatus *)arg1;
- (void)updateUIWithPhase:(id)arg1 message:(id)arg2 percentComplete:(double)arg3 indeterminate:(BOOL)arg4;
- (void)updateTrackingAreas:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (void)scheduleWindowOrderFront;
- (id)init;

@end

@interface TSeamlessOpenerDelegate : NSObject <QLSeamlessOpenerDelegate>
{
    struct TSeamlessOpenerSpawnOrigin *_spawnOrigin;
}

+ (id)openerDelegateWithSpawnOrigin:(struct ISpawnOrigin *)arg1;
- (int)seamlessOpener:(id)arg1 supportForPreviewItem:(id)arg2;
- (id)seamlessOpener:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (id)seamlessOpener:(id)arg1 sourcePreviewViewForPreviewItem:(id)arg2;
- (struct CGRect)seamlessOpener:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (void)dealloc;

@end

@interface TTextField : NSTextField
{
    struct CGSize _maxSize;
    struct CGSize _minSize;
    struct CGSize _idealSize;
    BOOL _suspendCalcIdealSize;
    struct TNSRef<NSColor *> _enabledTextColor;
    struct TNSRef<NSColor *> _disabledTextColor;
    BOOL _autoSizeToFit;
    BOOL _autoAdjustHeightToFit;
    BOOL _sizingInProgress;
    BOOL _drawGrayTextWhenDisabled;
    BOOL _disableWhenWindowIsNotKey;
    BOOL _drawEtched;
}

@property(nonatomic) BOOL drawEtched; // @synthesize drawEtched=_drawEtched;
@property(nonatomic) BOOL disableWhenWindowIsNotKey; // @synthesize disableWhenWindowIsNotKey=_disableWhenWindowIsNotKey;
@property(nonatomic) BOOL drawGrayTextWhenDisabled; // @synthesize drawGrayTextWhenDisabled=_drawGrayTextWhenDisabled;
@property(nonatomic) BOOL autoAdjustHeightToFit; // @synthesize autoAdjustHeightToFit=_autoAdjustHeightToFit;
@property(nonatomic) BOOL autoSizeToFit; // @synthesize autoSizeToFit=_autoSizeToFit;
@property(nonatomic) BOOL suspendCalcIdealSize; // @synthesize suspendCalcIdealSize=_suspendCalcIdealSize;
@property(readonly, nonatomic) struct CGSize idealSize; // @synthesize idealSize=_idealSize;
@property(nonatomic) struct CGSize minSize; // @synthesize minSize=_minSize;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=_maxSize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)_windowChangedKeyState;
- (double)calcHeightToFit:(struct CGSize)arg1;
- (struct CGSize)calcSizeToFit;
- (struct CGSize)calcIdealSizeImpl;
- (void)calcIdealSize;
- (void)adjustHeightToFit;
- (void)sizeToFit;
- (void)setFont:(id)arg1;
- (void)setAttributedStringValue:(id)arg1;
- (void)setObjectValue:(id)arg1;
- (void)setStringValue:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setSubpixelAntialiasing:(BOOL)arg1;
- (void)setCustomCellAttributesDisabled:(id)arg1;
- (void)setCustomCellAttributesInactiveSelected:(id)arg1;
- (void)setCustomCellAttributesInactive:(id)arg1;
- (void)setCustomCellAttributesSelected:(id)arg1;
- (void)setCustomCellAttributes:(id)arg1;
@property(nonatomic) struct _NSRange truncateInRange; // @dynamic truncateInRange;
@property(retain, nonatomic) NSColor *disabledTextColor; // @dynamic disabledTextColor;
@property(retain, nonatomic) NSColor *enabledTextColor; // @dynamic enabledTextColor;
- (unsigned long long)controlSize;
- (void)setControlSize:(unsigned long long)arg1;
- (id)textAttributes;
- (void)applySettingsFrom:(id)arg1;
- (id)copyTextField;
- (void)awakeCommon;
- (void)initCommon;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface TTextWithTitleFieldImpl : NSObject
{
    TTextField<TTextWithTitleFieldImplProtocol> *_textFld;
    TTitleField *_titleFld;
}

@property TTitleField *titleFld; // @synthesize titleFld=_titleFld;
@property TTextField<TTextWithTitleFieldImplProtocol> *textFld; // @synthesize textFld=_textFld;
- (double)calcHeightToFit:(struct CGSize)arg1;

@end

@interface TTextWithTitleField : TTextField <TTextWithTitleFieldImplProtocol>
{
    struct TNSRef<TTextWithTitleFieldImpl *> _implementation;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (double)calcHeightToFitOfTextFieldOnly:(struct CGSize)arg1;
- (double)calcHeightToFit:(struct CGSize)arg1;
@property TTitleField *titleFld; // @dynamic titleFld;
- (void)initCommon;

@end

@interface TFavoriteServersTableViewItem : TTableViewItem
{
    TNSSharedFileListItem *_item;
}

- (struct TIconRef)icon;
- (id)displayURL;
- (struct OpaqueLSSharedFileListItemRef *)item;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithSFLItem:(struct OpaqueLSSharedFileListItemRef *)arg1;

@end

@interface TFavoriteServersTableViewDataSource : TTableViewDataSource <TSharedFileListObserverProtocol>
{
    unsigned int _favoritesGeneration;
    struct TFavoriteServersListCocoaBridge *_favoriteServersList;
}

- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (void)listChanged:(const struct TSharedFileList *)arg1;
- (void)refresh;
- (void)dealloc;
- (void)awakeCommon;

@end

@interface TFavoriteServersTableViewController : TTableViewController
{
}

- (void)handleDoubleClick:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)setView:(id)arg1;
- (Class)dataSourceClass;

@end

@interface TConnectToWindowController : TScriptableWindowController <NSMenuDelegate>
{
    TButton *_addBookmarkButton;
    TButton *_removeBookmarkButton;
    TPopUpButton *_recentsMenuButton;
    TTextField *_urlField;
    TButton *_helpButton;
    TButton *_connectToButton;
    TButton *_browseButton;
    NSProgressIndicator *_progressIndicator;
    TConnectToFavoriteTextField *_promptLabel;
    TTextField *_favoritesLabel;
    TTableView *_favoritesTable;
    NSWindow *_connectToWindow;
    TFavoriteServersTableViewController *_controller;
}

+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (BOOL)validateConnectTo:(id)arg1;
+ (void)show;
- (void)loadSavedURLData;
- (void)loadSavedFrameData;
- (void)saveData;
- (void)clearRecentServers:(id)arg1;
- (void)refreshRecentServers;
- (void)selectRecentServer:(id)arg1;
- (void)helpButtonPressed:(id)arg1;
- (void)browseServers:(id)arg1;
- (void)urlTextChanged;
- (void)urlTextAccepted:(id)arg1;
- (id)_stringForAcceptableSchemes;
- (id)_stringForScheme:(id)arg1;
- (void)favoriteSelected:(const struct TSharedFileListItem *)arg1;
- (void)bookmarkSelected:(struct __CFURL *)arg1;
- (void)removeSelectedBookmarks:(id)arg1;
- (void)addBookmarkTo:(id)arg1;
- (void)addBookmark:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)cancel:(id)arg1;
- (void)windowDidLoad;
- (void)dealloc;
- (id)init;

@end

@interface TConnectToFavoriteIconAndTextCell : TIconAndTextCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface TConnectToFavoriteTextField : TEditTextField
{
    TTableView *_favoriteTableView;
}

- (BOOL)becomeFirstResponder;

@end

@interface TFloatingInputView : NSTextView
{
}

- (id)validAttributesForMarkedText;

@end

@interface TFloatingInputWindowController : NSObject <NSWindowDelegate>
{
}

+ (id)singleton;
- (void)windowWillClose:(id)arg1;
- (id)inputContext;
- (BOOL)preProcessedByInputMethod:(id)arg1 forController:(id)arg2;
- (void)dealloc;
- (id)init;
- (void)keyboardInputSourceChanged:(id)arg1;

@end

@interface TFloatingInputWindow : NSPanel
{
    TFloatingInputView *_floatingInputView;
}

+ (id)singleton;
- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;
- (id)inputContext;
- (id)text;
- (void)setText:(id)arg1;
- (BOOL)preProcessedByInputMethod:(id)arg1 forController:(id)arg2;
- (id)init;

@end

@interface TFFKBrowserWindow : TBrowserWindow
{
}

@end

@interface TFFKArrowButtonCell : NSButtonCell
{
    BOOL _isLeft;
}

- (void)setEnabled:(BOOL)arg1;
- (id)initAsLeft:(BOOL)arg1;

@end

@interface TFFKPageNumberCell : NSButtonCell
{
    BOOL _isCurrentPage;
    NSMutableDictionary *_textAttrs;
}

+ (id)cellWithTitle:(id)arg1;
@property(nonatomic) BOOL isCurrentPage; // @synthesize isCurrentPage=_isCurrentPage;
- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)setEnabled:(BOOL)arg1;
- (void)dealloc;
- (id)initWithTitle:(id)arg1;

@end

@interface TFFKBrowserWindowController : TBrowserWindowController
{
    NSBox *_separatorView;
    NSView *_buttonBarView;
    NSButton *_leftBtn;
    NSTextField *_pageFld;
    NSButton *_rightBtn;
    NSMutableArray *_buttonList;
    unsigned long long _currentPage;
    unsigned long long _pageCount;
}

+ (unsigned long long)defaultFFKItemCount;
@property(nonatomic) unsigned long long currentPage; // @synthesize currentPage=_currentPage;
- (void)setPage:(id)arg1;
- (void)nextPage:(id)arg1;
- (void)previousPage:(id)arg1;
- (void)pageChanged;
- (void)synchronizeUIWithCurrentPage;
- (void)updateForContentChange;
- (void)updateCurrentPageButton;
- (unsigned long long)updatePageCount;
- (void)configurePageButtons;
- (void)synchronizePageFld;
- (void)clearButtonList;
- (unsigned long long)actualItemCount;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;
- (void)buildBrowserView:(BOOL)arg1;
- (void)setTargetPath:(const struct TFENodeVector *)arg1 withViewStyle:(id)arg2 rebuildView:(BOOL)arg3;
- (void)windowDidChange;
- (void)configureWindowForTargetChange;
- (void)configureWindowForContentChange;
- (void)updateViewLayout:(BOOL)arg1;
- (void)updateViewLayoutForFFK;
- (struct CGRect)browserViewContainerFrame;
- (id)browserViewContainer;
- (void)tearDownAccessoryViews;
- (void)configureAccessoryViews;
- (void)tearDownPersistentViews;
- (void)configurePersistentViewsWithState:(id)arg1;
- (id)viewStyleFromState:(id)arg1;
- (void)configureAndPlaceWindowWithState:(id)arg1;
- (void)showOnOpen:(BOOL)arg1;
- (void)windowDidLoad;
- (BOOL)inBrowseMode;
- (void)dealloc;
- (id)windowNibName;

@end

@interface TFFKView : TImageBrowserView
{
    TFFKViewController *_controller;
}

@property(nonatomic) TFFKViewController *controller; // @synthesize controller=_controller;
- (id)_viewIdentifier;
- (void)mouseDown:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;

@end

@interface TFFKViewController : TBrowserViewController
{
}

- (void)updateSTFEditorLocation;
- (void)stopEditing:(BOOL)arg1;
- (BOOL)startEditingWithNode:(const struct TFENode *)arg1 renameOp:(id)arg2;
- (void)privateBindSettings;
- (struct CGRect)frameForNode:(const struct TFENode *)arg1;
- (void)openItemAtIndex:(unsigned long long)arg1;
- (unsigned long long)getSelectedNodes:(struct TFENodeVector *)arg1 upTo:(unsigned long long)arg2;
- (unsigned long long)indexForNode:(const struct TFENode *)arg1;
- (struct TFENode)nodeAtIndex:(unsigned long long)arg1;
- (unsigned long long)itemCount;
- (unsigned long long)actualChildCount;
- (unsigned long long)currentPage;
- (unsigned int)viewStyle;
- (void)reloadNodes:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (int)updateNeededForNode:(const struct TFENode *)arg1 property:(unsigned long long)arg2;
- (void)reloadData;
- (BOOL)isGrouping;
- (struct TGroupManager *)groupManager:(const struct TFENode *)arg1;
- (void)folderContentChanged:(const struct FolderContentChangeDecriptor *)arg1;
- (void)setDataSource:(id)arg1;
- (id)firstResponder;
- (void)aboutToTearDown:(id)arg1;
- (id)initWithDataSource:(id)arg1 andViewSettings:(id)arg2 targetPath:(const struct TFENodeVector *)arg3 browserController:(id)arg4;
- (id)imageBrowserView;
- (id)nibName;
- (id)imageBrowser:(id)arg1 accessibilityItemAtIndex:(unsigned long long)arg2 parentItem:(id)arg3;
- (id)imageBrowser:(id)arg1 itemAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfItemsInImageBrowser:(id)arg1;

@end

@interface TDateFormatter : NSObject
{
}

+ (id)fileNameTime:(id)arg1;
+ (id)timeOnly:(id)arg1;
+ (id)relativeFullDateOnly:(id)arg1;
+ (id)fullDateOnly:(id)arg1;
+ (id)fullDateOnly:(id)arg1 relative:(BOOL)arg2;
+ (id)relativeFullDateTime:(id)arg1;
+ (id)fullDateTime:(id)arg1;
+ (id)fullDateTime:(id)arg1 relative:(BOOL)arg2;
+ (id)relativeLongDateTime:(id)arg1;
+ (id)longDateTime:(id)arg1;
+ (id)longDateTime:(id)arg1 relative:(BOOL)arg2;
+ (id)relativeMediumDateOnly:(id)arg1;
+ (id)mediumDateOnly:(id)arg1;
+ (id)mediumDateOnly:(id)arg1 relative:(BOOL)arg2;
+ (id)relativeMediumDateTime:(id)arg1;
+ (id)mediumDateTime:(id)arg1;
+ (id)mediumDateTime:(id)arg1 relative:(BOOL)arg2;
+ (id)relativeShortDateTime:(id)arg1;
+ (id)shortDateTime:(id)arg1;
+ (id)shortDateTime:(id)arg1 relative:(BOOL)arg2;
+ (id)relativeShortDateOnly:(id)arg1;
+ (id)shortDateOnly:(id)arg1;
+ (id)shortDateOnly:(id)arg1 relative:(BOOL)arg2;
+ (void)initDateFormatter;

@end

@interface TDateFormatterController : NSObject
{
    struct TNSRef<NSDateFormatter *> _shortDateTimeFormatter;
    struct TNSRef<NSDateFormatter *> _shortDateTimeFormatterRelative;
    struct TNSRef<NSDateFormatter *> _shortDateOnlyFormatter;
    struct TNSRef<NSDateFormatter *> _shortDateOnlyFormatterRelative;
    struct TNSRef<NSDateFormatter *> _mediumDateTimeFormatter;
    struct TNSRef<NSDateFormatter *> _mediumDateTimeFormatterRelative;
    struct TNSRef<NSDateFormatter *> _mediumDateOnlyFormatter;
    struct TNSRef<NSDateFormatter *> _mediumDateOnlyFormatterRelative;
    struct TNSRef<NSDateFormatter *> _longDateTimeFormatter;
    struct TNSRef<NSDateFormatter *> _longDateTimeFormatterRelative;
    struct TNSRef<NSDateFormatter *> _fullDateTimeFormatter;
    struct TNSRef<NSDateFormatter *> _fullDateTimeFormatterRelative;
    struct TNSRef<NSDateFormatter *> _fullDateOnlyFormatter;
    struct TNSRef<NSDateFormatter *> _fullDateOnlyFormatterRelative;
    struct TNSRef<NSDateFormatter *> _timeOnlyFormatter;
    struct TNSRef<NSDateFormatter *> _fileNameTimeFormatter;
}

+ (id)dateFormatterController;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)reset;
- (id)fileNameTimeFormatter;
- (id)timeOnlyFormatter;
- (id)fullDateOnlyFormatter:(BOOL)arg1;
- (id)fullDateTimeFormatter:(BOOL)arg1;
- (id)longDateTimeFormatter:(BOOL)arg1;
- (id)mediumDateOnlyFormatter:(BOOL)arg1;
- (id)mediumDateTimeFormatter:(BOOL)arg1;
- (id)shortDateTimeFormatter:(BOOL)arg1;
- (id)shortDateOnlyFormatter:(BOOL)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TIconSizeSliderValueTransformer : NSValueTransformer
{
    double _minSliderValue;
    double _maxSliderValue;
    double _minIconSize;
    double _maxIconSize;
    double _offset;
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (void)setOffset:(double)arg1;
- (void)setIconSizeMin:(double)arg1 max:(double)arg2;
- (void)setSliderValueMin:(double)arg1 max:(double)arg2;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;
- (id)init;

@end

@interface TNodeViewSettings : NSObject
{
    double _iconViewIconSize;
    double _iconViewGridSpacing;
    struct CGPoint _iconViewGridOffset;
    double _iconViewTextSize;
    BOOL _iconViewLabelOnBottom;
    BOOL _iconViewShowItemInfo;
    BOOL _iconViewShowIconPreview;
    int _iconViewArrangeBy;
    int _iconViewBackgroundType;
    BOOL _iconViewHideColorWell;
    BOOL _iconViewHideImageWell;
    NSColor *_iconViewBackgroundColor;
    NSImage *_iconViewBackgroundImage;
    struct TFENode _iconViewBackgroundImageNode;
    struct CGPoint _iconViewScrollPosition;
    double _listViewIconSize;
    double _listViewTextSize;
    BOOL _listViewShowDateModified;
    BOOL _listViewShowDateCreated;
    BOOL _listViewShowDateAdded;
    BOOL _listViewShowDateLastOpened;
    BOOL _listViewShowSize;
    BOOL _listViewShowKind;
    BOOL _listViewShowVersion;
    BOOL _listViewShowComments;
    BOOL _listViewShowLabel;
    BOOL _listViewUseRelativeDates;
    BOOL _listViewCalculateAllSizes;
    BOOL _listViewShowIconPreview;
    NSString *_listViewSortColumn;
    BOOL _listViewSortOrderAscending;
    NSMutableDictionary *_listViewColumns;
    struct CGPoint _listViewScrollPosition;
    struct TFENode _node;
    BOOL _browseWithCustomViewStyle;
    unsigned int _customViewStyle;
    NSString *_viewStyle;
    NSString *_arrangeBy;
    NSString *_sortBy;
    struct TString _groupBy;
    struct TIconBrowserSettings *_iconBrowserSettings;
    struct TListBrowserSettings *_listBrowserSettings;
    BOOL _refreshing;
    unsigned long long _refreshingCount;
    BOOL _settingsChanged;
    TListViewSettings *_listViewSettings;
    TIconViewSettings *_iconViewSettings;
}

+ (id)identifierForColumnViewOptionsArrangement:(int)arg1;
+ (int)columnViewArrangementForIdentifier:(id)arg1;
+ (unsigned int)propertyForColumnViewOptionsArrangement:(int)arg1;
+ (int)columnViewArrangementForProperty:(unsigned int)arg1;
+ (unsigned int)propertyForListViewColumnIdentifier:(id)arg1;
+ (id)listViewColumnIdentifierForProperty:(unsigned int)arg1;
+ (unsigned int)propertyForIconViewOptionsArrangement:(int)arg1;
+ (int)iconViewArrangementForIdentifier:(id)arg1;
+ (id)identifierForIconViewOptionsArrangement:(int)arg1;
+ (int)iconViewArrangementForProperty:(unsigned int)arg1;
+ (int)columnViewArrangeByForNode:(struct TFENode)arg1;
+ (id)keyPathsForValuesAffectingCanBeSortedByLabel;
+ (id)keyPathsForValuesAffectingCanBeSortedByKind;
+ (id)keyPathsForValuesAffectingCanBeSortedBySize;
+ (id)keyPathsForValuesAffectingCanBeSortedByDate;
+ (id)keyPathsForValuesAffectingCanBeSortedBySnapToGrid;
+ (id)keyPathsForValuesAffectingCanBeSortedByNone;
+ (id)keyPathsForValuesAffectingIsDesktop;
+ (id)keyPathsForValuesAffectingIsMeetingRoom;
+ (id)keyPathsForValuesAffectingIsSearch;
+ (void)setNodeHasCustomViewStyle:(const struct TFENode *)arg1;
+ (id)settingsForNode:(const struct TFENode *)arg1;
+ (id)keyPathsForValuesAffectingBrowseWithCustomViewStyle;
+ (id)keyPathsForValuesAffectingNodeHasCustomViewStyle;
+ (id)keyPathsForValuesAffectingNodeCustomViewStyleIndex;
+ (id)keyPathsForValuesAffectingCustomViewStyleString;
+ (id)keyPathsForValuesAffectingShowDefaultsButton;
@property(nonatomic) struct CGPoint listViewScrollPosition; // @synthesize listViewScrollPosition=_listViewScrollPosition;
@property(copy, nonatomic) NSMutableDictionary *listViewColumns; // @synthesize listViewColumns=_listViewColumns;
@property(nonatomic) BOOL listViewSortOrderAscending; // @synthesize listViewSortOrderAscending=_listViewSortOrderAscending;
@property(retain, nonatomic) NSString *listViewSortColumn; // @synthesize listViewSortColumn=_listViewSortColumn;
@property(nonatomic) BOOL listViewShowIconPreview; // @synthesize listViewShowIconPreview=_listViewShowIconPreview;
@property(nonatomic) BOOL listViewUseRelativeDates; // @synthesize listViewUseRelativeDates=_listViewUseRelativeDates;
@property(nonatomic) BOOL listViewShowLabel; // @synthesize listViewShowLabel=_listViewShowLabel;
@property(nonatomic) BOOL listViewShowComments; // @synthesize listViewShowComments=_listViewShowComments;
@property(nonatomic) BOOL listViewShowVersion; // @synthesize listViewShowVersion=_listViewShowVersion;
@property(nonatomic) BOOL listViewShowKind; // @synthesize listViewShowKind=_listViewShowKind;
@property(nonatomic) BOOL listViewShowSize; // @synthesize listViewShowSize=_listViewShowSize;
@property(nonatomic) BOOL listViewShowDateAdded; // @synthesize listViewShowDateAdded=_listViewShowDateAdded;
@property(nonatomic) BOOL listViewShowDateLastOpened; // @synthesize listViewShowDateLastOpened=_listViewShowDateLastOpened;
@property(nonatomic) BOOL listViewShowDateCreated; // @synthesize listViewShowDateCreated=_listViewShowDateCreated;
@property(nonatomic) BOOL listViewShowDateModified; // @synthesize listViewShowDateModified=_listViewShowDateModified;
@property(nonatomic) double listViewTextSize; // @synthesize listViewTextSize=_listViewTextSize;
@property(nonatomic) double listViewIconSize; // @synthesize listViewIconSize=_listViewIconSize;
@property(nonatomic) struct CGPoint iconViewScrollPosition; // @synthesize iconViewScrollPosition=_iconViewScrollPosition;
@property(retain, nonatomic) NSImage *iconViewBackgroundImage; // @synthesize iconViewBackgroundImage=_iconViewBackgroundImage;
@property(nonatomic) BOOL iconViewHideImageWell; // @synthesize iconViewHideImageWell=_iconViewHideImageWell;
@property(retain, nonatomic) NSColor *iconViewBackgroundColor; // @synthesize iconViewBackgroundColor=_iconViewBackgroundColor;
@property(nonatomic) BOOL iconViewHideColorWell; // @synthesize iconViewHideColorWell=_iconViewHideColorWell;
@property(nonatomic) int iconViewArrangeBy; // @synthesize iconViewArrangeBy=_iconViewArrangeBy;
@property(nonatomic) BOOL iconViewShowIconPreview; // @synthesize iconViewShowIconPreview=_iconViewShowIconPreview;
@property(nonatomic) BOOL iconViewShowItemInfo; // @synthesize iconViewShowItemInfo=_iconViewShowItemInfo;
@property(nonatomic) BOOL iconViewLabelOnBottom; // @synthesize iconViewLabelOnBottom=_iconViewLabelOnBottom;
@property(nonatomic) double iconViewTextSize; // @synthesize iconViewTextSize=_iconViewTextSize;
@property(nonatomic) struct CGPoint iconViewGridOffset; // @synthesize iconViewGridOffset=_iconViewGridOffset;
@property(nonatomic) double iconViewGridSpacing; // @synthesize iconViewGridSpacing=_iconViewGridSpacing;
@property(nonatomic) double iconViewIconSize; // @synthesize iconViewIconSize=_iconViewIconSize;
@property(retain, nonatomic) NSString *arrangeBy; // @synthesize arrangeBy=_arrangeBy;
@property(nonatomic) BOOL settingsChanged; // @synthesize settingsChanged=_settingsChanged;
@property(nonatomic) BOOL refreshing; // @synthesize refreshing=_refreshing;
@property(retain, nonatomic) NSString *viewStyle; // @synthesize viewStyle=_viewStyle;
@property(readonly, nonatomic) struct TFENode node; // @synthesize node=_node;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) int columnViewArrangeBy; // @dynamic columnViewArrangeBy;
@property(nonatomic) BOOL columnViewPreviewDisclosed; // @dynamic columnViewPreviewDisclosed;
@property(nonatomic) BOOL columnViewShowPreviewColumn; // @dynamic columnViewShowPreviewColumn;
@property(nonatomic) BOOL columnViewShowIconPreview; // @dynamic columnViewShowIconPreview;
@property(nonatomic) BOOL columnViewShowIcons; // @dynamic columnViewShowIcons;
@property(nonatomic) double columnViewPreferredColumnWidth; // @dynamic columnViewPreferredColumnWidth;
@property(nonatomic) double columnViewTextSize; // @dynamic columnViewTextSize;
- (void)saveColumnViewSettings;
@property(readonly, nonatomic) BOOL canBeSortedByLabel; // @dynamic canBeSortedByLabel;
@property(readonly, nonatomic) BOOL canBeSortedByKind; // @dynamic canBeSortedByKind;
@property(readonly, nonatomic) BOOL canBeSortedBySize; // @dynamic canBeSortedBySize;
@property(readonly, nonatomic) BOOL canBeSortedByDateAdded; // @dynamic canBeSortedByDateAdded;
@property(readonly, nonatomic) BOOL canBeSortedByDate; // @dynamic canBeSortedByDate;
@property(readonly, nonatomic) BOOL canBeSortedBySnapToGrid; // @dynamic canBeSortedBySnapToGrid;
@property(readonly, nonatomic) BOOL canBeSortedByNone; // @dynamic canBeSortedByNone;
- (void)closeColorPanel;
- (void)setBackgroundType;
- (int)backgroundType;
- (void)setColumnSortOrderAscending:(id)arg1 ascending:(BOOL)arg2;
- (BOOL)columnSortOrderAscending:(id)arg1;
- (unsigned long long)columnCount;
- (id)columnIDStringAtIndex:(unsigned long long)arg1;
- (id)columnSettings;
- (unsigned long long)indexForColumnByName:(id)arg1;
- (unsigned long long)indexForColumn:(id)arg1;
- (id)columnNamesInOrder;
- (void)setColumnsOrder:(id)arg1;
- (double)widthForColumnByName:(id)arg1;
- (void)addSpotlightListViewColumn:(id)arg1;
- (BOOL)columnVisibility:(id)arg1;
- (void)setColumnVisibility:(id)arg1 visible:(BOOL)arg2;
- (double)widthForColumn:(id)arg1;
- (void)setColumnWidth:(double)arg1 forColumnByName:(id)arg2;
- (void)setColumnWidth:(double)arg1 forColumn:(id)arg2;
@property(nonatomic) BOOL listViewCalculateAllSizes;
- (void)setListViewIconSizeLarge;
- (void)setListViewIconSizeSmall;
- (void)setIconViewBackgroundImageNode:(const struct TFENode *)arg1;
- (const struct TFENode *)iconViewBackgroundImageNode;
@property(nonatomic) int iconViewBackgroundType; // @synthesize iconViewBackgroundType=_iconViewBackgroundType;
@property(readonly, nonatomic) double iconViewMinIconSize;
@property(readonly, nonatomic) double iconViewMaxIconSize;
- (void)useAsDefaults;
- (void)restoreToDefaults;
@property(readonly, nonatomic) BOOL showDefaultsButton;
@property(readonly, nonatomic) BOOL isDesktop; // @dynamic isDesktop;
@property(readonly, nonatomic) BOOL isMeetingRoom; // @dynamic isMeetingRoom;
@property(readonly, nonatomic) BOOL isSearch; // @dynamic isSearch;
@property(nonatomic) NSString *windowName;
@property(nonatomic) NSString *viewStyleForViewOptions;
- (id)validateViewStyle:(id)arg1;
- (void)checkIfUsingDefaultSettings;
- (BOOL)showIconPreviewForViewStyle:(unsigned int)arg1;
- (void)saveListViewSettings;
- (void)saveIconViewSettings;
- (BOOL)isMyDocumentsTarget;
@property(readonly, nonatomic) BOOL isTargetAnApplicationFolder;
@property(readonly, nonatomic) BOOL nodeCanSort;
@property(readonly, nonatomic) BOOL sortByNoneSupported;
@property(readonly, nonatomic) BOOL nodeCanArrangeByLabel;
@property(readonly, nonatomic) BOOL nodeCanArrangeBySize;
@property(readonly, nonatomic) BOOL nodeCanArrangeByDateCreated;
@property(readonly, nonatomic) BOOL nodeCanArrangeByDateModified;
@property(readonly, nonatomic) BOOL nodeCanArrangeByDateAdded;
@property(readonly, nonatomic) BOOL nodeCanArrangeByDateLastOpened;
@property(readonly, nonatomic) BOOL nodeCanArrangeByAppCategory;
@property(readonly, nonatomic) BOOL nodeCanArrangeByApplication;
@property(readonly, nonatomic) BOOL nodeCanArrangeByKind;
@property(readonly, nonatomic) BOOL nodeCanArrangeByName;
@property(retain, nonatomic) NSString *sortBy; // @synthesize sortBy=_sortBy;
- (BOOL)isValidSortBy:(id)arg1;
@property(retain, nonatomic) NSString *groupBy;
- (BOOL)isValidGrouping:(id)arg1;
@property(readonly, nonatomic) BOOL isGrouping;
@property(readonly, nonatomic) BOOL fxShowCustomViewStylePopup;
@property(nonatomic) int nodeCustomViewStyleIndex;
@property(nonatomic) BOOL nodeCanHaveCustomViewStyle;
@property(nonatomic) BOOL nodeHasCustomViewStyle;
@property(readonly, nonatomic) NSString *customViewStyleString;
@property(nonatomic) unsigned int customViewStyle; // @synthesize customViewStyle=_customViewStyle;
@property(nonatomic) BOOL browseWithCustomViewStyle; // @synthesize browseWithCustomViewStyle=_browseWithCustomViewStyle;
- (struct TListBrowserSettings *)listBrowserSettings;
- (struct TIconBrowserSettings *)iconBrowserSettings;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)initWithNode:(const struct TFENode *)arg1;
- (void)refreshSettings:(BOOL)arg1;
- (void)refreshDesktopSettings;
- (void)refreshColumnViewSettings;
- (void)refreshListViewSettings;
- (void)refreshIconViewSettings;
- (void)saveBrowseWithCustomViewStyle:(BOOL)arg1;
- (BOOL)loadBrowseWithCustomViewStyle;
- (void)saveCustomViewStyle:(unsigned int)arg1;
- (unsigned int)loadCustomViewStyle;

@end

@interface TBackupSnapshotNodeViewSettings : TNodeViewSettings
{
}

+ (id)settingsForNode:(const struct TFENode *)arg1;
- (void)saveIconViewSettings;
- (void)saveListViewSettings;

@end

@interface TStandardViewSettings : NSObject
{
    NSMutableDictionary *_settings;
    TIconViewSettings *_iconViewSettings;
    TListViewSettings *_listViewSettings;
}

+ (id)iconViewSettingsFromDefaultsForNode:(const struct TFENode *)arg1;
+ (id)listViewSettingsFromDefaults;
+ (void)saveStandardViewSettingsForNewUser;
+ (id)standardSearchViewSettings;
+ (id)standardViewSettings;
@property(retain, nonatomic) TListViewSettings *listViewSettings; // @synthesize listViewSettings=_listViewSettings;
@property(retain, nonatomic) TIconViewSettings *iconViewSettings; // @synthesize iconViewSettings=_iconViewSettings;
- (void)save;
- (void)dealloc;
- (id)initForRegID:(int)arg1;

@end

@interface TViewOptionsSettingsController : NSObject
{
    TNodeViewSettings *_targetedViewOptionsSettings;
    NSString *_viewStyleForViewOptions;
}

+ (void)tearDownSharedController;
+ (id)sharedController;
@property(nonatomic) NSString *viewStyleForViewOptions; // @synthesize viewStyleForViewOptions=_viewStyleForViewOptions;
@property(retain, nonatomic) TNodeViewSettings *targetedViewOptionsSettings; // @synthesize targetedViewOptionsSettings=_targetedViewOptionsSettings;
- (void)dealloc;
- (id)init;

@end

@interface TArrangeByMenuController : NSObject
{
    NSMenu *_arrangeByMenu;
    NSMenu *_sortByMenu;
    NSMenuItem *_selectedGroupMenuItem;
    NSMenuItem *_selectedSortMenuItem;
    long long _selectedGroupByTag;
    long long _selectedSortByTag;
    struct TNSRef<NSString *> _groupBy;
    struct TNSRef<NSString *> _sortBy;
    TViewOptionsSettingsController *_viewOptionsSettingsController;
    TNodeViewSettings *_viewSettings;
    struct TNSRef<NSArray *> _topLevelObjects;
}

@property(nonatomic) long long selectedSortByTag; // @synthesize selectedSortByTag=_selectedSortByTag;
@property(nonatomic) long long selectedGroupByTag; // @synthesize selectedGroupByTag=_selectedGroupByTag;
@property(retain, nonatomic) TNodeViewSettings *viewSettings; // @synthesize viewSettings=_viewSettings;
@property(nonatomic) TViewOptionsSettingsController *viewOptionsSettingsController; // @synthesize viewOptionsSettingsController=_viewOptionsSettingsController;
@property(readonly, nonatomic) NSMenu *sortByMenu; // @synthesize sortByMenu=_sortByMenu;
@property(readonly, nonatomic) NSMenu *arrangeByMenu; // @synthesize arrangeByMenu=_arrangeByMenu;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)removeCommandKeyEquivalents;
- (void)cmdSortByLabel:(id)arg1;
- (void)cmdSortBySize:(id)arg1;
- (void)cmdSortByDateCreated:(id)arg1;
- (void)cmdSortByDateModified:(id)arg1;
- (void)cmdSortByDateAdded:(id)arg1;
- (void)cmdSortByDateLastOpened:(id)arg1;
- (void)cmdSortByKind:(id)arg1;
- (void)cmdSortByName:(id)arg1;
- (void)cmdSortBySnapToGrid:(id)arg1;
- (void)cmdSortByNone:(id)arg1;
- (void)setSortBy:(id)arg1 menuItem:(id)arg2;
- (void)cmdArrangeByNone:(id)arg1;
- (void)cmdArrangeByLabel:(id)arg1;
- (void)cmdArrangeBySize:(id)arg1;
- (void)cmdArrangeByDateCreated:(id)arg1;
- (void)cmdArrangeByDateModified:(id)arg1;
- (void)cmdArrangeByDateAdded:(id)arg1;
- (void)cmdArrangeByDateLastOpened:(id)arg1;
- (void)cmdArrangeByApplicationCategory:(id)arg1;
- (void)cmdArrangeByApplication:(id)arg1;
- (void)cmdArrangeByKind:(id)arg1;
- (void)cmdArrangeByName:(id)arg1;
- (void)setGroupBy:(id)arg1 menuItem:(id)arg2;
@property(readonly, nonatomic) BOOL showToolbarIcon;
@property(readonly, nonatomic) BOOL showApplicationCategory;
@property(retain, nonatomic) NSString *sortBy;
@property(retain, nonatomic) NSString *groupBy;
- (void)finalize;
- (void)aboutToTearDown;
- (void)dealloc;
- (id)initWithViewSettings:(id)arg1;
- (unsigned long long)menuTagForSortBy:(id)arg1;
- (unsigned long long)menuTagForGroupBy:(id)arg1;

@end

@interface TIconSizeLabelTransformer : NSValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface TListViewIconSizeTransformer : NSValueTransformer
{
}

- (BOOL)allowsReverseTransformation;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface TViewOptionsWindowController : TScriptableWindowController <NSWindowDelegate, NSTabViewDelegate>
{
    NSButton *_defaultsButton;
    NSSlider *_iconViewIconSizeSlider;
    NSSlider *_iconViewGridSpacingSlider;
    NSTabView *_tabView;
    NSView *_contentView;
    NSPopUpButton *_arrangeByButton;
    NSPopUpButton *_sortByButton;
    TViewOptionsSettingsController *_viewOptionsSettingsController;
    TArrangeByMenuController *_arrangeByMenuController;
    long long _selectedGroupByTag;
    long long _selectedSortByTag;
    BOOL _optionKeyDown;
    double _verticalPositionForDesktop;
    double _verticalPositionForStandardViews;
    struct TNSRef<NSImage *> _genericAppIconImage;
}

+ (BOOL)isViewOptionsVisible;
+ (void)toggleWindowVisibility;
+ (void)show;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (void)initialize;
@property(nonatomic) long long selectedSortByTag; // @synthesize selectedSortByTag=_selectedSortByTag;
@property(nonatomic) long long selectedGroupByTag; // @synthesize selectedGroupByTag=_selectedGroupByTag;
@property(nonatomic) BOOL optionKeyDown; // @synthesize optionKeyDown=_optionKeyDown;
@property(readonly, nonatomic) TArrangeByMenuController *arrangeByMenuController; // @synthesize arrangeByMenuController=_arrangeByMenuController;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)flagsDidChange:(id)arg1;
- (void)setBackgroundImageNode:(const struct TFENode *)arg1;
@property(readonly, nonatomic) NSImage *genericAppIconImage; // @dynamic genericAppIconImage;
- (void)windowWillClose:(id)arg1;
- (void)windowDidMove:(id)arg1;
@property(readonly, nonatomic) TViewOptionsSettingsController *viewOptionsSettingsController; // @dynamic viewOptionsSettingsController;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)windowNibName;
- (void)windowDidLoad;
- (void)iconViewGridSpacingTrackingStopped:(id)arg1;
- (void)iconViewGridSpacingTrackingStarted:(id)arg1;
- (void)iconViewIconSizeTrackingStopped:(id)arg1;
- (void)iconViewIconSizeTrackingStarted:(id)arg1;

@end

@interface TCustomViewStyleTransformer : NSValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface TBrowseWithCustomViewStyleTransformer : NSValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface TBrowseInHelpTagTransformer : NSValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface TViewOptionsWindow : NSPanel
{
    TViewOptionsWindowController *_controller;
}

@end

@interface MDUserSearch : NSObject
{
    NSString *_filter;
    NSArray *_scope;
    NSArray *_slices;
    NSNumber *_searchSystemFiles;
    NSNumber *_fileNameOnly;
    NSNumber *_searchNonFinderFiles;
}

@property(retain) NSArray *slices; // @synthesize slices=_slices;
@property(retain) NSNumber *searchNonFinderFiles; // @synthesize searchNonFinderFiles=_searchNonFinderFiles;
@property(retain) NSNumber *fileNameOnly; // @synthesize fileNameOnly=_fileNameOnly;
@property(retain) NSNumber *searchSystemFiles; // @synthesize searchSystemFiles=_searchSystemFiles;
@property(retain) NSArray *scope; // @synthesize scope=_scope;
@property(retain) NSString *filter; // @synthesize filter=_filter;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface TPlusMinusButtonCell : NSButtonCell
{
}

- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface TSlicesInterpreter : NSObject
{
}

+ (id)sharedSlicesInterpreter;
- (id)searchForRules:(id)arg1;
- (id)queryStringForRules:(id)arg1 searchSystemFiles:(id *)arg2 fileNameOnly:(id *)arg3 searchNonFinderFiles:(id *)arg4;
- (id)queryDictionaryForRow:(id)arg1 searchSystemFiles:(id *)arg2 fileNameOnly:(id *)arg3 searchNonFinderFiles:(id *)arg4;
- (void)queryStringDictionaryForCriterion:(id)arg1 withDisplayValue:(id)arg2 intoDictionary:(id)arg3;

@end

@interface TFileSizeFormatter : NSNumberFormatter
{
    NSString *_invalidSizeStr;
    unsigned long long _options;
}

+ (id)fileSizeFormatter;
@property(retain) NSString *invalidSizeStr; // @synthesize invalidSizeStr=_invalidSizeStr;
- (id)numberFromString:(id)arg1;
- (id)stringForObjectValue:(id)arg1;
@property BOOL specialZeroHandling; // @dynamic specialZeroHandling;
@property BOOL sizeInBytes; // @dynamic sizeInBytes;
@property BOOL stableWidth; // @dynamic stableWidth;
- (void)dealloc;
- (void)initCommon;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface TMiniFileSizeFormatter : TFileSizeFormatter
{
}

- (void)initCommon;

@end

@interface TTitleField : TTextField
{
    NSView *_masterView;
    TLayoutBinder *_layoutBinder;
}

@property(retain, nonatomic) NSView *masterView; // @synthesize masterView=_masterView;
- (void)adjustTitleWidth:(double)arg1 masterWidth:(double)arg2;
- (void)adjustTitleWidth:(double)arg1;
- (void)setUpLayoutBinder;
- (void)viewDidMoveToSuperview;
- (void)finalize;
- (void)dealloc;
- (void)initCommon;

@end

@interface TButton : NSButton
{
    struct CGSize _maxSize;
    struct CGSize _minSize;
    BOOL _acceptsFirstMouse;
}

+ (Class)cellClass;
@property(nonatomic) struct CGSize minSize; // @synthesize minSize=_minSize;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=_maxSize;
- (id).cxx_construct;
- (void)drawRect:(struct CGRect)arg1;
- (void)_windowChangedKeyState;
- (void)setBoundsSize:(struct CGSize)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (unsigned long long)controlSize;
- (void)setControlSize:(unsigned long long)arg1;
- (id)copyButton;
- (BOOL)acceptsFirstMouse:(id)arg1;
@property BOOL acceptsFirstMouse; // @dynamic acceptsFirstMouse;
- (void)awakeCommon;
- (void)initCommon;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TEditTextField : TTextField
{
    unsigned long long _maxChars;
}

@property(nonatomic) unsigned long long maxChars; // @synthesize maxChars=_maxChars;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)applySettingsFrom:(id)arg1;
- (void)initCommon;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface TViewController : NSViewController
{
    BOOL _callingLoadView;
    BOOL _loadingFromNib;
    BOOL _isViewLoaded;
}

@property(readonly) BOOL isViewLoaded; // @synthesize isViewLoaded=_isViewLoaded;
- (BOOL)applyExtraKeyboardShortcuts:(id)arg1;
- (id)viewNoLoad;
- (void)viewLoaded;
- (void)setView:(id)arg1;
- (void)loadView;
- (id)nibBundle;
- (void)awakeFromNib;
- (void)initCommon;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithNibName:(id)arg1;

@end

@interface TPopUpButton : NSPopUpButton
{
    BOOL _acceptsFirstMouse;
}

@property BOOL acceptsFirstMouse; // @synthesize acceptsFirstMouse=_acceptsFirstMouse;
- (void)drawRect:(struct CGRect)arg1;
- (void)_windowChangedKeyState;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TPopUpButtonCell : NSPopUpButtonCell
{
}

@end

@interface TPrivilegesOperation : IAsyncNodeOperation
{
}

- (int)cancelOperation;
- (int)startSuboperation:(unsigned int)arg1 fileSecurityRef:(struct __FSFileSecurity *)arg2;
- (void)configureOperationRecord:(struct TOperationRecord *)arg1 forNode:(const struct TFENode *)arg2;

@end

@interface TPreviewWindowController : NSObject <QLPreviewPanelDataSource, QLPreviewPanelDelegate, FIAliasResolution, TCoalescingNodeObserverProtocol>
{
    struct TFENodeVector _nodes;
    id <TQLPreviewWindowControllerProtocol> _activeViewController;
    unsigned int _avcRespondsToFlags;
    struct TNSRef<QLPreviewPanel *> _previewPanel;
    struct TCoalescingNodeObserverCocoaBridge *_nodeObserver;
    struct TQLPreviewQTEjectHelper *_ejectHelper;
    BOOL _canZoom;
}

+ (void)previewPanelWillClose:(id)arg1;
+ (id)quickLookMenuItemTitleForNodes:(const struct TFENodeVector *)arg1 actualCount:(unsigned long long)arg2 fullScreen:(BOOL)arg3;
+ (BOOL)quickLookShouldOpenFullscreenWithEvent:(id)arg1;
+ (BOOL)isActiveViewController:(id)arg1;
+ (BOOL)panelIsShowing;
+ (BOOL)panelExists;
+ (id)controller;
+ (void)initialize;
@property(nonatomic) id <TQLPreviewWindowControllerProtocol> activeViewController; // @synthesize activeViewController=_activeViewController;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)previewPanel:(id)arg1 handleEvent:(id)arg2;
- (id)previewPanel:(id)arg1 sharedPreviewViewForPreviewItem:(id)arg2;
- (BOOL)previewPanel:(id)arg1 shouldShowOpenButtonForItem:(id)arg2;
- (BOOL)previewPanel:(id)arg1 shouldOpenURL:(id)arg2 forPreviewItem:(id)arg3;
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (void)alias:(const struct TFENode *)arg1 resolvedAs:(const struct TFENode *)arg2 temporaryNode:(const struct TFENode *)arg3;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (void)updateDisplayedDates;
- (void)refreshCurrentPreviewNode;
- (void)reloadData;
- (void)updatePreviewPanel;
- (void)nodesGoingAway:(const struct TFENodeVector *)arg1;
- (void)nodesDeleted:(const struct TFENodeVector *)arg1 fromObservedNode:(const struct TFENode *)arg2;
- (void)nodesChanged:(const vector_614ab7ad *)arg1 inObservedNode:(const struct TFENode *)arg2;
- (void)removeNodes:(const struct TFENodeVector *)arg1;
- (void)setNodes:(const struct TFENodeVector *)arg1;
- (const struct TFENodeVector *)nodes;
- (void)setCanZoom:(BOOL)arg1;
- (void)hide;
- (void)endPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (void)showFullScreen:(BOOL)arg1;
- (void)updatePanelConfigurationForBackupBrowser:(BOOL)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface TStatusBar : TView
{
    TStatusBarController *_controller;
    BOOL _location;
    BOOL _isInMetalWindow;
    BOOL _drawsBottomBorder;
}

@property(nonatomic) BOOL drawsBottomBorder; // @synthesize drawsBottomBorder=_drawsBottomBorder;
@property(nonatomic) BOOL isInMetalWindow; // @synthesize isInMetalWindow=_isInMetalWindow;
@property(nonatomic) BOOL location; // @synthesize location=_location;
- (void)setFrameSize:(struct CGSize)arg1;
- (BOOL)preservesContentDuringLiveResize;
- (void)drawRect:(struct CGRect)arg1;
- (void)viewDidMoveToWindow;
- (void)initCommon;

@end

@interface TRefreshButton : TButton
{
    BOOL _isPBFSizingInProgress;
}

@property(nonatomic) BOOL isPBFSizingInProgress; // @synthesize isPBFSizingInProgress=_isPBFSizingInProgress;
- (void)initCommon;

@end

@interface TStatusTextFldController : TViewController
{
    TStatusBarController *_statusBarController;
    NSDictionary *_statusTextFldAttributes;
    NSString *_searchingOnlyText;
    NSString *_nodeCountAndFreeSpaceText;
    NSString *_freeSpaceOnlyText;
    NSString *_nodeCountOnlyText;
    double _searchingOnlyTextWidth;
    double _nodeCountAndFreeSpaceTextWidth;
    double _freeSpaceOnlyTextWidth;
    double _nodeCountOnlyTextWidth;
    unsigned long long _nodeCount;
    unsigned long long _selectedNodesCount;
}

@property(retain, nonatomic) NSString *nodeCountOnlyText; // @synthesize nodeCountOnlyText=_nodeCountOnlyText;
@property(retain, nonatomic) NSString *freeSpaceOnlyText; // @synthesize freeSpaceOnlyText=_freeSpaceOnlyText;
@property(retain, nonatomic) NSString *nodeCountAndFreeSpaceText; // @synthesize nodeCountAndFreeSpaceText=_nodeCountAndFreeSpaceText;
@property(retain, nonatomic) NSString *searchingOnlyText; // @synthesize searchingOnlyText=_searchingOnlyText;
@property(nonatomic) unsigned long long selectedNodesCount; // @synthesize selectedNodesCount=_selectedNodesCount;
@property(nonatomic) unsigned long long nodeCount; // @synthesize nodeCount=_nodeCount;
- (void)update:(BOOL)arg1;
- (id)statusTextForType:(int)arg1 outWidth:(double *)arg2;
- (id)buildStatusTextForType:(int)arg1 searchingText:(const struct TString *)arg2 nodeCountText:(const struct TString *)arg3 freeSpaceText:(const struct TString *)arg4;
- (struct TString)freeSpaceNumberText;
- (struct TString)nodeCountText;
- (struct TString)searchingText;
- (void)viewDidMoveToWindow;
- (void)awakeFromNib;
- (void)aboutToTearDown:(id)arg1;
- (void)initCommon;

@end

@interface TStatusBarController : TViewController <TCoalescingNodeObserverProtocol, TNotifierReceiverProtocol>
{
    NSImageView *_noWriteImageView;
    BOOL _targetIsNotWritable;
    TStatusTextFldController *_statusTextFldController;
    NSProgressIndicator *_busyIndicator;
    BOOL _browserIsBusy;
    unsigned long long _busyLevel;
    double _busyIndicatorRefreshPBFButtonGap;
    TRefreshButton *_refreshPBFButton;
    BOOL _targetIsPBF;
    double _refreshPBFButtonIconSizeSliderGap;
    NSSlider *_iconSizeSlider;
    BOOL _showIconSizeSlider;
    struct TFENode _targetNode;
    struct TFENode _targetVolume;
    struct TFENode _targetPBF;
    unsigned long long _pbfSize;
    unsigned long long _pbfDeviceCapacity;
    struct TPBFSizingThread *_pbfSizingThread;
    struct TPBFSizingThreadCallbackCocoaBridge *_pbfSizingThreadBridge;
    set_55a3e8f7 _nodesAddedToPBF;
    BOOL _isPBFSizingInProgress;
    BOOL _isSearchInProgress;
    BOOL _isPopulationDone;
    NSString *_viewStyle;
    struct TCoalescingNodeObserverCocoaBridge *_nodeObserver;
    TBrowserWindowController *_browserWindowController;
    struct CGRect _previousStatusBarFrame;
}

+ (struct CGRect)frameForMode:(BOOL)arg1 inFrame:(struct CGRect)arg2;
+ (double)defaultHeightForMode:(BOOL)arg1;
+ (void)initialize;
@property(retain, nonatomic) TStatusTextFldController *statusTextFldController; // @synthesize statusTextFldController=_statusTextFldController;
@property(retain, nonatomic) NSString *viewStyle; // @synthesize viewStyle=_viewStyle;
@property(readonly, nonatomic) BOOL isPopulationDone; // @synthesize isPopulationDone=_isPopulationDone;
@property(nonatomic) BOOL isPBFSizingInProgress; // @synthesize isPBFSizingInProgress=_isPBFSizingInProgress;
@property(nonatomic) BOOL showIconSizeSlider; // @synthesize showIconSizeSlider=_showIconSizeSlider;
@property(nonatomic) BOOL targetIsPBF; // @synthesize targetIsPBF=_targetIsPBF;
@property(nonatomic) BOOL browserIsBusy; // @synthesize browserIsBusy=_browserIsBusy;
@property(nonatomic) BOOL targetIsNotWritable; // @synthesize targetIsNotWritable=_targetIsNotWritable;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct TNodeBrowser *)nodeBrowser;
- (id)windowController;
- (void)unbindViewSettings;
- (void)bindViewSettings;
@property(readonly, nonatomic) TNodeViewSettings *viewSettings;
- (void)updateControlsLayout;
- (void)updateControls;
- (void)updateTextLayout;
- (void)updateText:(BOOL)arg1;
- (void)updateImageViewsLayout;
- (void)updateImageViews;
- (double)availableWidth;
- (void)statusBarFrameChanged:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)stopSpinner;
- (void)startSpinner;
- (BOOL)isSearchInProgress;
- (BOOL)isShowingSearchStatus;
- (BOOL)isShowingPBFStatus;
- (unsigned long long)pbfDeviceCapacity;
- (unsigned long long)pbfSize;
- (const struct TFENode *)targetPBF;
- (const struct TFENode *)targetVolume;
- (const struct TFENode *)targetNode;
- (void)iconViewIconSizeTrackingStopped:(id)arg1;
- (void)iconViewIconSizeTrackingStarted:(id)arg1;
- (BOOL)shouldShowSliderForViewStyle:(id)arg1;
- (void)setLocation:(BOOL)arg1;
- (void)notifierPropertyChanged:(unsigned int)arg1;
- (void)nodesDeleted:(const struct TFENodeVector *)arg1 fromObservedNode:(const struct TFENode *)arg2;
- (void)nodesChanged:(const vector_614ab7ad *)arg1 inObservedNode:(const struct TFENode *)arg2;
- (void)nodesAdded:(const struct TFENodeVector *)arg1 toObservedNode:(const struct TFENode *)arg2;
- (void)pbfRefreshButtonClicked:(id)arg1;
- (void)cancelPBFCalculation;
- (void)pbfSizingCompletionCallback:(unsigned long long)arg1;
- (void)calculatePBFSpace;
- (double)configureForMode:(BOOL)arg1 inFrame:(struct CGRect)arg2;
- (void)setIsInMetalWindow:(BOOL)arg1;
- (void)setTarget:(const struct TFENode *)arg1;
- (void)loadView;
- (id)nibName;
- (void)aboutToTearDown:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 viewStyle:(id)arg2 browseMode:(BOOL)arg3 controller:(id)arg4;
- (id)statusBar;

@end

@interface TIconViewScrollView : TScrollView
{
    double _verticalScrollerGap;
}

- (void)tile;
- (BOOL)setVerticalScrollerGap:(double)arg1;

@end

@interface TMeetingRoomIconViewCell : IKFinderCell
{
}

- (BOOL)hitTestWithPoint:(struct CGPoint)arg1;
- (BOOL)shouldAppearSelected;
- (void)drawImage:(id)arg1;
- (id)subtitleString;
- (void)drawTwoLineTitleSelectionInRect:(struct CGRect)arg1;
- (void)drawSingleLineTitleSelectionInRect:(struct CGRect)arg1;
- (void)drawSelection;
- (id)airDropPerson;
- (BOOL)inMeetingRoom;
- (id)layerForType:(id)arg1;
- (id)iconView;

@end

@interface TIconView : TImageBrowserView <TShrinkToFitDelegateProtocol, NSDraggingSource, TDragImageProtocol, NSUserInterfaceItemIdentification>
{
    TIconViewController *_controller;
    TShrinkToFitController *_stfController;
    BOOL _startEditingOnMouseUp;
    BOOL _viewIsReloadingData;
    BOOL _isDrawingInDragImage;
    BOOL _mouseDownInMoreButton;
    BOOL _singleClickOpensNode;
    BOOL _clearBackBufferOnDraw;
    BOOL _meetingRoomAutoScrollAllowed;
    BOOL _trackingCancel;
    long long _currentDropIndex;
    unsigned long long _editedCellIndex;
    unsigned long long _selectionCountBeforeReloadingData;
    unsigned long long _disabledTrackingIndex;
    struct unordered_map<TFENode, TNSRef<TInlineProgressHostLayer *>, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TInlineProgressHostLayer *>>>> _nodeToInlineProgressLayerMap;
    struct TFENode _alwaysVisibleNode;
    struct TFENode _mouseDownNode;
    struct TFENode _mouseDownOnMeetingRoomNode;
    BOOL _airDropLastRenderedInCircleLayout;
    BOOL _adjustingAirDropDocumentSize;
    unsigned long long _airDropLastRenderedCellsPerRow;
    unsigned long long _defaultAnimationMask;
    struct TNSRef<TMeetingRoomInfoViewController *> _meetingRoomInfoViewController;
    struct TNSRef<TLayer *> _airDropCircleLayer;
    struct TNSRef<TLayer *> _airDropInfoLayer;
    struct TNSRef<TLayer *> _airDropPocketLayer;
    BOOL _inMeetingRoom;
    BOOL _airDropIsInArcMode;
    BOOL _airDropArcModeStabilized;
    struct map<TFENode, TNSRef<TAirDropPerson *>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TAirDropPerson *>>>> _airDropPeople;
    struct TNSRef<TAirDropLayoutController *> _airDropLayout;
    struct CGPoint _lastMouseDraggedLocation;
    struct TNSRef<NSDate *> _dateOfLastMouseDraggedEvent;
}

@property(nonatomic) BOOL airDropIsInArcMode; // @synthesize airDropIsInArcMode=_airDropIsInArcMode;
@property(nonatomic) unsigned long long disabledTrackingIndex; // @synthesize disabledTrackingIndex=_disabledTrackingIndex;
@property(nonatomic) BOOL drawingInDragImage; // @synthesize drawingInDragImage=_isDrawingInDragImage;
@property(nonatomic) BOOL singleClickOpensNode; // @synthesize singleClickOpensNode=_singleClickOpensNode;
@property(readonly, nonatomic) TIconViewController *controller; // @synthesize controller=_controller;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)handleAXSelectionChange;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityArrayAttributeValues:(id)arg1 index:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;
- (unsigned long long)accessibilityIndexOfChild:(id)arg1;
- (unsigned long long)accessibilityArrayAttributeCount:(id)arg1;
- (id)axSelectedChildren;
- (id)axChildren;
- (id)draggedImageWithEvent:(id)arg1 countBadge:(int)arg2 hotPoint:(struct CGPoint *)arg3;
- (BOOL)hasFocus;
- (void)shrinkToFitTextViewAboutToClose;
- (void)shrinkToFitTextViewEditingComplete:(id)arg1;
- (BOOL)shrinkToFitTextViewAboutToOpen;
- (BOOL)editCellTitleAtIndex:(unsigned long long)arg1 withEvent:(id)arg2 select:(BOOL)arg3;
- (id)stfEditorFontForCellAtIndex:(unsigned long long)arg1;
- (unsigned long long)stfEditorTextAlignmentForCellAtIndex:(unsigned long long)arg1;
- (struct CGRect)maxSTFEditorFrameForCellAtIndex:(unsigned long long)arg1;
- (long long)finderGroupIndexAtCellIndex:(long long)arg1;
- (unsigned long long)editingIndex;
- (void)stopEditing:(BOOL)arg1;
- (BOOL)startEditingWithNode:(const struct TFENode *)arg1 renameOp:(id)arg2 afterDelay:(BOOL)arg3;
- (BOOL)ignoreModifierKeysForDraggingSession:(id)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)updateDraggingItemsForDrag:(id)arg1;
- (int)nextIndexInGridLayoutWithDirectionKey:(unsigned short)arg1 currentIndex:(long long)arg2;
- (BOOL)isDragImageOpaque;
- (int)defaultHeightOfInfoSpaceWithCurrentViewOptions;
- (void)keyDown:(id)arg1;
- (id)inputContext;
- (BOOL)_typeSelectInterpretKeyEvent:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (double)timeSinceLastMouseMoved;
- (BOOL)autoscrollWithLocalPoint:(struct CGPoint)arg1 andSensitiveMargin:(float)arg2;
- (void)rightMouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawBackgroundOverhangInRect:(struct CGRect)arg1;
- (void)viewDidEndLiveResize;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)invalidateBackBuffer;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (_Bool)shouldDrawCell:(id)arg1;
- (void)drawAirDropArcs;
- (void)drawAirDropCircles;
- (void)updateAirDropPeople;
- (void)updateAirDropPocketLayers;
- (void)airDropPersonAnimationCompleted;
- (void)updateAirDropPersonForNode:(const struct TFENode *)arg1;
- (id)airDropPersonForNode:(const struct TFENode *)arg1;
- (void)tearDownAirDropPeople;
- (void)drawVisibleCells:(struct CGRect)arg1;
- (void)viewWillDraw;
- (BOOL)disableTwoLineTitles;
- (double)airDropInfoAreaHeight;
- (struct CGRect)airDropGlobalVisibleContentRect;
- (struct CGRect)airDropVisibleContentRect;
- (BOOL)airDropShowPocketLayer;
- (BOOL)airDropOverMeAreaWithPocket:(struct CGPoint)arg1;
- (struct CGPoint)meCenterPoint;
- (struct CGRect)meetingRoomMeFrame;
- (id)meetingRoomInfoView;
- (id)airDropLayout;
- (void)configureForMeetingRoom:(BOOL)arg1 infoViewController:(id)arg2;
- (BOOL)shouldAnimateAppearingAndDisappearingDatasourceItems;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)adjustDocumentSize;
- (void)adjustScroller;
- (void)caNeedsDisplay;
- (void)displayIfNeededForLiveResize;
- (void)scheduleDisplayIfNeededForLiveResize;
- (void)scrollViewFrameDidChange:(id)arg1;
- (BOOL)inMeetingRoom;
- (void)updateAirDropLayout;
- (void)airDropSwitchToArcModeStabilized;
- (id)newCellForRepresentedItem:(id)arg1;
- (Class)iconViewClassForCellClass:(Class)arg1;
- (Class)iconViewSubClassOfClass:(Class)arg1;
- (id)findOrCreateProgressLayerForCell:(id)arg1;
- (id)valueForKey:(id)arg1;
- (void)setAlwaysVisibleNode:(const struct TFENode *)arg1;
- (void)ensureAlwaysVisibleNodeInView;
- (void)scrollAlwaysVisibleNodeToVisible;
- (void)scrollAlwaysVisibleNodeToVisibleUsingCenterPoint:(BOOL)arg1;
- (void)updateScrollerForAlwaysVisibleNode;
- (id)newCellForRepresentedItem:(id)arg1 useSubClass:(BOOL)arg2;
- (void)quickLookWithEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (long long)indexOfItemAtPoint:(struct CGPoint)arg1;
- (void)browserDidScroll;
- (void)scrollWheel:(id)arg1;
- (void)updateSTFEditorLocation;
- (void)scrollSTFEditorIntoView;
- (void)dragImage:(id)arg1 at:(struct CGPoint)arg2 offset:(struct CGSize)arg3 event:(id)arg4 pasteboard:(id)arg5 source:(id)arg6 slideBack:(BOOL)arg7;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)setDropIndex:(long long)arg1 dropOperation:(int)arg2;
- (void)updateLastMouseDraggedDateAtLocation:(struct CGPoint)arg1;
- (long long)currentDropIndex;
- (BOOL)respondsToSelector:(SEL)arg1;
- (unsigned long long)selectionCountBeforeReloadingData;
- (BOOL)isReloadingData;
- (void)reloadData;
- (BOOL)shouldPreserveVisibleRangeWhileZooming;
- (id)_viewIdentifier;
- (void)setDelegate:(id)arg1;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(copy) NSString *identifier;

@end

@interface TAccessibilityUIElement : NSObject
{
    unsigned long long _index;
    NSString *_title;
    struct TNSRef<TIconView *> _parent;
    struct _NSRange _range;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (struct CGRect)axFrame;
- (id)axHelp;
- (id)axTitle;
- (id)axRole;
- (id)title;
@property(retain) TIconView *parent;
- (unsigned long long)index;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithIndex:(unsigned long long)arg1 groupInfo:(id)arg2 parent:(id)arg3;

@end

@interface ImageListUIElement : TAccessibilityUIElement
{
}

- (id)description;
- (unsigned long long)accessibilityIndexOfChild:(id)arg1;
- (unsigned long long)accessibilityArrayAttributeCount:(id)arg1;
- (id)accessibilityArrayAttributeValues:(id)arg1 index:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)axSelectedChildren;
- (id)axVisibleChildren;
- (id)axChildren;
- (struct CGRect)axFrame;
- (id)axRole;
- (BOOL)containsIndexSet:(id)arg1;
- (BOOL)accessibilityShouldUseUniqueId;
- (void)dealloc;

@end

@interface ShowButtonUIElement : TAccessibilityUIElement
{
}

- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (BOOL)accessibilityIsIgnored;
- (struct CGRect)axFrame;
- (id)axHelp;
- (id)axTitle;
- (id)axRole;

@end

@interface TIconViewCell : IKImageBrowserCell
{
    IKImageWrapper *_titleImage;
    BOOL _twoLine;
    CDStruct_b8373011 _titleSettings;
}

+ (struct CGSize)cellSizeForIconSize:(double)arg1 labelOnBottom:(BOOL)arg2 gridSpacing:(double)arg3 titleAttrs:(id)arg4 subTitleAttrs:(id)arg5;
- (id).cxx_construct;
- (void)drawTitle;
- (void)invalidate;
- (id)titleImage;
- (BOOL)titleImageStillValid:(CDStruct_b8373011)arg1;
- (CDStruct_b8373011)currentTitleImageSettings;
- (id)constructTitleImage;
- (void)drawLabel:(struct CGContext *)arg1 fillRect:(struct CGRect)arg2 bounds:(struct CGRect)arg3 firstLine:(struct CGRect)arg4 secondLine:(struct CGRect)arg5 actualLineCount:(unsigned long long)arg6 selected:(BOOL)arg7 labelValue:(short)arg8 justification:(short)arg9 inset:(double)arg10 radius:(double)arg11;
- (CDStruct_51b97681)calculateTextMetrics:(id)arg1 attributes:(id)arg2;
- (struct CGRect)placeSubString:(id)arg1 atIndex:(unsigned long long)arg2 fromFrame:(struct CGRect)arg3 bounds:(struct CGRect)arg4 attributes:(id)arg5 lineBreakMode:(unsigned long long)arg6 position:(BOOL)arg7;
- (id)subString:(id)arg1 atIndex:(unsigned long long)arg2 attributes:(id)arg3 lineBreakMode:(unsigned long long)arg4;
- (int)heightOfInfoSpace;
- (struct CGRect)subtitleFrame;
- (struct CGRect)titleFrame;
- (double)maxTitleWidth;
- (double)titleOffset;
- (struct CGRect)imageFrame;
- (struct CGRect)frame;
- (double)endCapWidth;
- (BOOL)showItemInfo;
- (BOOL)showPreview;
- (BOOL)labelOnBottom;
- (double)iconSize;
- (void)dealloc;
- (id)init;

@end

@interface TIconViewCellOffscreenRenderer : IKImageBrowserCellOffscreenRenderer
{
    BOOL _hasFocus;
    BOOL _backgroundIsWhite;
    BOOL _backgroundIsDark;
    BOOL _disableTwoLineTitles;
}

- (BOOL)backgroundIsDark;
- (void)setBackgroundIsDark:(BOOL)arg1;
- (BOOL)backgroundIsWhite;
- (void)setBackgroundIsWhite:(BOOL)arg1;
- (BOOL)hasFocus;
- (void)setDisableTwoLineTitles:(BOOL)arg1;
- (BOOL)disableTwoLineTitles;
- (void)spaceOutCellsAtDropLocation;
- (void)setHasFocus:(BOOL)arg1;

@end

@interface TIconViewPostProcess : TSortingPostProcess
{
    BOOL _loadSpatialData;
    BOOL _validSpatialData;
    vector_3577cbd0 _spatialData;
}

@property(readonly) BOOL validSpatialData; // @synthesize validSpatialData=_validSpatialData;
@property BOOL loadSpatialData; // @synthesize loadSpatialData=_loadSpatialData;
- (id).cxx_construct;
- (void).cxx_destruct;
- (const vector_3577cbd0 *)spatialData;
- (void)processNodes:(struct TFENodeVector *)arg1 andGroup:(struct TGroupedNodes *)arg2 withCanceledFlag:(_Bool *)arg3;
- (id)initWithComparator:(struct TBaseNodeComparator *)arg1 andGroupManager:(struct TGroupManager *)arg2 loadSpatialData:(_Bool)arg3;

@end

@interface TIconViewController : TBrowserViewController
{
    double _iconSize;
    double _gridSpacing;
    struct CGPoint _gridOffset;
    double _textSize;
    BOOL _labelOnBottom;
    BOOL _showItemInfo;
    int _arrangeBy;
    int _backgroundType;
    struct CGSize _idealViewSizeForZoom;
    struct TIconViewLayout *_iconLayout;
    BOOL _spatialDataIsDirty;
    BOOL _layoutIsDirty;
    BOOL _applySnapToGrid;
    BOOL _animateOnNextReload;
    struct TFENodeVector _airDropNodesQueue;
    struct CGRect _singleIconBounds;
    NSColor *_backgroundColor;
    NSImage *_backgroundImage;
    long long _maxIconDepth;
    struct TFENodeVector _nodesInDropAnimation;
    BOOL _drawingDisabled;
    struct CGRect _dropTargetFrame;
    unordered_map_a32ea09a _draggedNodeToDroppedNodeMap;
    BOOL _performDragOperationResult;
    struct TNSRef<NSMutableIndexSet *> _indexesBeingDropped;
    struct TNSRef<TIconViewCellOffscreenRenderer *> _cellRenderer;
    struct TIconViewInfoExtractorController *_infoController;
    struct unordered_map<TFENode, TNSRef<NSMutableDictionary *>, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<NSMutableDictionary *>>>> _groupInfo;
}

+ (id)imageSubtitleForNode:(const struct TFENode *)arg1;
@property(readonly, nonatomic) struct TIconViewInfoExtractorController *infoController; // @synthesize infoController=_infoController;
@property(retain, nonatomic) NSImage *backgroundImage; // @synthesize backgroundImage=_backgroundImage;
@property(retain, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) int backgroundType; // @synthesize backgroundType=_backgroundType;
@property(nonatomic) int arrangeBy; // @synthesize arrangeBy=_arrangeBy;
@property(nonatomic) BOOL showItemInfo; // @synthesize showItemInfo=_showItemInfo;
@property(nonatomic) BOOL labelOnBottom; // @synthesize labelOnBottom=_labelOnBottom;
@property(nonatomic) double textSize; // @synthesize textSize=_textSize;
@property(nonatomic) struct CGPoint gridOffset; // @synthesize gridOffset=_gridOffset;
@property(nonatomic) double gridSpacing; // @synthesize gridSpacing=_gridSpacing;
@property(nonatomic) double iconSize; // @synthesize iconSize=_iconSize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)imageBrowser:(id)arg1 accessibilityItemAtIndex:(unsigned long long)arg2 parentItem:(id)arg3;
- (id)imageBrowser:(id)arg1 itemAtIndex:(unsigned long long)arg2;
- (id)imageBrowser:(id)arg1 groupAtIndex:(unsigned long long)arg2;
- (void)updateGroupInfo;
- (long long)groupStyleHack;
- (struct _NSRange)imageBrowserRangeForGroup:(unsigned long long)arg1;
- (unsigned long long)numberOfGroupsInImageBrowser:(id)arg1;
- (unsigned long long)numberOfItemsInImageBrowser:(id)arg1;
- (void)unregisterContainerWithNodeKeyCache:(const struct TFENode *)arg1;
- (void)registerContainerWithNodeKeyCache:(const struct TFENode *)arg1;
- (struct CGRect)infoTextMaxFrame:(const struct TFENode *)arg1;
- (void)invalidateInfoTextForKeyNodes:(const struct TFENodeVector *)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)cleanUpDraggingState;
- (void)updateDraggingItemsForDrop:(id)arg1;
- (_Bool)shouldAnimateDrop;
- (_Bool)finishDropAction;
- (struct TFENode)nodeForDroppedNode:(const struct TFENode *)arg1;
- (_Bool)getDroppedNodesToTargetsMap:(unordered_map_a32ea09a *)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)imageBrowser:(id)arg1 writeItemsAtIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)spatialDataForNodes:(const struct TFENodeVector *)arg1 getAnchors:(map_0cdea9df *)arg2 getBounds:(map_c5101478 *)arg3;
- (void)imageBrowser:(id)arg1 dragImage:(id)arg2 at:(struct CGPoint)arg3 offset:(struct CGSize)arg4 event:(id)arg5 pasteboard:(id)arg6 source:(id)arg7 slideBack:(BOOL)arg8;
- (BOOL)receiveDrop:(struct TDropOperation *)arg1 draggingInfo:(id)arg2;
- (BOOL)receivePrivateDrag:(struct TDropOperation *)arg1 draggingInfo:(id)arg2;
- (BOOL)determineSnapToGridState:(struct TDropOperation *)arg1;
- (void)adjustForOutOfBoundsItems;
- (void)addItemToSnapFeedbackList:(const struct TFENode *)arg1;
- (void)springRefreshNode:(const struct TFENode *)arg1;
- (void)refreshItem:(const struct TFENode *)arg1;
- (void)refreshItem:(const struct TFENode *)arg1 loose:(BOOL)arg2 iconOnly:(BOOL)arg3;
- (void)calculatePropertiesWithDrop:(struct TDropOperation *)arg1 forNode:(const struct TFENode *)arg2 withPasteboardItem:(void *)arg3 inPropertyList:(struct TFENodePropertyList *)arg4 forcePlace:(_Bool)arg5 applyNow:(_Bool)arg6;
- (id)dragFlockLabelImageForNode:(const struct TFENode *)arg1 inFrame:(struct CGRect *)arg2;
- (id)dragFlockSelectionImageForNode:(const struct TFENode *)arg1 inFrame:(struct CGRect *)arg2;
- (id)cellImageForNode:(const struct TFENode *)arg1 ofComponents:(int)arg2 iconRelative:(BOOL)arg3 selected:(BOOL)arg4 minimalImage:(BOOL)arg5 inFrame:(struct CGRect *)arg6;
- (id)imageOfCell:(id)arg1 forNode:(const struct TFENode *)arg2 ofComponents:(int)arg3 iconRelative:(BOOL)arg4 selected:(BOOL)arg5 minimalImage:(BOOL)arg6 inFrame:(struct CGRect *)arg7;
- (void)validateCellMetrics:(id)arg1;
- (id)createCellRendererForContext:(struct CGContext *)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)imageBrowserShouldValidateEditingOnFocusChange:(id)arg1;
- (BOOL)imageBrowser:(id)arg1 titleOfCellAtIndex:(unsigned long long)arg2 shouldBeginEditing:(id)arg3;
- (void)updateSTFEditorLocation;
- (void)stopEditing:(BOOL)arg1;
- (BOOL)startEditingWithNode:(const struct TFENode *)arg1 renameOp:(id)arg2;
- (BOOL)imageBrowser:(id)arg1 getFreeFormLayoutAtIndexes:(id)arg2 position:(struct CGPoint *)arg3 scaleFactor:(double *)arg4 zValue:(double *)arg5;
- (void)imageBrowser:(id)arg1 didMoveItemsAtIndexes:(id)arg2;
- (BOOL)imageBrowser:(id)arg1 moveItemsAtIndexes:(id)arg2 toIndex:(unsigned long long)arg3;
- (BOOL)imageBrowser:(id)arg1 willMoveItemsAtIndexes:(id)arg2;
- (void)addSpatialDataForLocationInView:(struct CGPoint)arg1 toPropertyList:(struct TFENodePropertyList *)arg2;
- (void)imageBrowser:(id)arg1 cellWasRightClickedAtIndex:(unsigned long long)arg2 withEvent:(id)arg3;
- (void)imageBrowser:(id)arg1 backgroundWasRightClickedWithEvent:(id)arg2;
- (void)imageBrowser:(id)arg1 cellWasDoubleClickedAtIndex:(unsigned long long)arg2;
- (id)selectionIndexesForProposedSelection:(id)arg1;
- (void)imageBrowserSelectionDidChange:(id)arg1;
- (void)unbindViewSettings;
- (void)privateBindSettings;
- (void)imageBrowser:(id)arg1 itemAtIndexMovedOnTop:(unsigned long long)arg2;
- (BOOL)imageBrowser:(id)arg1 itemIsButton:(id)arg2;
- (id)imageBrowser:(id)arg1 subtitleOfImageBrowserItem:(id)arg2;
- (void)imageBrowser:(id)arg1 didValidateVisibleCellsAtIndexes:(id)arg2;
- (void)removeIndexesBeingDropped:(id)arg1;
- (_Bool)shouldDrawNode:(const struct TFENode *)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)drawingDisabled;
- (id)indexesBeingDropped;
- (void)cacheIndexesBeingDropped;
- (void)cacheIndexesBeingDroppedForNodes:(const struct TFENodeVector *)arg1;
- (void)clearIndexesBeingDropped;
- (struct TFENodeVector)nodesBeingDropped;
- (void)ensureCGSurfaceUpdateOnDraw:(BOOL)arg1;
- (void)previewPanelDidClose:(id)arg1;
- (void)previewPanelDidOpen:(id)arg1;
- (id)quickLookSharedPreviewViewForPreviewNode:(const struct TFENode *)arg1;
- (id)zoomImageForNode:(const struct TFENode *)arg1 contentRect:(struct CGRect *)arg2;
- (void)revealNodes:(const struct TFENodeVector *)arg1 select:(BOOL)arg2;
- (void)deselectAllNodes;
- (BOOL)removeItems:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (void)removeAllNodesInContainer:(const struct TFENode *)arg1;
- (BOOL)addItems:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2 withOperation:(id)arg3;
- (void)raiseZPositionForNodes:(const struct TFENodeVector *)arg1;
- (void)noticeGroupChanges:(const struct TGroupChanges *)arg1;
- (id)postProcessOperationOfKind:(int)arg1 forContainer:(const struct TFENode *)arg2;
- (void)reloadNodes:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (int)updateNeededForNode:(const struct TFENode *)arg1 property:(unsigned long long)arg2;
- (void)reloadData;
- (BOOL)shouldDeferReloadData;
- (void)deferredReloadData;
- (void)updateMeetingRoomLayout;
- (struct CGPoint)positionAtAngle:(double)arg1;
- (double)meetingRoomRadius;
- (BOOL)inMeetingRoom;
- (struct CGImage *)createRestoreImageForNode:(const struct TFENode *)arg1 outRect:(struct CGRect *)arg2;
- (void)getVisibleNodes:(struct TFENodeVector *)arg1;
- (void)prepareSnapToGridForUpcomingItems;
- (struct CGSize)currentGridSize;
- (struct CGRect)currentSingleIconBounds;
- (struct CGRect)anchoredIconBounds;
- (struct CGRect)anchoredBoundsForIconCellPart:(int)arg1;
- (struct CGRect)anchoredBoundsForIconCellPart:(int)arg1 withViewSettings:(id)arg2;
- (id)currentViewSettings;
- (void)configurationChangedPreservingLayout:(BOOL)arg1;
- (void)iconViewGridSpacingDidStabilize:(id)arg1;
- (void)iconViewIconSizeDidStabilize:(id)arg1;
- (void)iconViewOptionSliderDidStabilize:(id)arg1;
- (void)addOffsetSpatialDataFromNode:(const struct TFENode *)arg1 toPropertyList:(struct TFENodePropertyList *)arg2;
- (void)writeSpatialDataIfDirty;
- (void)writeSpatialData;
- (void)setSpatialDataIsDirty;
- (void)translateIconPositions:(struct CGSize)arg1;
- (BOOL)recalcLayout;
- (void)dirtyLayout;
- (void)arrangeBy:(int)arg1;
- (void)setFreeFormLayoutMode:(BOOL)arg1;
- (void)setUpFreeFormLayoutMargins;
- (void)updateGridAlignment;
- (void)updateFreeFormLayout;
- (void)updateFreeFormLayoutAnimated:(BOOL)arg1;
- (void)saveScrollPosition;
- (void)updateScrollPosition;
- (void)restoreBrowserViewState:(id)arg1;
- (id)browserViewState;
- (BOOL)inKeepArrangedMode;
- (void)dataSourceDidSortAsynchronously:(BOOL)arg1;
- (void)setupFreeformArrangement;
- (void)cmdKeepArrangedByLabel:(id)arg1;
- (void)cmdKeepArrangedByKind:(id)arg1;
- (void)cmdKeepArrangedByPhysicalSize:(id)arg1;
- (void)cmdKeepArrangedByDateAdded:(id)arg1;
- (void)cmdKeepArrangedByLastOpenDate:(id)arg1;
- (void)cmdKeepArrangedByCreationDate:(id)arg1;
- (void)cmdKeepArrangedByModDate:(id)arg1;
- (void)cmdKeepArrangedByName:(id)arg1;
- (void)cmdKeepArrangedBy:(id)arg1;
- (void)cmdCleanUpSelection:(id)arg1;
- (BOOL)validateCleanUpSelection:(id)arg1;
- (void)cmdCleanUp:(id)arg1;
- (BOOL)validateCleanUp:(id)arg1;
- (BOOL)validateCleanUpBy:(id)arg1;
- (BOOL)validateArrange:(id)arg1;
- (void)cmdCleanUpView:(id)arg1;
- (void)cmdCleanUpByLabel:(id)arg1;
- (void)cmdCleanUpByKind:(id)arg1;
- (void)cmdCleanUpByPhysicalSize:(id)arg1;
- (void)cmdCleanUpByDateAdded:(id)arg1;
- (void)cmdCleanUpByLastOpenDate:(id)arg1;
- (void)cmdCleanUpByCreationDate:(id)arg1;
- (void)cmdCleanUpByModDate:(id)arg1;
- (void)cmdCleanUpByName:(id)arg1;
- (void)cmdCleanUpByHelper:(int)arg1;
- (void)cmdArrange:(id)arg1;
- (void)cmdCleanUpBy:(id)arg1;
- (void)windowDidLiveResize:(id)arg1;
- (void)setShowIconPreview:(BOOL)arg1;
- (void)updateFreeFormPositions;
- (struct CGSize)cellSizeForIconSize:(double)arg1;
- (struct TFENode)settingsNode;
- (void)setViewSettingsLabelOnBottom:(BOOL)arg1;
- (void)setViewSettingsIconSize:(double)arg1;
- (void)setViewSettingsArrangeBy:(int)arg1;
- (void)viewContextMenuNeedsArrangeBy:(char *)arg1 cleanUpBy:(char *)arg2 sortBy:(char *)arg3 currentlySorted:(char *)arg4;
- (struct CGSize)viewScrollersSize;
- (struct CGSize)idealViewSize;
- (struct CGRect)iconFrameForNode:(const struct TFENode *)arg1;
- (struct CGRect)popoverFrameForNode:(const struct TFENode *)arg1;
- (struct CGRect)frameForNode:(const struct TFENode *)arg1;
- (void)scrollViewFrameChanged:(id)arg1;
- (void)setAlwaysVisibleNode:(const struct TFENode *)arg1;
- (BOOL)nodeIsSelected:(const struct TFENode *)arg1;
- (void)selectAllNodes;
- (void)setSelectedNodes:(const struct TFENodeVector *)arg1 byExtendingSelection:(BOOL)arg2;
- (id)indexSetForNodes:(const struct TFENodeVector *)arg1;
- (unsigned long long)getSelectedNodes:(struct TFENodeVector *)arg1 upTo:(unsigned long long)arg2;
- (BOOL)scrollWheel:(id)arg1;
- (void)prefetchIcons:(id)arg1;
- (id)selectedItems;
- (struct TFENode)thumbnailTargetNodeForNode:(const struct TFENode *)arg1;
- (unsigned long long)typeSelectNodeCount;
- (long long)typeSelectIndexForNode:(const struct TFENode *)arg1;
- (struct TFENode)typeSelectNodeAtIndex:(unsigned long long)arg1;
- (struct TFENode)nextNode:(const struct TFENodeVector *)arg1;
- (unsigned long long)selectedNodesCount;
- (unsigned long long)itemCount;
- (struct TFENode)nodeAtLocation:(const struct CGPoint *)arg1 includeContainer:(BOOL)arg2;
- (unsigned long long)indexForNode:(const struct TFENode *)arg1;
- (struct TFENode)nodeAtIndex:(unsigned long long)arg1;
- (unsigned long long)airDropIndexForNode:(const struct TFENode *)arg1;
- (struct TFENode)airDropNodeAtIndex:(unsigned long long)arg1;
- (const struct TFENodeVector *)targetNodes;
- (BOOL)isGrouping;
- (struct TGroupManager *)groupManager:(const struct TFENode *)arg1;
- (id)imageBrowserView;
- (id)iconView;
- (void)setDataSource:(id)arg1;
- (unsigned int)viewStyle;
- (void)viewLoaded;
- (void)setUpDragging;
- (void)loadView;
- (void)aboutToTearDown:(id)arg1;
- (id)nibName;
- (void)finishViewInitialization;
- (id)initWithDataSource:(id)arg1 andViewSettings:(id)arg2 targetPath:(const struct TFENodeVector *)arg3 browserController:(id)arg4;
- (void)adjustIconViewAnimationMask;
- (BOOL)shouldUseIKFinderMode;
- (void)setSpecificImageBrowserFlavor;
- (int)groupFlavor;

@end

@interface FINodeIconUIElement : FINodeUIElement
{
    struct TNSRef<id> _controller;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setController:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (struct CGRect)frame;
- (void)setSelection:(BOOL)arg1;
- (BOOL)isSelected;
@property(readonly, nonatomic) IKImageBrowserView *containerView; // @dynamic containerView;

@end

@interface TSortingPostProcess : NSObject <TNodeEventPostProcess>
{
    struct TRef<TBaseNodeComparator *, TRetainReleasePolicy<TBaseNodeComparator *>> _comparator;
    struct TGroupManager *_groupManager;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)validateNodeProcessing:(struct TFENodeVector *)arg1 forComparator:(struct TBaseNodeComparator *)arg2 andGroups:(struct TGroupedNodes *)arg3 withManager:(struct TGroupManager *)arg4;
- (void)processNodes:(struct TFENodeVector *)arg1 andGroup:(struct TGroupedNodes *)arg2 withCanceledFlag:(_Bool *)arg3;
- (id)initWithComparator:(struct TBaseNodeComparator *)arg1 andGroupManager:(struct TGroupManager *)arg2;

@end

@interface TBrowserViewController : TViewController <TQLPreviewWindowControllerProtocol, TTypeSelectDelegate, TGroupAsFolderObserver, TSpringDelegate, TThumbnailExtractorDelegate>
{
    BOOL _okayToReloadData;
    BOOL _willReloadData;
    BOOL _binding;
    BOOL _tearingDown;
    TBrowserWindowController *_browserWindowController;
    id <BrowserController> _browserController;
    struct TNodeBrowser *_nodeBrowser;
    BOOL _selectionHasBeenHandled;
    BOOL _showIconPreview;
    BOOL _nextSelectionAllowsRetarget;
    TViewOptionsSettingsController *_viewOptionsSettingsController;
    struct TThumbnailExtractorController *_thumbnailController;
    struct TFENode _backupLiveTarget;
    TBrowserViewDataSource *_dataSource;
    NSView *_browserView;
    struct TFENodeVector _resolvedTargetPath;
    struct TFENodeVector _unResolvedTargetPath;
    struct TFENode _nodeBeingEdited;
    struct TFENodeVector _nodesBeingDragged;
    NSCountedSet *_openContainers;
    TSpringController *_springController;
    long long _uniqueID;
    struct CGPoint _scrollPosition;
    struct CGPoint _contextualClickLocationInView;
    BOOL _handlingContextualClick;
    BOOL _grouping;
    struct TNSRef<NSString *> _sortBy;
    BOOL _isPerformingDropAnimation;
    BOOL _isPerformingDropOperation;
    BOOL _isTrackingDragOver;
    TRef_9e01da98 _dropAction;
    struct TNSRef<NSColor *> _groupNameTextColor;
    struct TNSRef<NSString *> _groupFontName;
    TNodeViewSettings *_viewSettings;
}

+ (void)setShowAllFiles:(BOOL)arg1;
+ (BOOL)showAllFiles;
+ (id)composeThumbnailsIntoICloudFolderIcon:(id)arg1 children:(const struct TFENodeVector *)arg2 iconSize:(double)arg3 thumbnailGetter:(id)arg4;
+ (id)imageForUbiquityStatus:(unsigned long long)arg1;
+ (id)ubiquityStatusTextForNode:(const struct TFENode *)arg1;
+ (struct TTypeSelectController *)typeSelectControllerForBrowserViewController:(id)arg1;
@property(nonatomic) TRef_9e01da98 dropAction; // @synthesize dropAction=_dropAction;
@property(nonatomic) BOOL isTrackingDragOver; // @synthesize isTrackingDragOver=_isTrackingDragOver;
@property(nonatomic) BOOL isPerformingDropOperation; // @synthesize isPerformingDropOperation=_isPerformingDropOperation;
@property(nonatomic) BOOL isPerformingDropAnimation; // @synthesize isPerformingDropAnimation=_isPerformingDropAnimation;
@property(nonatomic, getter=isGrouping) BOOL grouping; // @synthesize grouping=_grouping;
@property(nonatomic) NSView *browserView; // @synthesize browserView=_browserView;
@property(nonatomic) struct CGPoint scrollPosition; // @synthesize scrollPosition=_scrollPosition;
@property(retain, nonatomic) TSpringController *springController; // @synthesize springController=_springController;
@property(readonly, nonatomic) struct TThumbnailExtractorController *thumbnailController; // @synthesize thumbnailController=_thumbnailController;
@property(nonatomic) BOOL selectionHasBeenHandled; // @synthesize selectionHasBeenHandled=_selectionHasBeenHandled;
@property(nonatomic) BOOL nextSelectionAllowsRetarget; // @synthesize nextSelectionAllowsRetarget=_nextSelectionAllowsRetarget;
@property(nonatomic) BOOL showIconPreview; // @synthesize showIconPreview=_showIconPreview;
@property(nonatomic) struct TNodeBrowser *nodeBrowser; // @synthesize nodeBrowser=_nodeBrowser;
@property(retain, nonatomic) TNodeViewSettings *viewSettings; // @synthesize viewSettings=_viewSettings;
@property(retain, nonatomic) TBrowserViewDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(readonly, nonatomic) id <BrowserController> browserController; // @synthesize browserController=_browserController;
@property(readonly, nonatomic) TBrowserWindowController *browserWindowController; // @synthesize browserWindowController=_browserWindowController;
@property(readonly, nonatomic) BOOL isBindingViewSettings; // @synthesize isBindingViewSettings=_binding;
@property(nonatomic) BOOL willReloadData; // @synthesize willReloadData=_willReloadData;
@property(nonatomic) BOOL okayToReloadData; // @synthesize okayToReloadData=_okayToReloadData;
@property(retain, nonatomic) TViewOptionsSettingsController *viewOptionsSettingsController; // @synthesize viewOptionsSettingsController=_viewOptionsSettingsController;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct TGroupManager *)getDateGroupManagerForProperty:(unsigned int)arg1 andContainer:(const struct TFENode *)arg2;
- (struct CGRect)thumbnailFrameForNode:(const struct TFENode *)arg1;
- (struct TFENode)thumbnailTargetNodeForNode:(const struct TFENode *)arg1;
- (void)invalidateThumbnailForKeyNodes:(const struct TFENodeVector *)arg1;
- (BOOL)getThumbnailExtractorData:(struct TThumbnailExtractorData *)arg1 forNode:(const struct TFENode *)arg2;
- (BOOL)getThumbnailExtractorData:(struct TThumbnailExtractorData *)arg1 forNode:(const struct TFENode *)arg2 inVisibleRect:(const struct CGRect *)arg3;
- (BOOL)getThumbnailExtractorData:(struct TThumbnailExtractorData *)arg1 forNode:(const struct TFENode *)arg2 inContainer:(const struct TFENode *)arg3 inVisibleRect:(const struct CGRect *)arg4;
- (struct CGImage *)createRestoreImageForNode:(const struct TFENode *)arg1 outRect:(struct CGRect *)arg2;
- (id)restoreImages;
- (id)getCellForNode:(const struct TFENode *)arg1;
- (void)prepareSnapToGridForUpcomingItems;
- (void)addOffsetSpatialDataFromNode:(const struct TFENode *)arg1 toPropertyList:(struct TFENodePropertyList *)arg2;
- (void)addSpatialDataForLocationInView:(struct CGPoint)arg1 toPropertyList:(struct TFENodePropertyList *)arg2;
- (void)expandFolderAndStartEditing:(const struct TFENode *)arg1;
- (void)titleOfNode:(const struct TFENode *)arg1 didChangeTo:(id)arg2 renameOp:(id)arg3;
- (void)setNodeBeingEdited:(const struct TFENode *)arg1;
- (const struct TFENode *)nodeBeingEdited;
- (void)updateSTFEditorLocation;
- (void)stopEditing:(BOOL)arg1;
- (BOOL)startEditingWithNode:(const struct TFENode *)arg1 renameOp:(id)arg2;
- (void)springRefreshNode:(const struct TFENode *)arg1;
- (void)springNode:(const struct TFENode *)arg1;
- (BOOL)urlIsDimmed:(id)arg1 itemIsContainer:(BOOL)arg2 itemIsPackage:(BOOL)arg3;
- (BOOL)urlIsDimmed:(id)arg1;
- (BOOL)allowsBrowsingPackages;
- (BOOL)nodeCanBeDisclosed:(const struct TFENode *)arg1;
- (BOOL)canBrowseNode:(const struct TFENode *)arg1;
- (BOOL)uiAllowsRenamingNode:(const struct TFENode *)arg1;
- (BOOL)nodeIsGroupNode:(const struct TFENode *)arg1;
- (BOOL)nodeIsDimmed:(const struct TFENode *)arg1;
- (BOOL)showEjectButtonForNode:(const struct TFENode *)arg1;
- (unsigned int)nodeObserverOptionsForContainer:(const struct TFENode *)arg1;
- (BOOL)shouldObserveSpotlightAttributesForContainer:(const struct TFENode *)arg1;
- (BOOL)shouldCalculateFolderSizesForContainer:(const struct TFENode *)arg1;
- (struct CGSize)viewScrollersSize;
- (struct CGSize)idealViewSize;
- (struct CGSize)minimumViewSize;
- (void)saveScrollPosition;
- (void)updateScrollPosition;
- (struct CGRect)popoverFrameForNode:(const struct TFENode *)arg1;
- (struct CGRect)globalZoomRectForNode:(const struct TFENode *)arg1;
- (struct CGRect)zoomRectForNode:(const struct TFENode *)arg1;
- (struct CGRect)globalIconFrameForNode:(const struct TFENode *)arg1;
- (struct CGRect)iconFrameForNode:(const struct TFENode *)arg1;
- (struct CGRect)globalFrameForNode:(const struct TFENode *)arg1;
- (struct CGRect)frameForNode:(const struct TFENode *)arg1;
- (void)setAlwaysVisibleNode:(const struct TFENode *)arg1;
- (void)sidebarDidChangeVisibility:(BOOL)arg1;
- (BOOL)inBrowseMode;
- (BOOL)checkForTEFFilesInContainer:(const struct TFENode *)arg1;
- (void)nodeBrowserReceivingDrag;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (const struct TFENodeVector *)nodesBeingDragged;
- (void)selectionChangedByUserAction:(BOOL)arg1;
- (void)typeSelectNode:(const struct TFENode *)arg1;
- (unsigned long long)typeSelectGetSelectedNodes:(struct TFENodeVector *)arg1;
- (unsigned long long)typeSelectNodeCount;
- (long long)typeSelectIndexForNode:(const struct TFENode *)arg1;
- (struct TFENode)typeSelectNodeAtIndex:(unsigned long long)arg1;
- (struct TFENode)nextNode:(const struct TFENodeVector *)arg1;
- (BOOL)shouldTypeSelectForEvent:(id)arg1 withCurrentSearchString:(id)arg2;
- (BOOL)handleUnicodeTextInput:(id)arg1 atTime:(double)arg2;
- (_Bool)isTypeSelectInProgressWithTime:(double)arg1;
- (void)clearTypeSelectBuffer;
- (_Bool)typeSelectEvent:(const struct TString *)arg1 atTime:(double)arg2;
- (BOOL)nodeIsSelected:(const struct TFENode *)arg1;
- (void)getVisibleNodes:(struct TFENodeVector *)arg1;
- (void)setSelectionChangedAnimationsEnabled:(BOOL)arg1;
- (void)selectContextMenuTargetNodes;
- (void)setSelectedNodes:(const struct TFENodeVector *)arg1 byExtendingSelection:(BOOL)arg2;
- (unsigned long long)getSelectedNodesInFocus:(struct TFENodeVector *)arg1 upTo:(unsigned long long)arg2;
- (void)getSelectedNodesForQuickLook:(struct TFENodeVector *)arg1 upTo:(unsigned long long)arg2;
- (unsigned long long)getSelectedNodes:(struct TFENodeVector *)arg1 forContainer:(const struct TFENode *)arg2 upTo:(unsigned long long)arg3;
- (unsigned long long)getSelectedNodes:(struct TFENodeVector *)arg1 upTo:(unsigned long long)arg2;
- (unsigned long long)getSelectedNodes:(struct TFENodeVector *)arg1;
- (unsigned long long)selectedNodesCountInFocus;
@property(readonly, nonatomic) unsigned long long selectedNodesCount;
- (void)tryToCloseWindow;
- (void)windowDidDeactivate;
- (void)windowDidActivate;
- (void)syncOnActivateIfRemoteTarget;
@property(readonly, nonatomic) BOOL isDesktopBrowser;
@property(readonly, nonatomic) BOOL isTimeMachineBrowser;
@property(readonly, nonatomic) BOOL isBackupBrowser;
@property(readonly, nonatomic) BOOL isSnapshotImageBrowser;
- (void)moveMaxResultsCountWithReset:(BOOL)arg1;
- (BOOL)targetIsSearch;
- (BOOL)trimPath:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (void)setTargetPath:(const struct TFENodeVector *)arg1;
- (struct TFENode)settingsNode;
- (const struct TFENodeVector *)resolvedTargetPath;
- (const struct TFENodeVector *)targetPath;
- (struct TFENode)focusNode;
- (const struct TFENode *)browserRoot;
- (const struct TFENode *)target;
@property(readonly, nonatomic) NSColor *groupNameTextColor; // @dynamic groupNameTextColor;
@property(readonly, nonatomic) NSString *groupFontName; // @dynamic groupFontName;
@property(retain, nonatomic) NSString *sortBy;
- (unsigned int)viewStyle;
- (BOOL)makeBrowserViewFirstResponder;
- (id)baseView;
- (BOOL)validateMenuItem:(id)arg1;
- (unsigned long long)getCommandTarget:(SEL)arg1 outNodes:(struct TFENodeVector *)arg2 maxItems:(unsigned long long)arg3;
- (BOOL)focusedOnSearchResults;
- (void)restoreBrowserViewState:(id)arg1;
- (id)browserViewState;
- (void)didFinishViewCreation;
- (id)postProcessOperationOfKind:(int)arg1 forContainer:(const struct TFENode *)arg2;
- (id)nibName;
- (void)aboutToDestroyBrowserView;
- (BOOL)isTearingDown;
- (void)aboutToTearDown:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (long long)validatorID;
- (void)finishViewInitialization;
- (id)initWithDataSource:(id)arg1 andViewSettings:(id)arg2 targetPath:(const struct TFENodeVector *)arg3 browserController:(id)arg4;
- (void)commonViewInitWithDataSource:(id)arg1 targetPath:(const struct TFENodeVector *)arg2;
- (void)initCommon;
- (void)restoreTransientViewState;
- (void)saveTransientViewState;
- (BOOL)retargetedInternally:(const struct TFENodeVector *)arg1;
- (void)computeTargetPathsFor:(const struct TFENodeVector *)arg1;
- (BOOL)resultCountIsPartial;
- (BOOL)isValidTargetForSnapshot:(const struct TFENode *)arg1;
- (BOOL)validateQuickLook:(id)arg1;
- (const struct TFENode *)snapshotNode;
- (struct TGroupManager *)groupManager:(const struct TFENode *)arg1;
- (struct TBaseNodeComparator *)createComparator:(const struct TFENode *)arg1;
- (BOOL)sortInIncreasingOrderForProperty:(const struct TString *)arg1;
- (struct TString)sortProperty;
- (BOOL)sortGroupsInAscendingOrder:(const struct TFENode *)arg1;
- (void)sortAllChildrenForNode:(const struct TFENode *)arg1 reload:(BOOL)arg2 maintainSelection:(BOOL)arg3;
- (void)sortAllChildrenForNode:(const struct TFENode *)arg1 collator:(struct SortCollator *)arg2 reload:(BOOL)arg3 maintainSelection:(BOOL)arg4;
- (void)sortDataSourceAsynchronously:(BOOL)arg1 revealSelection:(BOOL)arg2;
- (void)dataSourceDidSortAsynchronously:(BOOL)arg1;
- (void)dataSourceWillSortAsynchronously;
- (BOOL)isContainerOpen:(const struct TFENode *)arg1;
- (void)adjustObserverOptions;
- (void)closeContainer:(const struct TFENode *)arg1;
- (void)openContainer:(const struct TFENode *)arg1;
- (void)closeTarget;
- (void)openTarget;
- (void)groupChangedForNodes:(const struct TFENodeVector *)arg1 inContainerNode:(const struct TFENode *)arg2;
- (void)noticeGroupChanges:(const struct TGroupChanges *)arg1;
- (void)updatePropertiesForNodes:(const vector_614ab7ad *)arg1 inContainerNode:(const struct TFENode *)arg2;
- (void)spotlightAttrSyncComplete:(const struct TGroupedNodes *)arg1 forContainer:(const struct TFENode *)arg2 withOperation:(id)arg3;
- (BOOL)updateNodesGroup:(const struct TGroupedNodes *)arg1 forContainer:(const struct TFENode *)arg2 groupChanges:(struct TGroupChanges *)arg3;
- (void)sortAllChildrenAndReloadForItem:(id)arg1;
- (BOOL)mayResortChildrenAfterNameChange;
- (int)updateNeededForNode:(const struct TFENode *)arg1 property:(unsigned long long)arg2;
- (void)reloadNodes:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (void)updateNodes:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (void)labelNameOrColorChanged:(id)arg1;
- (void)preferencesUpdated:(id)arg1;
- (void)syncAllContainers;
- (BOOL)removeItems:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (void)removeAllNodesInContainer:(const struct TFENode *)arg1;
- (BOOL)addItems:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2 withOperation:(id)arg3;
- (void)folderContentChanged:(const struct FolderContentChangeDecriptor *)arg1;
- (void)endNodeEventTransaction;
- (void)beginNodeEventTransaction;
- (BOOL)removeItems:(const struct TFENodeVector *)arg1 forContainer:(const struct TFENode *)arg2 groupChanges:(struct TGroupChanges *)arg3;
- (BOOL)addItems:(const struct TGroupedNodes *)arg1 forContainer:(const struct TFENode *)arg2 removeAll:(BOOL)arg3 groupChanges:(struct TGroupChanges *)arg4;
- (BOOL)shouldCloseWindowOnTargetMove:(const struct TFENode *)arg1;
- (void)reloadDataForContainerNode:(const struct TFENode *)arg1;
- (void)reloadData;
- (void)didPerformFirstReload;
- (void)getNodes:(struct TFENodeVector *)arg1 fromIndexSet:(id)arg2 upTo:(unsigned long long)arg3;
- (void)getNodes:(struct TFENodeVector *)arg1 fromArray:(id)arg2 upTo:(unsigned long long)arg3;
- (BOOL)containsNode:(const struct TFENode *)arg1;
- (struct TFENode)nodeAtLocation:(const struct CGPoint *)arg1 includeContainer:(BOOL)arg2;
- (unsigned long long)indexForNode:(const struct TFENode *)arg1;
- (struct TFENode)nodeAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long itemCount; // @dynamic itemCount;
- (void)refreshNodeSettings:(BOOL)arg1;
- (void)unbindViewSettings;
- (void)bindViewSettings;
- (void)privateBindSettings;
- (void)performTargetSpecificInitialization;
- (BOOL)handleQuickLookWithEvent:(id)arg1;
- (void)handleMagnify:(double)arg1;
- (BOOL)handleKeyDown:(id)arg1 currentKey:(unsigned short *)arg2;
- (void)revealNodes:(const struct TFENodeVector *)arg1 select:(BOOL)arg2;
- (void)openSelection;
- (void)updateInspectorWindow;
- (void)showStaticInfoItem:(const struct TFENode *)arg1;
- (BOOL)validateBackUpNow:(id)arg1;
- (BOOL)validateDeleteBackupSnapshot:(id)arg1;
- (BOOL)validateDeleteAllBackups:(id)arg1;
- (BOOL)validateRestoreTo:(id)arg1;
- (void)cmdBackUpNow:(id)arg1;
- (void)cmdDeleteBackupSnapshot:(id)arg1;
- (void)cmdDeleteAllBackups:(id)arg1;
- (void)cmdRestoreTo:(id)arg1;
- (BOOL)validateCleanUpByLabel:(id)arg1;
- (BOOL)validateCleanUpByKind:(id)arg1;
- (BOOL)validateCleanUpByPhysicalSize:(id)arg1;
- (BOOL)validateCleanUpByDateAdded:(id)arg1;
- (BOOL)validateCleanUpByCreationDate:(id)arg1;
- (BOOL)validateCleanUpByModDate:(id)arg1;
- (BOOL)validateCleanUpByLastOpenDate:(id)arg1;
- (BOOL)validateCleanUpByDate:(id)arg1;
- (void)cmdSetLabel7:(id)arg1;
- (void)cmdSetLabel6:(id)arg1;
- (void)cmdSetLabel5:(id)arg1;
- (void)cmdSetLabel4:(id)arg1;
- (void)cmdSetLabel3:(id)arg1;
- (void)cmdSetLabel2:(id)arg1;
- (void)cmdSetLabel1:(id)arg1;
- (void)cmdSetLabel0:(id)arg1;
- (void)commonSetLabel:(long long)arg1;
- (BOOL)validateSetLabel:(id)arg1;
- (void)cmdSetLabel:(id)arg1;
- (void)cmdBurn:(id)arg1;
- (BOOL)validateBurn:(id)arg1;
- (void)cut:(id)arg1;
- (BOOL)validateCut:(id)arg1;
- (void)cmdMoveToTrashSilently:(id)arg1;
- (BOOL)validateMoveToTrashSilently:(id)arg1;
- (void)cmdDeleteFromICloud:(id)arg1;
- (BOOL)validateDeleteFromICloud:(id)arg1;
- (void)cmdMoveToTrash:(id)arg1;
- (BOOL)validateMoveToTrash:(id)arg1;
- (void)cmdEjectAll:(id)arg1;
- (void)cmdEjectOne:(id)arg1;
- (void)cmdEject:(id)arg1;
- (void)commonEject:(SEL)arg1 forceOne:(BOOL)arg2 forceAll:(BOOL)arg3;
- (BOOL)validateEjectAll:(id)arg1;
- (BOOL)validateEjectOne:(id)arg1;
- (BOOL)validateEject:(id)arg1;
- (BOOL)commonValidateEject:(id)arg1 forceOne:(BOOL)arg2 forceAll:(BOOL)arg3;
- (void)cmdSlideshow:(id)arg1;
- (BOOL)validateQuickLookFromToolbar:(id)arg1;
- (void)cmdQuickLookFromToolbar:(id)arg1;
- (BOOL)validateSlideshow:(id)arg1;
- (void)cmdQuickLook:(id)arg1;
- (void)cmdAddToSidebar:(id)arg1;
- (BOOL)validateAddToSidebar:(id)arg1;
- (void)cmdOpenEnclosingFolder:(id)arg1;
- (BOOL)validateOpenEnclosingFolder:(id)arg1;
- (void)cmdShowOriginal:(id)arg1;
- (BOOL)validateShowOriginal:(id)arg1;
- (void)cmdMakeAlias:(id)arg1;
- (BOOL)validateMakeAlias:(id)arg1;
- (void)cmdDuplicateExactly:(id)arg1;
- (BOOL)validateDuplicateExactly:(id)arg1;
- (void)cmdDuplicate:(id)arg1;
- (BOOL)validateDuplicate:(id)arg1;
- (void)cmdArchive:(id)arg1;
- (BOOL)validateArchive:(id)arg1;
- (void)cmdEncrypt:(id)arg1;
- (BOOL)validateEncrypt:(id)arg1;
- (void)groupAsFolderCompleted:(struct TNodeTask *)arg1 withFolder:(const struct TFENode *)arg2 status:(int)arg3;
- (void)groupAsFolder:(struct TNodeTask *)arg1 createdGroupFolder:(const struct TFENode *)arg2;
- (BOOL)shouldGroupAsFolderOpenInNewWindow:(const struct TFENode *)arg1;
- (void)cmdGroupAsFolder:(id)arg1;
- (BOOL)validateGroupAsFolder:(id)arg1;
- (void)cmdNewBurnableFolder:(id)arg1;
- (BOOL)validateNewBurnableFolder:(id)arg1;
- (BOOL)validateNewFolderAtMouseLocation:(id)arg1;
- (void)cmdNewFolderAtMouseLocation:(id)arg1;
- (void)cmdNewFolder:(id)arg1;
- (BOOL)validateNewFolder:(id)arg1;
- (BOOL)commonValidateNewFolder:(id)arg1;
- (void)cmdShowInspector:(id)arg1;
- (BOOL)validateShowInspector:(id)arg1;
- (void)cmdShowStaticInfoSummary:(id)arg1;
- (BOOL)validateShowStaticInfoSummary:(id)arg1;
- (void)cmdShowStaticInfo:(id)arg1;
- (BOOL)validateShowStaticInfo:(id)arg1;
- (BOOL)commonValidateGetInfo:(id)arg1;
- (void)cmdOpenWithOther:(id)arg1;
- (void)cmdOpenWithFirenze:(id)arg1;
- (BOOL)validateOpenWithOther:(id)arg1;
- (void)cmdOpenWithDownArrow:(id)arg1;
- (BOOL)validateOpenWithDownArrow:(id)arg1;
- (void)cmdOpenParentAltBrowse:(id)arg1;
- (BOOL)validateOpenParentAltBrowse:(id)arg1;
- (void)cmdOpenParent:(id)arg1;
- (BOOL)validateOpenParent:(id)arg1;
- (void)cmdPrintItems:(id)arg1;
- (BOOL)validatePrintItems:(id)arg1;
- (void)cmdOpenAltBrowse:(id)arg1;
- (BOOL)validateOpenAltBrowse:(id)arg1;
- (void)cmdOpenOptionBrowse:(id)arg1;
- (BOOL)validateOpenOptionBrowse:(id)arg1;
- (void)cmdOpenShiftBrowse:(id)arg1;
- (BOOL)validateOpenShiftBrowse:(id)arg1;
- (void)cmdOpen:(id)arg1;
- (BOOL)validateOpen:(id)arg1;
- (BOOL)commonValidateOpen:(id)arg1;
- (void)cmdAlwaysOpenWith:(id)arg1;
- (BOOL)validateAlwaysOpenWith:(id)arg1;
- (void)cmdOpenWith:(id)arg1;
- (void)openWithCommon:(id)arg1;
- (BOOL)validateOpenWith:(id)arg1;
- (BOOL)commonValidateOpenWith:(id)arg1;
- (void)cmdShowPackageContents:(id)arg1;
- (BOOL)validateShowPackageContents:(id)arg1;
- (void)cmdMoveItemsHere:(id)arg1;
- (BOOL)validateMoveItemsHere:(id)arg1;
- (void)cmdPasteExactly:(id)arg1;
- (void)paste:(id)arg1;
- (BOOL)validatePasteExactly:(id)arg1;
- (BOOL)validatePaste:(id)arg1;
- (BOOL)commonValidatePaste:(SEL)arg1 itemCount:(unsigned long long *)arg2;
- (void)copy:(id)arg1;
- (BOOL)validateCopy:(id)arg1;
- (void)viewContextMenuNeedsArrangeBy:(char *)arg1 cleanUpBy:(char *)arg2 sortBy:(char *)arg3 currentlySorted:(char *)arg4;
- (void)showContextMenu:(id)arg1 showContainer:(BOOL)arg2;
- (void)showContextMenuForContainer:(const struct TFENode *)arg1 forEvent:(id)arg2;
- (void)showContextMenuForNodes:(const struct TFENodeVector *)arg1 forEvent:(id)arg2;
- (void)finishedHandlingContextualClick;
- (_Bool)getContextualClickLocationInView:(struct CGPoint *)arg1;
- (void)setHandlingContextualClickAtLocationInView:(const struct CGPoint *)arg1;
- (void)deselectAllNodes;
- (void)selectAllNodes;
- (BOOL)validateArrange:(id)arg1;
- (void)cmdArrange:(id)arg1;
- (BOOL)validateKeepArrangedBy:(id)arg1;
- (void)cmdKeepArrangedBy:(id)arg1;
- (void)cmdCleanUpByLabel:(id)arg1;
- (void)cmdCleanUpByKind:(id)arg1;
- (void)cmdCleanUpByDateAdded:(id)arg1;
- (void)cmdCleanUpByPhysicalSize:(id)arg1;
- (void)cmdCleanUpByModDate:(id)arg1;
- (void)cmdCleanUpByLastOpenDate:(id)arg1;
- (void)cmdCleanUpByCreationDate:(id)arg1;
- (void)cmdCleanUpByName:(id)arg1;
- (void)cmdCleanUpSelection:(id)arg1;
- (BOOL)validateCleanUpSelection:(id)arg1;
- (void)cmdCleanUpBy:(id)arg1;
- (void)cmdCleanUp:(id)arg1;
- (BOOL)validateCleanUpBy:(id)arg1;
- (BOOL)validateCleanUp:(id)arg1;
- (void)cmdDeselectAll:(id)arg1;
- (BOOL)validateSelectAll:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)finderActionCompleted:(id)arg1;
- (void)previewPanelDidClose:(id)arg1;
- (void)previewPanelDidOpen:(id)arg1;
- (BOOL)quickLookShouldShowOpenButtonForNode:(const struct TFENode *)arg1;
- (void)openQuickLookNode:(const struct TFENode *)arg1;
- (BOOL)quickLookHandleEvent:(id)arg1;
- (id)quickLookSharedPreviewViewForPreviewNode:(const struct TFENode *)arg1;
- (id)zoomImageForNode:(const struct TFENode *)arg1 contentRect:(struct CGRect *)arg2;
- (void)getQuickLookNodes:(struct TFENodeVector *)arg1;
- (BOOL)isActiveQLWindowController;
- (void)resignActiveQLWindowController;
- (void)becomeActiveQLWindowController;
- (void)updatePreviewPanel;
- (void)closePreviewPanel;
- (void)openPreviewPanelInFullScreen:(BOOL)arg1;
- (void)togglePreviewPanelWithFullScreen:(BOOL)arg1;
- (_Bool)filterNodes:(const struct TFENodeVector *)arg1 originalNodes:(struct TFENodeVector *)arg2 nodesToPreview:(struct TFENodeVector *)arg3 allowFolders:(_Bool)arg4;
- (void)ensureCGSurfaceUpdateOnDraw:(BOOL)arg1;
- (struct DataBrowserItemSpatialData)spatialDataWithDrop:(struct TDropOperation *)arg1 forNode:(const struct TFENode *)arg2 withPasteboardItem:(void *)arg3;
- (void)calculatePropertiesWithDrop:(struct TDropOperation *)arg1 forNode:(const struct TFENode *)arg2 withPasteboardItem:(void *)arg3 inPropertyList:(struct TFENodePropertyList *)arg4 forcePlace:(_Bool)arg5 applyNow:(_Bool)arg6;
- (void)springNowWithNoSpringController;
- (void)possibleSpringTargetNode:(const struct TFENode *)arg1;
- (void)reloadDataAfterGrouping;
- (void)didAcceptDropOperationOnNode:(const struct TFENode *)arg1 movingNodes:(const struct TFENodeVector *)arg2 movedNodes:(const struct TFENodeVector *)arg3 groupingFolder:(const struct TFENode *)arg4 parentsOfSourceNodes:(const struct TFENodeVector *)arg5;
- (void)didAcceptDropOperation:(const struct TDropOperation *)arg1 onNode:(const struct TFENode *)arg2;
- (BOOL)performDrop;
- (BOOL)performDropAndGetAction:(TRef_9e01da98 *)arg1;
- (BOOL)deleteEmptyContainersAfterMove;
- (void)draggingEnded:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)allowsDraggingToMoveFilesOut;
- (id)beginFlockingDragWithPBWriters:(id)arg1 mouseDownEvent:(id)arg2;
- (void)updateDraggingItemsForDrag:(id)arg1 inView:(id)arg2;
- (id)dragFlockingImageComponentsForItem:(id)arg1 atIndex:(long long)arg2 inView:(id)arg3;
- (struct TFENode)nodeForDraggingItem:(id)arg1 atIndex:(long long)arg2;
- (id)dragFlockingImageComponentsForNode:(const struct TFENode *)arg1 inView:(id)arg2;
- (double)iconSizeForView:(id)arg1;
- (id)dragFlockIconImageForNode:(const struct TFENode *)arg1 inView:(id)arg2;
- (id)dragFlockIconImageForNode:(const struct TFENode *)arg1 atIconSize:(double)arg2;
- (id)dragFlockSelectionImageForNode:(const struct TFENode *)arg1 inFrame:(struct CGRect *)arg2;
- (id)dragFlockLabelImageForNode:(const struct TFENode *)arg1 inFrame:(struct CGRect *)arg2;
- (id)dragFlockLabelImageForNode:(const struct TFENode *)arg1 inFrame:(struct CGRect *)arg2 inView:(id)arg3;
- (struct CGRect)draggingFrameForDraggingItem:(id)arg1 inView:(id)arg2;
- (long long)initialFlockingFormation;
- (double)iconSize;
- (void)dragImage:(id)arg1 offset:(struct CGSize)arg2 event:(id)arg3 nodes:(const struct TFENodeVector *)arg4 pasteboard:(id)arg5 source:(id)arg6;
- (void)dragImage:(id)arg1 offset:(struct CGSize)arg2 event:(id)arg3 pasteboard:(id)arg4 source:(id)arg5;
- (void)spatialDataForNodes:(const struct TFENodeVector *)arg1 getAnchors:(map_0cdea9df *)arg2 getBounds:(map_c5101478 *)arg3;
- (unsigned long long)dragOperationWhenMovingInsideTargetAndCheckingModifiers;
- (void)unregisterContainerWithNodeKeyCache:(const struct TFENode *)arg1;
- (void)registerContainerWithNodeKeyCache:(const struct TFENode *)arg1;

@end

@interface FINodeUIElement : NSObject
{
    unsigned long long _index;
    struct TNSRef<NSView *> _containerView;
    struct TFENode _node;
    struct TNSRef<id> _parent;
}

@property(nonatomic) struct TFENode node; // @synthesize node=_node;
@property(nonatomic) unsigned long long index; // @synthesize index=_index;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (struct CGRect)frame;
- (void)setSelection:(BOOL)arg1;
- (BOOL)isSelected;
@property(retain) id parent;
- (id)containerView;
- (BOOL)isEqual:(id)arg1;
- (id)initWithIndex:(unsigned long long)arg1 containerView:(id)arg2 node:(const struct TFENode *)arg3;

@end

@interface TBrowserViewMoreNode : NSObject
{
}

- (id)imageTitle;
- (id)imageRepresentation;
- (id)imageRepresentationType;
- (id)imageUID;
- (struct OpaqueNodeRef *)nodeRef;

@end

@interface TBrowserViewDataSource : NSObject <NSOutlineViewDataSource>
{
    TBrowserViewController *_controller;
    struct TNodeToChildrenMap *_nodeChildrenMap;
    struct TGroupClientNodes *_nodeGroups;
    BOOL _groupsNeedSorting;
}

+ (id)moreNode;
@property(nonatomic) TBrowserViewController *controller; // @synthesize controller=_controller;
- (unsigned long long)indexForChild:(const struct TFENode *)arg1 inParent:(const struct TFENode *)arg2;
- (struct TFENode)childOfNode:(const struct TFENode *)arg1 atIndex:(unsigned long long)arg2;
- (const struct TFENodeVector *)childrenOfNode:(const struct TFENode *)arg1;
- (unsigned int)generationCountForSubContainer:(const struct TFENode *)arg1;
- (unsigned int)generationCount;
- (void)swapChildren:(id)arg1 ofSubContainer:(const struct TFENode *)arg2;
- (void)swapChildren:(id)arg1;
- (id)createDataSourceWithClonedChildren;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (void)sortGroupsAccordingToNodes:(const struct TFENode *)arg1 withCollator:(const struct SortCollator *)arg2;
- (void)sortWithCollator:(const struct SortCollator *)arg1;
- (void)replaceChildrenOf:(const struct TFENode *)arg1 with:(const struct TFENodeVector *)arg2;
- (void)sortAllChildrenOf:(const struct TFENode *)arg1 withCollator:(const struct SortCollator *)arg2 grouping:(BOOL)arg3;
- (void)removeAllNodesInContainer:(const struct TFENode *)arg1;
- (BOOL)removeNodes:(const struct TFENodeVector *)arg1 forContainer:(const struct TFENode *)arg2;
- (BOOL)addNodes:(const struct TFENodeVector *)arg1 forContainer:(const struct TFENode *)arg2;
- (BOOL)addNodes:(const struct TFENodeVector *)arg1 forContainer:(const struct TFENode *)arg2 withComparator:(struct TBaseNodeComparator *)arg3;
- (BOOL)updateNodesGroup:(const struct TGroupedNodes *)arg1 forContainer:(const struct TFENode *)arg2 groupChanges:(struct TGroupChanges *)arg3 sortGroupsAscending:(BOOL)arg4;
- (BOOL)removeNodesInGroups:(const struct TFENodeVector *)arg1 forContainer:(const struct TFENode *)arg2 groupChanges:(struct TGroupChanges *)arg3 sortGroupsAscending:(BOOL)arg4;
- (BOOL)addNodesInGroups:(const struct TGroupedNodes *)arg1 forContainer:(const struct TFENode *)arg2 removeAll:(BOOL)arg3 groupChanges:(struct TGroupChanges *)arg4 sortGroupsAscending:(BOOL)arg5;
- (void)sortGroupsIfNeeded:(const struct TFENode *)arg1 ascending:(BOOL)arg2;
- (BOOL)moveNodes:(const struct TFENodeVector *)arg1 toGroup:(struct TGroup *)arg2 forContainer:(const struct TFENode *)arg3 updatedGroups:(set_55a3e8f7 *)arg4;
- (BOOL)removeNodesInGroups:(const struct TFENodeVector *)arg1 forContainer:(const struct TFENode *)arg2 exceptInGroup:(const struct TFENode *)arg3 groupsChanged:(set_55a3e8f7 *)arg4;
- (BOOL)removeNodes:(const struct TFENodeVector *)arg1 fromGroup:(const struct TFENode *)arg2 forContainer:(const struct TFENode *)arg3;
- (struct TGroup *)groupForClientNode:(const struct TFENode *)arg1;
- (struct TGroup *)groupOfNode:(const struct TFENode *)arg1;
- (struct TFENode)groupNodeOfNode:(const struct TFENode *)arg1;
- (unsigned long long)indexForGroupedChild:(const struct TFENode *)arg1 inParent:(const struct TFENode *)arg2 countGroups:(BOOL)arg3;
- (struct TFENode)groupedChildOfNode:(const struct TFENode *)arg1 atIndex:(unsigned long long)arg2 countGroups:(BOOL)arg3;
- (BOOL)isGroupRow:(long long)arg1 inContainer:(const struct TFENode *)arg2;
- (unsigned long long)groupedChildrenCountOfNode:(const struct TFENode *)arg1 countGroups:(BOOL)arg2;
- (BOOL)addNodes:(const struct TFENodeVector *)arg1 toGroup:(struct TGroup *)arg2 forContainer:(const struct TFENode *)arg3 updatedGroups:(set_55a3e8f7 *)arg4;
- (struct TFENode)clientNodeForGroup:(struct TGroup *)arg1 forContainer:(const struct TFENode *)arg2;
- (void)sortGroups:(const struct TFENode *)arg1 ascending:(BOOL)arg2;

@end

@interface TBrowserTableView : NSBrowserTableView <TShrinkToFitDelegateProtocol>
{
    BOOL _itemHitOnMouseDown;
    BOOL _mouseDownInMoreButton;
    TTableViewShrinkToFitController *_stfController;
    TColumnMoreCell *_moreCell;
}

- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)updateDraggingItemsForDrag:(id)arg1;
- (void)keyDown:(id)arg1;
- (id)inputContext;
- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (struct CGRect)rectOfRow:(long long)arg1;
- (id)stfEditorController;
- (void)shrinkToFitTextViewAboutToClose;
- (void)shrinkToFitTextViewEditingComplete:(id)arg1;
- (BOOL)shrinkToFitTextViewAboutToOpen;
- (id)preparedCellAtColumn:(long long)arg1 row:(long long)arg2;
- (void)updateSTFEditorLocation;
- (struct CGRect)maxSTFEditorFrameFromTitleFrame:(struct CGRect)arg1;
- (void)stopEditing:(BOOL)arg1;
- (BOOL)startEditingWithNode:(const struct TFENode *)arg1 renameOp:(id)arg2;
- (void)editColumn:(long long)arg1 row:(long long)arg2 withEvent:(id)arg3 select:(BOOL)arg4;
- (double)optimalHeight;
- (void)selectRowIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (void)scrollSelectedRowToVisible;
- (void)dragImage:(id)arg1 at:(struct CGPoint)arg2 offset:(struct CGSize)arg3 event:(id)arg4 pasteboard:(id)arg5 source:(id)arg6 slideBack:(BOOL)arg7;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (void)drawRect:(struct CGRect)arg1;
- (id)menuForEvent:(id)arg1;
- (void)quickLookWithEvent:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)_typeSelectInterpretKeyEvent:(id)arg1;
- (void)commonPostMouseDown:(id)arg1 controller:(id)arg2;
- (BOOL)commonMouseDownAndEarlyReturn:(id)arg1 controller:(id)arg2;
- (void)mouseUp:(id)arg1;
- (BOOL)canDragRowsWithIndexes:(id)arg1 atPoint:(struct CGPoint)arg2;
- (unsigned long long)hitTestForEvent:(id)arg1 row:(long long)arg2;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)handleUnicodeTextInput:(id)arg1 atTime:(double)arg2;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)finalize;
- (void)dealloc;
- (struct TFENode)nodeAtRow:(long long)arg1;
- (id)itemAtRow:(long long)arg1;
- (id)viewController;
- (id)columnViewController;
- (BOOL)_supportsTrackingAreasForCells;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TColumnCell : TListViewIconAndTextCell
{
}

- (struct CGRect)labelRectForBounds:(const struct CGRect *)arg1 isSelected:(BOOL)arg2;
- (void)awakeCommon;
- (void)initCommon;

@end

@interface TColumnMoreCell : TColumnCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface TBrowserTableColumnViewController : _NSBrowserTableColumnViewController
{
}

- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
@property(readonly, nonatomic) TColumnViewController *columnViewController; // @dynamic columnViewController;
- (id)browserTableView;
- (BOOL)selectionShouldChangeInTableView:(id)arg1;

@end

@interface TViewBasedBrowserTableColumnViewController : TBrowserTableColumnViewController
{
    double _textSize;
    struct TNSRef<NSColor *> _groupNameTextColor;
    struct TNSRef<NSString *> _groupFontName;
}

@property(nonatomic) double textSize; // @synthesize textSize=_textSize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
@property(readonly, nonatomic) NSColor *groupNameTextColor; // @dynamic groupNameTextColor;
@property(readonly, nonatomic) NSString *groupFontName; // @dynamic groupFontName;
- (void)columnWasAdded;
- (void)aboutToTearDown;
- (id)nibBundle;
- (void)loadView;

@end

@interface TColumnView : NSBrowser <NSDraggingSource>
{
    TColumnViewController *_controller;
    BOOL _shouldIgnoreNextDoClick;
    BOOL _shouldPerformDoClickOnMouseUp;
}

+ (Class)tableColumnViewControllerClass;
+ (void)setGlobalGroupingForAllColumns:(BOOL)arg1;
+ (Class)browserTableViewClass;
@property(nonatomic) BOOL shouldPerformDoClickOnMouseUp; // @synthesize shouldPerformDoClickOnMouseUp=_shouldPerformDoClickOnMouseUp;
@property(nonatomic) BOOL shouldIgnoreNextDoClick; // @synthesize shouldIgnoreNextDoClick=_shouldIgnoreNextDoClick;
@property(readonly, nonatomic) TColumnViewController *controller; // @synthesize controller=_controller;
- (void)_collapseAutoExpandedItems;
- (void)selectRowIndexes:(id)arg1 inColumn:(long long)arg2;
- (BOOL)isDropCandidateAtRow:(long long)arg1 column:(long long)arg2;
- (void)reloadColumn:(long long)arg1;
- (void)setColumnWidthToIdealWidth:(long long)arg1;
- (long long)idealWidthForColumn:(long long)arg1;
- (void)draggingEnded:(id)arg1;
- (void)updateDraggingItemsForDrag:(id)arg1;
- (BOOL)ignoreModifierKeysForDraggingSession:(id)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)doDoubleClick:(id)arg1;
- (void)doClick:(id)arg1;
- (void)_ensureValidSelection;
- (void)addColumn;
- (void)setLastColumn:(long long)arg1;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (double)rowHeight;
- (void)setRowHeight:(double)arg1;
- (void)setFocusOnColumn:(long long)arg1;
- (id)browserTableViewAtIndex:(long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;

@end

@interface TColumnGroupRowView : NSTableRowView
{
    struct TFENode _node;
    TViewBasedBrowserTableColumnViewController *_tableViewController;
}

@property(nonatomic) TViewBasedBrowserTableColumnViewController *tableViewController; // @synthesize tableViewController=_tableViewController;
@property(nonatomic) struct TFENode node; // @synthesize node=_node;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface TColumnGroupHeaderView : NSView
{
    TGroupTitleTextField *_groupTextField;
}

@property(retain, nonatomic) TGroupTitleTextField *groupTextField; // @synthesize groupTextField=_groupTextField;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)finalize;
- (void)dealloc;

@end

@interface TColumnViewController : TBrowserViewController <FIAliasResolution, NSBrowserDelegate, NSMenuDelegate, AccessibilityProtocol, TNameTextFieldDelegate>
{
    struct TFENode _draggingSourceContainer;
    BOOL _selectedItemNeedsPreviewView;
    struct TNSRef<TColumnPreviewController *> _previewViewController;
    double _textSize;
    BOOL _showIcons;
    BOOL _showPreviewColumn;
    BOOL _configuring;
    BOOL _resizingAllColumns;
    BOOL _forwardKeydownsToNextColumn;
    BOOL _delayedOpening;
    int _arrangeBy;
    struct TAliasesTargets _resolvedAliasTable;
    struct StColumnOptimizer *_optimizer;
    struct TFENode _brokenAlias;
    NSTimer *_delayedContainerSynchingTimer;
    struct TColumnOptimizerContainers _delayedContainers;
    struct TColumnPreviewQTEjectHelper *_ejectHelper;
    long long _columnIndexOriginatingDrag;
}

+ (double)columnViewDelayBeforeDisplay;
@property(nonatomic) int arrangeBy; // @synthesize arrangeBy=_arrangeBy;
@property(nonatomic) BOOL delayedOpening; // @synthesize delayedOpening=_delayedOpening;
@property(nonatomic) BOOL showPreviewColumn; // @synthesize showPreviewColumn=_showPreviewColumn;
@property(nonatomic) BOOL showIcons; // @synthesize showIcons=_showIcons;
@property(nonatomic) double textSize; // @synthesize textSize=_textSize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)accessibilityPerformAction:(id)arg1 onCell:(id)arg2;
- (BOOL)shouldDisplayComputerIconsInColumn:(long long)arg1;
- (id)columnView;
- (long long)focusedColumn;
- (long long)lastContainerColumn;
- (long long)lastColumn;
- (id)selectedItemsForColumn:(long long)arg1;
- (void)cmdArrangeByLabel:(id)arg1;
- (void)cmdArrangeByKind:(id)arg1;
- (void)cmdArrangeByPhysicalSize:(id)arg1;
- (void)cmdArrangeByDateAdded:(id)arg1;
- (void)cmdArrangeByLastOpenDate:(id)arg1;
- (void)cmdArrangeByCreationDate:(id)arg1;
- (void)cmdArrangeByModDate:(id)arg1;
- (void)cmdArrangeByName:(id)arg1;
- (void)cmdArrange:(id)arg1;
- (void)cmdArrangeByHelper:(int)arg1;
- (void)springNowWithNoSpringController;
- (BOOL)browser:(id)arg1 acceptDrop:(id)arg2 atRow:(long long)arg3 column:(long long)arg4 dropOperation:(unsigned long long)arg5;
- (unsigned long long)browser:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long *)arg3 column:(long long *)arg4 dropOperation:(unsigned long long *)arg5;
- (BOOL)browser:(id)arg1 canDragRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 withEvent:(id)arg4;
- (BOOL)browser:(id)arg1 writeRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 toPasteboard:(id)arg4;
- (void)dragImage:(id)arg1 offset:(struct CGSize)arg2 event:(id)arg3 column:(long long)arg4;
- (void)dragImage:(id)arg1 offset:(struct CGSize)arg2 event:(id)arg3;
- (id)dragFlockLabelImageForNode:(const struct TFENode *)arg1 inFrame:(struct CGRect *)arg2 inView:(id)arg3;
- (id)dragFlockIconImageForNode:(const struct TFENode *)arg1 inView:(id)arg2;
- (void)updateDraggingItemsForDrag:(id)arg1 inView:(id)arg2;
- (double)iconSizeForView:(id)arg1;
@property(nonatomic) double preferredColumnWidth;
- (void)columnViewConfigurationDidChange:(id)arg1;
- (struct TFENode)thumbnailTargetNodeForNode:(const struct TFENode *)arg1;
- (void)selectionChanged:(id)arg1 inColumn:(long long)arg2;
- (BOOL)browser:(id)arg1 shouldAutoExpandItem:(id)arg2;
- (void)browserDidScroll:(id)arg1;
- (double)browser:(id)arg1 shouldSizeColumn:(long long)arg2 forUserResize:(BOOL)arg3 toWidth:(double)arg4;
- (double)browser:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (double)browser:(id)arg1 heightOfRow:(long long)arg2 inColumn:(long long)arg3;
- (void)browser:(id)arg1 willStopUsingItem:(id)arg2 forColumn:(long long)arg3;
- (void)browser:(id)arg1 willStartUsingItem:(id)arg2 forColumn:(long long)arg3;
- (BOOL)shouldObserveOrUnobserveNode:(const struct TFENode *)arg1 forColumn:(long long)arg2;
- (BOOL)browser:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (id)browser:(id)arg1 headerViewControllerForItem:(id)arg2;
- (id)browser:(id)arg1 previewViewControllerForLeafItem:(id)arg2;
- (void)showDelayedPreview;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (id)browser:(id)arg1 objectValueForItem:(id)arg2;
- (BOOL)browser:(id)arg1 isLeafItem:(id)arg2;
- (id)browser:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)browser:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)rootItemForBrowser:(id)arg1;
- (const struct TFENode *)rootNode;
- (void)preferencesUpdated:(id)arg1;
- (void)viewContextMenuNeedsArrangeBy:(char *)arg1 cleanUpBy:(char *)arg2 sortBy:(char *)arg3 currentlySorted:(char *)arg4;
- (void)menuNeedsUpdate:(id)arg1;
- (void)selectionChangedByUserAction:(BOOL)arg1;
- (struct TFENode)focusNode;
- (BOOL)shouldCloseWindowOnTargetMove:(const struct TFENode *)arg1;
- (void)updatePropertiesForNodes:(const vector_614ab7ad *)arg1 inContainerNode:(const struct TFENode *)arg2;
- (void)reloadNodes:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (void)reloadLastColumn;
- (void)setTargetPath:(const struct TFENodeVector *)arg1;
- (int)updateNeededForNode:(const struct TFENode *)arg1 property:(unsigned long long)arg2;
@property(readonly, nonatomic) TColumnPreviewController *previewViewController; // @dynamic previewViewController;
- (void)reloadData;
- (void)groupChangedForNodes:(const struct TFENodeVector *)arg1 inContainerNode:(const struct TFENode *)arg2;
- (void)reloadDataForContainerNode:(const struct TFENode *)arg1;
- (unsigned long long)itemCountForColumn:(long long)arg1;
- (id)columnsForContainer:(const struct TFENode *)arg1 upToColumn:(long long)arg2;
- (void)syncOnActivateIfRemoteTarget;
- (void)updateSTFEditorLocation;
- (void)stopEditing:(BOOL)arg1;
- (BOOL)startEditingWithNode:(const struct TFENode *)arg1 renameOp:(id)arg2;
- (BOOL)browser:(id)arg1 shouldEditItem:(id)arg2;
- (id)quickLookSharedPreviewViewForPreviewNode:(const struct TFENode *)arg1;
- (id)zoomImageForNode:(const struct TFENode *)arg1 contentRect:(struct CGRect *)arg2;
- (void)ejectButtonClicked:(id)arg1;
- (void)deselectAllNodes;
- (void)revealNodes:(const struct TFENodeVector *)arg1 select:(BOOL)arg2;
- (void)itemDoubleClick:(id)arg1;
- (struct TFENode)resolvedNodeForTarget:(const struct TFENode *)arg1;
- (struct TFENode)containerNodeForTarget:(const struct TFENode *)arg1;
- (void)itemSelection:(id)arg1;
- (id)getCellForNode:(const struct TFENode *)arg1;
- (void)configureRowHeight;
- (void)setShowIconPreview:(BOOL)arg1;
- (void)updateRowHeights;
- (void)unbindViewSettings;
- (void)privateBindSettings;
- (void)prefetchIconsInRange:(struct _NSRange)arg1 forColumn:(long long)arg2;
- (struct CGSize)idealViewSize;
- (double)iconSizeForColumn:(long long)arg1;
- (struct CGRect)iconFrameForNode:(const struct TFENode *)arg1;
- (struct CGRect)frameForNode:(const struct TFENode *)arg1;
- (double)computerIconSize;
- (double)rowHeightForComputerIconAndText;
- (double)variableIconSize;
- (double)rowHeightForVariableIconAndText;
- (unsigned long long)typeSelectNodeCount;
- (long long)typeSelectIndexForNode:(const struct TFENode *)arg1;
- (struct TFENode)typeSelectNodeAtIndex:(unsigned long long)arg1;
- (unsigned long long)selectedNodesCountInFocus;
- (unsigned long long)selectedNodesCount;
- (unsigned long long)itemCount;
- (void)updateScrollPosition;
- (BOOL)nodeIsSelected:(const struct TFENode *)arg1;
- (void)getVisibleNodes:(struct TFENodeVector *)arg1;
- (void)selectAllNodes;
- (id)browser:(id)arg1 selectionIndexesForProposedSelection:(id)arg2 inColumn:(long long)arg3;
- (void)setSelectedNodes:(const struct TFENodeVector *)arg1 byExtendingSelection:(BOOL)arg2;
- (void)setSelectedItems:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (void)setSelectedItems:(id)arg1 inColumn:(long long)arg2 byExtendingSelection:(BOOL)arg3;
- (void)sortDataSourceAsynchronously:(BOOL)arg1 revealSelection:(BOOL)arg2;
- (void)sortDataSource;
- (struct TBaseNodeComparator *)createComparator:(const struct TFENode *)arg1;
- (void)springNode:(const struct TFENode *)arg1;
- (BOOL)isItem:(id)arg1 expandedAtRow:(long long)arg2 column:(long long)arg3;
- (BOOL)containsNode:(const struct TFENode *)arg1;
- (unsigned long long)indexForNode:(const struct TFENode *)arg1 getColumn:(long long *)arg2;
- (unsigned long long)indexForNode:(const struct TFENode *)arg1 inColumn:(long long)arg2;
- (unsigned long long)indexForNode:(const struct TFENode *)arg1;
- (struct TFENode)currentNode;
- (void)alias:(const struct TFENode *)arg1 resolvedAs:(const struct TFENode *)arg2 temporaryNode:(const struct TFENode *)arg3;
- (BOOL)handleKeyDown:(id)arg1 currentKey:(unsigned short *)arg2;
- (void)selectAll:(id)arg1;
- (void)setFocusToColumn:(long long)arg1;
- (long long)columnWithKeyboardFocus;
- (void)adjustPreviewColumnWidth;
- (BOOL)isPreviewColumn:(long long)arg1;
- (long long)selectedColumn;
- (BOOL)trimPath:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (const struct TFENode *)browserRoot;
- (void)closeTarget;
- (void)aboutToDestroyBrowserView;
- (void)openTarget;
- (void)restoreTransientViewState;
- (void)saveTransientViewState;
- (BOOL)retargetedInternally:(const struct TFENodeVector *)arg1;
- (void)computeTargetPathsFor:(const struct TFENodeVector *)arg1;
- (void)updateNodes:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (void)nameFieldWillDraw:(id)arg1;
- (void)folderContentChanged:(const struct FolderContentChangeDecriptor *)arg1;
- (BOOL)syncPathWithColumns:(const struct TColumnOptimizerContainers *)arg1 delayOpening:(BOOL)arg2 forwardKeydownsToNextColumn:(BOOL)arg3;
- (void)delayedContainerSynching:(id)arg1;
- (BOOL)syncTargetPath:(BOOL)arg1;
- (void)closeContainer:(const struct TFENode *)arg1;
- (void)openContainer:(const struct TFENode *)arg1;
- (void)unwindOpenCloseContainers;
- (unsigned long long)getSelectedNodesInFocus:(struct TFENodeVector *)arg1 upTo:(unsigned long long)arg2;
- (unsigned long long)getSelectedNodes:(struct TFENodeVector *)arg1 forContainer:(const struct TFENode *)arg2 upTo:(unsigned long long)arg3;
- (unsigned long long)getSelectedNodes:(struct TFENodeVector *)arg1 upTo:(unsigned long long)arg2;
- (unsigned long long)getSelectedNodes:(struct TFENodeVector *)arg1 inColumn:(long long)arg2;
- (unsigned long long)getSelectedNodes:(struct TFENodeVector *)arg1 inColumn:(long long)arg2 upTo:(unsigned long long)arg3;
- (void)getNodes:(struct TFENodeVector *)arg1 fromSet:(id)arg2 forColumn:(long long)arg3 upTo:(unsigned long long)arg4;
- (struct TFENode)nodeOrContainerAtIndex:(long long)arg1 inColumn:(long long)arg2;
- (struct TFENode)nodeAtIndex:(unsigned long long)arg1 inColumn:(long long)arg2;
- (id)itemAtIndex:(unsigned long long)arg1 inColumn:(long long)arg2;
- (struct TFENode)nodeAtLocation:(const struct CGPoint *)arg1 includeContainer:(BOOL)arg2;
- (struct TFENode)nodeAtIndex:(unsigned long long)arg1;
- (id)childAtIndex:(long long)arg1 ofColumnContainer:(const struct TFENode *)arg2;
- (BOOL)isGroupRow:(long long)arg1 inColumn:(long long)arg2;
- (unsigned long long)childrenCountOfNode:(const struct TFENode *)arg1;
- (struct TFENode)containerForColumn:(long long)arg1;
- (struct TFENode)parentNodeForColumn:(long long)arg1;
- (BOOL)shouldShowChildrenForNode:(const struct TFENode *)arg1;
- (struct StColumnOptimizer *)setOptimizer:(struct StColumnOptimizer *)arg1;
- (void)setGrouping:(BOOL)arg1;
- (BOOL)isGrouping;
- (struct TGroupManager *)groupManager:(const struct TFENode *)arg1;
- (unsigned int)viewStyle;
- (void)restoreBrowserViewState:(id)arg1;
- (id)browserViewState;
- (BOOL)makeBrowserViewFirstResponder;
- (id)nibName;
- (void)aboutToTearDown:(id)arg1;
- (void)killDelayedContainerSynchingTimer;
- (void)dealloc;
- (id)initWithDataSource:(id)arg1 andViewSettings:(id)arg2 targetPath:(const struct TFENodeVector *)arg3 browserController:(id)arg4;

@end

@interface TDesktopBandSelectionController : NSObject
{
    struct CGPoint _anchorPoint;
    struct CGPoint _mouseLocation;
    struct TFENodeVector _oldSelection;
    TDesktopMarquee *_marquee;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)updateMouseLocation:(const struct CGPoint *)arg1;
@property(readonly, nonatomic) struct CGRect selectionRect;
- (void)setOldSelection:(const struct TFENodeVector *)arg1;
- (const struct TFENodeVector *)oldSelection;
- (void)dealloc;
- (id)initWithAnchorPoint:(const struct CGPoint *)arg1;

@end

@interface TDesktopIconView : NSView <TShrinkToFitDelegateProtocol, NSDraggingSource>
{
    TDesktopViewController *_controller;
    TShrinkToFitController *_stfController;
    struct TFENode _dropTargetNode;
    TDesktopBandSelectionController *_bandSelectionController;
    struct TFENode _initiallyClickedNode;
    struct TFENode _trackingMouseDownNode;
    NSEvent *_lastMouseDownEvent;
    struct CGPoint _lastMouseDownLocation;
    BOOL _activateAfterClick;
    BOOL _startEditingOnMouseUp;
    BOOL _doubleClickOnMouseUp;
    BOOL _deselectOnMouseUp;
    BOOL _deselectOnBandSelect;
    BOOL _pastDragThreshold;
    BOOL _allowBandSelect;
    BOOL _selectionChanging;
    BOOL _dragCompletedForMouseDown;
    BOOL _performDragOperationResult;
    BOOL _trackingCancel;
    struct CGPoint _lastStableMouseLocation;
    BOOL _autoExposeEnabled;
    double _autoExposeDelay;
    double _exitAutoExposeDelay;
    BOOL _inShowDesktopMode;
    NSTimer *_autoExposeTimer;
}

@property(nonatomic) struct CGPoint lastMouseDownLocation; // @synthesize lastMouseDownLocation=_lastMouseDownLocation;
@property(retain, nonatomic) NSEvent *lastMouseDownEvent; // @synthesize lastMouseDownEvent=_lastMouseDownEvent;
@property(nonatomic) TDesktopViewController *controller; // @synthesize controller=_controller;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (BOOL)ignoreModifierKeysForDraggingSession:(id)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingEnded:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)updateDraggingItemsForDrag:(id)arg1;
- (void)setDropTargetNode:(const struct TFENode *)arg1;
- (void)cancelPendingDesktopExpose;
- (void)scheduleExitAutoExpose;
- (void)scheduleAutoExpose;
- (void)performDesktopExpose;
- (void)exitDesktopExpose;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)updateTrackingAreas;
- (void)keyDown:(id)arg1;
- (id)inputContext;
- (void)mouseDragged:(id)arg1;
- (void)trackDrag:(id)arg1;
- (id)dragImage;
- (struct CGRect)maxBoundingFrameForNodes:(const struct TFENodeVector *)arg1;
- (void)bandSelect:(const struct CGPoint *)arg1;
- (BOOL)isBandSelecting;
- (void)mouseUp:(id)arg1;
- (void)quickLookWithEvent:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)handleClick:(const struct CGPoint *)arg1 onNode:(const struct TFENode *)arg2 withModifiers:(unsigned long long)arg3 andClickCount:(long long)arg4;
- (void)shrinkToFitTextViewAboutToClose;
- (void)shrinkToFitTextViewEditingComplete:(id)arg1;
- (BOOL)shrinkToFitTextViewAboutToOpen;
- (void)scrollSTFEditorIntoView;
- (void)stopEditing:(BOOL)arg1;
- (BOOL)startEditingWithNode:(const struct TFENode *)arg1 renameOp:(id)arg2 afterDelay:(BOOL)arg3;
- (struct CGRect)maxSTFEditorFrameForNode:(const struct TFENode *)arg1;
- (struct CGPoint)convertPointToDesktop:(struct CGPoint)arg1;
- (struct CGRect)convertRectToDesktop:(struct CGRect)arg1;
- (struct CGPoint)convertPointFromDesktop:(struct CGPoint)arg1;
- (struct CGRect)convertRectFromDesktop:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)renderNodes:(const struct TFENodeVector *)arg1 inContext:(struct CGContext *)arg2 forDrag:(BOOL)arg3;
- (BOOL)isOpaque;
- (BOOL)canBecomeKeyView;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TDesktopIconUIElement : FINodeUIElement
{
}

- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (void)accessibilityPerformAction:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (void)showContextualMenuForNode:(const struct TFENode *)arg1;
- (struct CGRect)frame;
- (void)setSelection:(BOOL)arg1;
- (BOOL)isSelected;
- (BOOL)isEqual:(id)arg1;
- (id)initWithNode:(const struct TFENode *)arg1 containerView:(id)arg2;
@property(readonly, nonatomic) TDesktopIconView *containerView; // @dynamic containerView;

@end

@interface TDesktopViewPostProcess : TSortingPostProcess
{
    _Bool _loadThumbnails;
    unsigned int _iconSize;
    struct TFENode _target;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)processNodes:(struct TFENodeVector *)arg1 andGroup:(struct TGroupedNodes *)arg2 withCanceledFlag:(_Bool *)arg3;
- (id)initWithComparator:(struct TBaseNodeComparator *)arg1 andGroupManager:(struct TGroupManager *)arg2 loadThumbnails:(_Bool)arg3 withIconSize:(unsigned int)arg4 forTarget:(const struct TFENode *)arg5;

@end

@interface TDesktopViewController : TBrowserViewController <TIconInlinePreviewDataSource>
{
    struct unordered_map<TFENode, TNSRef<TDesktopIcon *>, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TDesktopIcon *>>>> _nodeIconMap;
    TFinderIconMetricsController *_iconController;
    TDesktopIconLayoutController *_layout;
    struct TDesktopInfoExtractorController *_infoController;
    struct pair<int, std::__1::map<TIconRef, TRegion, std::__1::less<TIconRef>, std::__1::allocator<std::__1::pair<const TIconRef, TRegion>>>> _iconRegionCache;
    struct TFENodeVector _selectedNodes;
    struct TFENode _selectionAnchorNode;
    double _iconSize;
    double _gridSpacing;
    struct CGPoint _gridOffset;
    double _textSize;
    BOOL _labelOnBottom;
    BOOL _showItemInfo;
    int _arrangeBy;
    int _desktopArrangementMillisecondDuration;
    struct CGRect _anchoredMaxLabelBounds;
    struct CGRect _anchoredSelectionRectBounds;
    struct CGRect _anchoredIconBounds;
    struct CGRect _anchoredIconMaxBounds;
    struct map<TDesktopViewOptionValue, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>, std::__1::less<TDesktopViewOptionValue>, std::__1::allocator<std::__1::pair<const TDesktopViewOptionValue, std::__1::map<TFENode, CGPoint, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>>>>> _viewOptionToSavedLayoutMap;
    TIconInlinePreviewController *_inlinePreviewController;
    TGroupInFolderAnimationController *_groupInFolderAnimationController;
    BOOL _animatingGroupInFolder;
    BOOL _drawPending;
    BOOL _applySnapToGrid;
}

+ (id)sharedDesktopViewController;
@property(nonatomic) int arrangeBy; // @synthesize arrangeBy=_arrangeBy;
@property(nonatomic) BOOL showItemInfo; // @synthesize showItemInfo=_showItemInfo;
@property(nonatomic) BOOL labelOnBottom; // @synthesize labelOnBottom=_labelOnBottom;
@property(nonatomic) double textSize; // @synthesize textSize=_textSize;
@property(nonatomic) struct CGPoint gridOffset; // @synthesize gridOffset=_gridOffset;
@property(nonatomic) double gridSpacing; // @synthesize gridSpacing=_gridSpacing;
@property(nonatomic) double iconSize; // @synthesize iconSize=_iconSize;
@property(readonly, nonatomic) TDesktopIconLayoutController *layoutController; // @synthesize layoutController=_layout;
@property(readonly, nonatomic) struct CGRect anchoredIconMaxBounds; // @synthesize anchoredIconMaxBounds=_anchoredIconMaxBounds;
@property(readonly, nonatomic) struct CGRect anchoredIconBounds; // @synthesize anchoredIconBounds=_anchoredIconBounds;
@property(readonly, nonatomic) struct CGRect anchoredSelectionRectBounds; // @synthesize anchoredSelectionRectBounds=_anchoredSelectionRectBounds;
@property(readonly, nonatomic) struct CGRect anchoredMaxLabelBounds; // @synthesize anchoredMaxLabelBounds=_anchoredMaxLabelBounds;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)unregisterContainerWithNodeKeyCache:(const struct TFENode *)arg1;
- (void)registerContainerWithNodeKeyCache:(const struct TFENode *)arg1;
- (struct CGRect)infoTextMaxFrame:(const struct TFENode *)arg1;
- (void)invalidateInfoTextForKeyNodes:(const struct TFENodeVector *)arg1;
- (void)previewPanelDidClose:(id)arg1;
- (void)previewPanelDidOpen:(id)arg1;
- (void)selectStartupDisk;
- (id)quickLookSharedPreviewViewForPreviewNode:(const struct TFENode *)arg1;
- (id)zoomImageForNode:(const struct TFENode *)arg1 contentRect:(struct CGRect *)arg2;
- (void)inlinePreviewIsVisible:(BOOL)arg1 forItem:(id)arg2;
- (void)inlinePreviewWillLoadForItem:(id)arg1;
- (struct CGRect)inlinePreviewContentFrameForItem:(id)arg1;
- (struct CGRect)inlinePreviewFrameForItem:(id)arg1;
- (int)inlinePreviewModeForItem:(id)arg1 flavor:(int *)arg2;
@property(readonly) NSArray *inlinePreviewVisibleItems;
@property(readonly) BOOL inlinePreviewLayerIsInWindowServer;
@property(readonly) CALayer *inlinePreviewLayer;
@property(readonly) NSView *inlinePreviewView;
- (BOOL)inlinePreviewMouseDown:(id)arg1;
- (void)disableInlinePreviewTrackingAreasAndStopPlaying:(BOOL)arg1;
- (void)updateInlinePreviewTrackingAreas;
@property BOOL inlinePreviewEnabled;
- (void)windowDidDeactivate;
- (void)windowDidActivate;
- (BOOL)receiveDrop:(struct TDropOperation *)arg1 draggingInfo:(id)arg2;
- (void)receivePrivateDrag:(struct TDropOperation *)arg1 draggingInfo:(id)arg2;
- (BOOL)determineSnapToGridState:(struct TDropOperation *)arg1;
- (void)adjustForOutOfBoundsItems;
- (void)spatialDataForNodes:(const struct TFENodeVector *)arg1 getAnchors:(map_0cdea9df *)arg2 getBounds:(map_c5101478 *)arg3;
- (struct DataBrowserItemSpatialData)spatialDataWithDrop:(struct TDropOperation *)arg1 forNode:(const struct TFENode *)arg2 withPasteboardItem:(void *)arg3;
- (struct DataBrowserItemSpatialData)desktopSpatialDataFromViewSpatialData:(const struct DataBrowserItemSpatialData *)arg1;
- (void)calculatePropertiesWithDrop:(struct TDropOperation *)arg1 forNode:(const struct TFENode *)arg2 withPasteboardItem:(void *)arg3 inPropertyList:(struct TFENodePropertyList *)arg4 forcePlace:(_Bool)arg5 applyNow:(_Bool)arg6;
- (void)dragImage:(id)arg1 offset:(struct CGSize)arg2 event:(id)arg3 nodes:(const struct TFENodeVector *)arg4 pasteboard:(id)arg5 source:(id)arg6;
- (id)dragFlockLabelImageForNode:(const struct TFENode *)arg1 inFrame:(struct CGRect *)arg2;
- (void)springRefreshNode:(const struct TFENode *)arg1;
- (void)springNode:(const struct TFENode *)arg1;
- (struct CGSize)idealViewSize;
- (struct CGRect)extendedDesktopIconFrameForNode:(const struct TFENode *)arg1;
- (struct CGRect)desktopIconFrameForNode:(const struct TFENode *)arg1;
- (struct CGRect)iconFrameForNode:(const struct TFENode *)arg1;
- (struct CGRect)desktopFrameForNode:(const struct TFENode *)arg1;
- (struct CGRect)frameForNode:(const struct TFENode *)arg1;
- (void)viewFrameChanged:(id)arg1;
- (unsigned long long)typeSelectNodeCount;
- (long long)typeSelectIndexForNode:(const struct TFENode *)arg1;
- (struct TFENode)typeSelectNodeAtIndex:(unsigned long long)arg1;
- (struct TFENode)nextNode:(const struct TFENodeVector *)arg1;
- (void)deselectAllNodes;
- (void)selectAllNodes;
- (void)revealNodes:(const struct TFENodeVector *)arg1 select:(BOOL)arg2;
- (void)titleOfNode:(const struct TFENode *)arg1 didChangeTo:(id)arg2 renameOp:(id)arg3;
- (void)updateSTFEditorLocation;
- (void)stopEditing:(BOOL)arg1;
- (BOOL)startEditingWithNode:(const struct TFENode *)arg1 renameOp:(id)arg2;
- (BOOL)handleKeyDown:(id)arg1 currentKey:(unsigned short *)arg2;
- (void)unselectNodes:(const struct TFENodeVector *)arg1;
- (void)selectNodes:(const struct TFENodeVector *)arg1;
- (BOOL)nodeIsSelected:(const struct TFENode *)arg1;
- (void)setSelectedNodes:(const struct TFENodeVector *)arg1 byExtendingSelection:(BOOL)arg2;
- (unsigned long long)getSelectedNodes:(struct TFENodeVector *)arg1 upTo:(unsigned long long)arg2;
- (void)moveSelectionAnchor:(int)arg1 byExtendingSelection:(BOOL)arg2;
- (void)labelNameOrColorChanged:(id)arg1;
- (void)preferencesUpdated:(id)arg1;
- (void)reloadData;
- (void)reloadNodes:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (int)updateNeededForNode:(const struct TFENode *)arg1 property:(unsigned long long)arg2;
- (BOOL)removeItems:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (BOOL)addItems:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2 withOperation:(id)arg3;
- (void)endNodeEventTransaction;
- (void)beginNodeEventTransaction;
- (id)postProcessOperationOfKind:(int)arg1 forContainer:(const struct TFENode *)arg2;
- (unsigned long long)itemCount;
- (void)recalcLayout;
- (void)invalidate;
- (void)draw;
- (void)invalidateLabelMetrics;
- (void)invalidateLabelMetricsForNode:(const struct TFENode *)arg1;
- (void)setLabelMetrics:(const struct TCachedMetricsData *)arg1 forNode:(const struct TFENode *)arg2;
- (BOOL)labelMetrics:(struct TCachedMetricsData *)arg1 forNode:(const struct TFENode *)arg2;
- (struct CGRect)editRectForNode:(const struct TFENode *)arg1;
- (void)orderNodesFront:(const struct TFENodeVector *)arg1;
- (void)setAnchor:(const struct CGPoint *)arg1 forNode:(const struct TFENode *)arg2;
- (struct CGPoint)anchorForNode:(const struct TFENode *)arg1;
- (void)scheduleUnfreezeAndSynchronizeLayout;
- (void)unfreezeAndSynchronizeLayout;
- (void)unfreezeLayout;
- (void)freezeLayout;
- (_Bool)layoutIsFrozen;
- (void)synchronizeZOrder;
- (void)synchronizeLayout;
- (void)synchronizeLayoutForNodes:(const struct TFENodeVector *)arg1;
- (BOOL)inKeepArrangedMode;
- (struct TFENode)thumbnailTargetNodeForNode:(const struct TFENode *)arg1;
- (void)invalidateThumbnails;
- (void)invalidateThumbnailsForNodes:(const struct TFENodeVector *)arg1;
- (id)copyThumbnailForNode:(const struct TFENode *)arg1;
- (void)updateSelectionState;
- (void)synchronizeLayerSelectionStateWithAnimationDuration:(double)arg1;
- (void)getSelectedNodesInSelectionOrder:(struct TFENodeVector *)arg1;
- (BOOL)isGrouping;
- (BOOL)isMainWindow;
- (void)prepareSnapToGridForUpcomingItems;
- (void)addOffsetSpatialDataFromNode:(const struct TFENode *)arg1 toPropertyList:(struct TFENodePropertyList *)arg2;
- (void)addSpatialDataForLocationInView:(struct CGPoint)arg1 toPropertyList:(struct TFENodePropertyList *)arg2;
- (struct DataBrowserItemSpatialData)spatialDataWithAnchorX:(double)arg1 andY:(double)arg2;
- (void)viewContextMenuNeedsArrangeBy:(char *)arg1 cleanUpBy:(char *)arg2 sortBy:(char *)arg3 currentlySorted:(char *)arg4;
- (void)desktopIconView:(id)arg1 nodesWereRightClickedWithEvent:(id)arg2;
- (void)desktopIconView:(id)arg1 backgroundWasRightClickedWithEvent:(id)arg2;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)updateTooltips;
- (void)updateLayout;
- (void)updateLabelsForSelectedNodes;
- (void)updateLabelsForNodes:(const struct TFENodeVector *)arg1;
- (void)updateNodes:(const struct TFENodeVector *)arg1;
- (void)updateNodes:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (void)removeIconForNode:(const struct TFENode *)arg1;
- (BOOL)mouseClick:(const struct CGPoint *)arg1 onLabelTextOfNode:(const struct TFENode *)arg2;
- (struct TString)extraInfoForNode:(const struct TFENode *)arg1;
- (void)prepareToDrawNode:(const struct TFENode *)arg1;
- (id)createIconForNode:(const struct TFENode *)arg1;
- (id)iconForNode:(const struct TFENode *)arg1;
- (const struct TFENodeVector *)nodes;
- (struct TFENode)nodeAtLocation:(const struct CGPoint *)arg1 includeContainer:(BOOL)arg2;
- (BOOL)node:(const struct TFENode *)arg1 containedOrIntersectedByRect:(const struct CGRect *)arg2;
- (const struct TRegion *)iconRegionForNode:(const struct TFENode *)arg1;
- (BOOL)node:(const struct TFENode *)arg1 hitByPoint:(struct CGPoint)arg2;
- (BOOL)labelOfNode:(const struct TFENode *)arg1 hitByPoint:(struct CGPoint)arg2;
- (BOOL)iconOfNode:(const struct TFENode *)arg1 hitByPoint:(struct CGPoint)arg2;
- (double)selectionRingExtraSizeForIconBackground;
- (long long)maxLines;
- (double)fontSize;
- (struct TLabeledTextItemMetrics)labelMetricsForNode:(const struct TFENode *)arg1;
- (struct CGRect)nameFrameForNode:(const struct TFENode *)arg1;
- (void)getExtraInfoLabelLayout:(struct TLabeledTextItemMetrics *)arg1 labelFrame:(const struct CGRect *)arg2 forNode:(const struct TFENode *)arg3;
- (double)extraInfoFontSize;
- (unsigned short)extraInfoFont;
- (void)getNameLabelLayout:(struct TLabeledTextItemMetrics *)arg1 labelFrame:(const struct CGRect *)arg2 forNode:(const struct TFENode *)arg3;
- (unsigned int)verticalFlush;
- (unsigned int)horizontalFlush;
- (unsigned short)fontForNode:(const struct TFENode *)arg1;
- (_Bool)nodeAppearsSelected:(const struct TFENode *)arg1;
- (int)labelIndexForNode:(const struct TFENode *)arg1;
- (double)labelHorizontalMargin;
- (BOOL)emptyExtraInfoForNode:(const struct TFENode *)arg1;
- (struct CGRect)labelFrameForNode:(const struct TFENode *)arg1;
- (void)updateIconMetrics;
- (struct CGSize)calculateGridSize;
@property(readonly, nonatomic) long long maxLabelLines;
- (struct TColor)extraInfoColor;
- (struct TColor)labelTextColorForNode:(const struct TFENode *)arg1 forDrag:(BOOL)arg2;
- (struct TColor)hiliteColor:(BOOL)arg1;
- (struct TColor)selectionBackgroundColor;
- (struct TString)textForNode:(const struct TFENode *)arg1;
- (BOOL)active;
- (struct CGRect)extraInfoFrameForNode:(const struct TFENode *)arg1;
- (struct CGRect)labelEditFrameForNode:(const struct TFENode *)arg1;
- (void)arrangeBy:(int)arg1;
- (void)syncIconLayoutItems;
- (void)arrange;
- (struct TBaseNodeComparator *)createComparator:(const struct TFENode *)arg1;
- (void)displayConfigurationChanged;
- (void)groupAsFolderUndoCompleted:(struct TNodeTask *)arg1 forGroupFolder:(const struct TFENode *)arg2 nodes:(const struct TFENodeVector *)arg3 status:(int)arg4;
- (void)groupAsFolderUndoStarted:(struct TNodeTask *)arg1 forFolder:(const struct TFENode *)arg2;
- (void)groupAsFolderCompleted:(struct TNodeTask *)arg1 withFolder:(const struct TFENode *)arg2 status:(int)arg3;
- (void)groupAsFolder:(struct TNodeTask *)arg1 createdGroupFolder:(const struct TFENode *)arg2;
- (void)cmdGroupAsFolder:(id)arg1;
- (struct CGPoint)anchorForGroupFolderContainingNodes:(const struct TFENodeVector *)arg1;
- (_Bool)isAnchor:(const struct CGPoint *)arg1 obscuredByWindows:(const vector_47ba67f1 *)arg2;
- (_Bool)isRect:(const struct CGRect *)arg1 obscuredByWindows:(const vector_47ba67f1 *)arg2;
- (vector_47ba67f1)potentiallyObscuringWindows;
- (_Bool)copyIconImage:(struct CGImage **)arg1 andIconFrame:(struct CGRect *)arg2 forNode:(const struct TFENode *)arg3;
- (void)cmdChangeDesktopBackground:(id)arg1;
- (void)cmdKeepArrangedByLabel:(id)arg1;
- (void)cmdKeepArrangedByKind:(id)arg1;
- (void)cmdKeepArrangedByPhysicalSize:(id)arg1;
- (void)cmdKeepArrangedByDateAdded:(id)arg1;
- (void)cmdKeepArrangedByLastOpenDate:(id)arg1;
- (void)cmdKeepArrangedByCreationDate:(id)arg1;
- (void)cmdKeepArrangedByModDate:(id)arg1;
- (void)cmdKeepArrangedByName:(id)arg1;
- (void)cmdKeepArrangedBy:(id)arg1;
- (void)cmdCleanUpSelection:(id)arg1;
- (BOOL)validateCleanUpSelection:(id)arg1;
- (void)cmdCleanUp:(id)arg1;
- (BOOL)validateCleanUp:(id)arg1;
- (void)cmdCleanUpView:(id)arg1;
- (void)cmdCleanUpByLabel:(id)arg1;
- (void)cmdCleanUpByKind:(id)arg1;
- (void)cmdCleanUpByPhysicalSize:(id)arg1;
- (void)cmdCleanUpByDateAdded:(id)arg1;
- (void)cmdCleanUpByLastOpenDate:(id)arg1;
- (void)cmdCleanUpByCreationDate:(id)arg1;
- (void)cmdCleanUpByModDate:(id)arg1;
- (void)cmdCleanUpByName:(id)arg1;
- (void)cmdCleanUpByHelper:(int)arg1;
- (BOOL)validateCleanUpBy:(id)arg1;
- (void)cmdCleanUpBy:(id)arg1;
- (BOOL)validateArrange:(id)arg1;
- (void)cmdArrange:(id)arg1;
- (unsigned long long)getCommandTarget:(SEL)arg1 outNodes:(struct TFENodeVector *)arg2 maxItems:(unsigned long long)arg3;
- (BOOL)validateOpenAltBrowse:(id)arg1;
- (BOOL)validateOpenOptionBrowse:(id)arg1;
- (void)setShowIconPreview:(BOOL)arg1;
- (void)setViewSettingsLabelOnBottom:(BOOL)arg1;
- (void)setViewSettingsIconSize:(double)arg1;
- (void)setViewSettingsArrangeBy:(int)arg1;
- (double)arrangementAnimationDuration;
- (void)invalidateSavedLayoutsForNodes:(const struct TFENodeVector *)arg1;
- (void)saveLayoutForViewOption:(const struct TDesktopViewOptionValue *)arg1;
- (_Bool)restoreLayoutForViewOption:(const struct TDesktopViewOptionValue *)arg1;
- (void)invalidateSavedLayouts;
- (void)unbindViewSettings;
- (void)privateBindSettings;
- (unsigned int)viewStyle;
- (id)firstResponder;
- (id)iconView;
- (void)loadView;
- (void)setView:(id)arg1;
- (id)nibName;
- (void)aboutToTearDown:(id)arg1;
- (void)dealloc;
- (id)initWithDataSource:(id)arg1 andViewSettings:(id)arg2 targetPath:(const struct TFENodeVector *)arg3 browserController:(id)arg4;

@end

@interface TIconLayoutController : NSObject
{
    struct CGSize _gridSize;
    struct CGRect _anchoredIconMaxBounds;
    _Bool _justifiedLayout;
    unsigned long long _gridCount;
    struct vector<TNSRef<TLayoutGrid *>, std::__1::allocator<TNSRef<TLayoutGrid *>>> _layoutGrids;
}

@property(nonatomic) _Bool justifiedLayout; // @synthesize justifiedLayout=_justifiedLayout;
@property(nonatomic) struct CGRect anchoredIconMaxBounds; // @synthesize anchoredIconMaxBounds=_anchoredIconMaxBounds;
@property(nonatomic) struct CGSize gridSize; // @synthesize gridSize=_gridSize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct CGPoint)anchorForIndex:(unsigned long long)arg1 inLayoutAtIndex:(unsigned long long)arg2;
- (void)setFrame:(struct CGRect)arg1 forLayoutAtIndex:(unsigned long long)arg2;
- (struct CGRect)frameForLayoutAtIndex:(unsigned long long)arg1;
- (void)setLayoutGridCount:(unsigned long long)arg1;
- (unsigned long long)layoutGridCount;
- (id)layoutGridAtIndex:(unsigned long long)arg1;
- (void)setupLayoutGrids;
- (void)updateLayoutGrids;
- (id)init;

@end

@interface TDesktopIconLayoutController : NSObject
{
    unordered_map_79b94d18 _gridLayouts;
    struct DisplayList _displayList;
    struct CGSize _gridSize;
    struct CGRect _anchoredIconMaxBounds;
    struct TFENodeVector _nodes;
    struct TFENodeVector _zSortedNodes;
    int _highestZPosition;
    map_0cdea9df _restoreList;
    BOOL _transformingPositions;
    _Bool _cachedLayoutIsDirty;
    _Bool _keepArranged;
    _Bool _snapToGrid;
    struct TIconLayoutDataCache *_layoutCache;
    TDesktopIconSpatialDataController *_spatialDataController;
    map_0cdea9df _freezeDriedLayout;
    struct TDisplayConfiguration _lastDisplayConfiguration;
    struct TDisplayConfiguration _lastAvailableSpace;
    struct TPreservedDisplayLayouts _preservedLayouts;
}

@property(readonly, nonatomic) TDesktopIconSpatialDataController *spatialDataController; // @synthesize spatialDataController=_spatialDataController;
@property(readonly, nonatomic) struct TIconLayoutDataCache *layoutCache; // @synthesize layoutCache=_layoutCache;
@property(nonatomic) _Bool snapToGrid; // @synthesize snapToGrid=_snapToGrid;
@property(nonatomic) _Bool keepArranged; // @synthesize keepArranged=_keepArranged;
@property(nonatomic) BOOL transformingPositions; // @synthesize transformingPositions=_transformingPositions;
@property(nonatomic) struct CGRect anchoredIconMaxBounds; // @synthesize anchoredIconMaxBounds=_anchoredIconMaxBounds;
@property(nonatomic) struct CGSize gridSize; // @synthesize gridSize=_gridSize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)clearAllRestorePoints;
- (void)clearRestorePointForNode:(const struct TFENode *)arg1;
- (BOOL)getRestorePoint:(struct CGPoint *)arg1 forNode:(const struct TFENode *)arg2;
- (void)setRestorePoint:(const struct CGPoint *)arg1 forNode:(const struct TFENode *)arg2;
- (_Bool)snapNodes:(const struct TFENodeVector *)arg1 toGridUniquely:(_Bool)arg2;
- (_Bool)restorePositionForNode:(const struct TFENode *)arg1;
- (_Bool)getBounds:(struct CGRect *)arg1 forNode:(const struct TFENode *)arg2;
- (_Bool)getMaxBounds:(struct CGRect *)arg1 forNode:(const struct TFENode *)arg2;
- (_Bool)cleanup;
- (void)clearDataForNodes:(const struct TFENodeVector *)arg1;
- (BOOL)clearAnyOverlappingVolumes:(const struct TFENodeVector *)arg1;
- (BOOL)clearVolume:(const struct TFENode *)arg1 ifIntersectionFoundWith:(const struct TFENodeVector *)arg2;
- (BOOL)volumeNode:(const struct TFENode *)arg1 collidesWithNode:(const struct TFENode *)arg2;
- (_Bool)placeNodes:(const struct TFENodeVector *)arg1;
- (_Bool)place;
- (_Bool)placeClean;
- (void)transformToGridSize:(const struct CGSize *)arg1 andAnchoredMaxIconBounds:(const struct CGRect *)arg2;
- (void)restoreAnchors:(const map_0cdea9df *)arg1;
- (void)saveAnchors:(map_0cdea9df *)arg1;
- (void)unfreezeLayout;
- (void)setFrozenAnchor:(const struct CGPoint *)arg1 forNode:(const struct TFENode *)arg2;
- (void)freezeLayout;
- (_Bool)layoutIsFrozen;
- (struct CGPoint)bringPointInBounds:(const struct CGPoint *)arg1;
- (double)closestEdgeForFrame:(const struct CGRect *)arg1 andPoint:(const struct CGPoint *)arg2 newPoint:(struct CGPoint *)arg3;
- (BOOL)anchorPointInBounds:(const struct CGPoint *)arg1;
- (_Bool)displaysContainRect:(const struct CGRect *)arg1 entirely:(_Bool)arg2;
- (struct CGPoint)adjustAnchorForDockAndDisplays:(const struct CGPoint *)arg1;
- (void)occupyGridSpotsForRect:(const struct CGRect *)arg1;
- (void)getNodes:(struct TFENodeVector *)arg1 containedOrIntersectedByRect:(struct CGRect)arg2 ignoringNodes:(const struct TFENodeVector *)arg3 boundsCheckOnly:(BOOL)arg4;
- (void)getNodes:(struct TFENodeVector *)arg1 containedOrIntersectedByRect:(struct CGRect)arg2 boundsCheckOnly:(BOOL)arg3;
- (struct TFENode)nodeAtPoint:(struct CGPoint)arg1;
- (int)nodePartHitAtPoint:(struct CGPoint)arg1 node:(struct TFENode *)arg2;
- (void)orderNodesFront:(const struct TFENodeVector *)arg1;
- (void)setZOrder:(int)arg1 forNode:(const struct TFENode *)arg2;
- (int)zOrderForNode:(const struct TFENode *)arg1;
- (const struct TFENodeVector *)zSortedNodes;
- (void)zSortNodes:(struct TFENodeVector *)arg1;
- (void)setAnchor:(const struct CGPoint *)arg1 forNode:(const struct TFENode *)arg2;
- (struct CGPoint)anchorForNode:(const struct TFENode *)arg1;
- (_Bool)getAnchor:(struct CGPoint *)arg1 forNode:(const struct TFENode *)arg2;
- (struct CGPoint)anchorForIndex:(unsigned long long)arg1;
- (void)saveCachedLayout;
- (void)setCachedLayoutIsDirty;
- (id)layoutForDisplay:(unsigned int)arg1;
- (const unordered_map_79b94d18 *)gridLayouts;
- (void)clearLayouts;
- (void)clearAllItemLocations;
- (void)setupLayoutGrids;
- (unsigned long long)countOfDisplaysIntersectingFrame:(const struct CGRect *)arg1;
- (unsigned int)displayWithRect:(const struct CGRect *)arg1;
- (unsigned int)displayAtPoint:(const struct CGPoint *)arg1;
- (struct CGRect)getDisplayFrame:(unsigned int)arg1;
- (struct CGRect)availableWindowPositioningBoundsForDisplay:(unsigned int)arg1;
- (void)updateConfigurationPreservingLayout:(BOOL)arg1;
- (void)updateDisplayConfiguration;
- (void)restoreLayoutForConfiguration:(const struct TDisplayConfiguration *)arg1;
- (void)saveLayoutForConfiguration:(const struct TDisplayConfiguration *)arg1;
- (void)setNodes:(const struct TFENodeVector *)arg1;
- (const struct TFENodeVector *)nodes;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface TFlowListView : TListView
{
}

- (void)collapseItem:(id)arg1 collapseChildren:(BOOL)arg2;
- (void)selectAll:(id)arg1;
- (id)flowViewController;

@end

@interface TFlowSplitView : NSSplitView
{
    BOOL _mouseIsDown;
}

+ (double)flowViewMinHeight;
@property(nonatomic) BOOL mouseIsDown; // @synthesize mouseIsDown=_mouseIsDown;
- (void)adjustSubviews;
- (double)dividerThickness;
- (void)mouseDown:(id)arg1;

@end

@interface TFlowView : IKImageFlowView <TDragImageProtocol>
{
    NSEvent *_lastMouseDownEvent;
}

@property(retain, nonatomic) NSEvent *lastMouseDownEvent; // @synthesize lastMouseDownEvent=_lastMouseDownEvent;
- (BOOL)isDragImageOpaque;
- (void)reloadData;
- (void)resetCursorRects;
- (void)dragImage:(id)arg1 at:(struct CGPoint)arg2 offset:(struct CGSize)arg3 event:(id)arg4 pasteboard:(id)arg5 source:(id)arg6 slideBack:(BOOL)arg7;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (void)quickLookWithEvent:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (id)_viewIdentifier;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)dealloc;

@end

@interface TFlowViewController : TListViewController <TFlowViewDelegate, NSSplitViewDelegate>
{
    TFlowView *_flowView;
    NSView *_listContainerView;
    BOOL _disableSelectionSync;
    BOOL _flowViewChangingSelection;
    BOOL _listViewChangingSelection;
    BOOL _autoSelectMode;
    BOOL _isAutoSelecting;
    unsigned long long _autoSelectIndex;
    struct TFlowViewQTEjectHelper *_ejectHelper;
}

@property(nonatomic) BOOL disableSelectionSync; // @synthesize disableSelectionSync=_disableSelectionSync;
@property(readonly) NSView *listContainerView; // @synthesize listContainerView=_listContainerView;
@property(readonly) TFlowView *flowView; // @synthesize flowView=_flowView;
- (void)sidebarDidChangeVisibility:(BOOL)arg1;
- (struct TFENode)flowNodeAtIndex:(unsigned long long)arg1;
- (id)flowIndexSetForNodes:(const struct TFENodeVector *)arg1;
- (unsigned long long)flowIndexForNode:(const struct TFENode *)arg1;
- (void)deselectAllNodes;
- (struct CGSize)minimumViewSize;
- (struct CGSize)idealViewSize;
- (id)scrollView;
- (void)setDataSource:(id)arg1;
- (unsigned int)viewStyle;
- (id)firstResponder;
- (id)nibName;
- (void)aboutToTearDown:(id)arg1;
- (void)awakeFromNib;
- (id)initWithDataSource:(id)arg1 andViewSettings:(id)arg2 targetPath:(const struct TFENodeVector *)arg3 browserController:(id)arg4;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (BOOL)removeItems:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (void)reloadNodes:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (int)updateNeededForNode:(const struct TFENode *)arg1 property:(unsigned long long)arg2;
- (void)didPerformFirstReload;
- (void)reloadData;
- (void)reloadDataForContainerNode:(const struct TFENode *)arg1;
- (void)setSelectionChangedAnimationsEnabled:(BOOL)arg1;
- (id)quickLookSharedPreviewViewForPreviewNode:(const struct TFENode *)arg1;
- (id)zoomImageForNode:(const struct TFENode *)arg1 contentRect:(struct CGRect *)arg2;
- (void)timeMachineWillStart:(id)arg1;
- (void)ensureCGSurfaceUpdateOnDraw:(BOOL)arg1;
- (id)splitView:(id)arg1 cursorOfDividerAtIndex:(unsigned long long)arg2;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (struct CGRect)globalZoomRectForNode:(const struct TFENode *)arg1;
- (struct CGRect)zoomRectForNode:(const struct TFENode *)arg1;
- (void)flowViewDidReloadData:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)imageFlow:(id)arg1 dragImage:(id)arg2 at:(struct CGPoint)arg3 offset:(struct CGSize)arg4 event:(id)arg5 pasteboard:(id)arg6 source:(id)arg7 slideBack:(BOOL)arg8;
- (void)getSelectedNodesForQuickLook:(struct TFENodeVector *)arg1 upTo:(unsigned long long)arg2;
- (void)imageFlow:(id)arg1 cellWasDoubleClickedAtIndex:(unsigned long long)arg2;
- (void)imageFlowDidStabilize:(id)arg1;
- (void)imageFlowWillStabilize:(id)arg1;
- (void)imageFlow:(id)arg1 didSelectItemAtIndex:(unsigned long long)arg2;
- (id)imageFlow:(id)arg1 accessibilityItemAtIndex:(unsigned long long)arg2 parentItem:(id)arg3;
- (unsigned long long)imageFlow:(id)arg1 writeItemsAtIndexes:(id)arg2 toPasteboard:(id)arg3;
- (id)imageFlow:(id)arg1 itemAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfItemsInImageFlow:(id)arg1;
- (double)splitterPosition;
- (id)splitView;
- (BOOL)handleKeyDown:(id)arg1 currentKey:(unsigned short *)arg2;

@end

@interface FINodeFlowUIElement : FINodeUIElement
{
}

- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionNames;
- (struct CGRect)frame;
- (void)setSelection:(BOOL)arg1;
- (BOOL)isSelected;
@property(readonly, nonatomic) IKImageFlowView *containerView; // @dynamic containerView;

@end

@interface TListView : NSOutlineView <NSDraggingSource>
{
    TListViewController *_controller;
    BOOL _itemHitOnMouseDown;
    BOOL _mouseDownInMoreButton;
    TTableViewShrinkToFitController *_stfController;
}

@property(readonly, nonatomic) TListViewController *controller; // @synthesize controller=_controller;
- (BOOL)_shouldAutoExpandItem:(id)arg1;
- (BOOL)_shouldContinueExpandAtLevel:(long long)arg1 beganAtLevel:(long long)arg2;
- (BOOL)ignoreModifierKeysForDraggingSession:(id)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggingSession:(id)arg1 movedToPoint:(struct CGPoint)arg2;
- (void)draggingSession:(id)arg1 willBeginAtPoint:(struct CGPoint)arg2;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingEnded:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)updateDraggingItemsForDrag:(id)arg1;
- (void)dragImage:(id)arg1 at:(struct CGPoint)arg2 offset:(struct CGSize)arg3 event:(id)arg4 pasteboard:(id)arg5 source:(id)arg6 slideBack:(BOOL)arg7;
- (id)dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint *)arg4;
- (id)viewController;
- (id)stfEditorController;
- (void)shrinkToFitTextViewAboutToClose;
- (void)shrinkToFitTextViewEditingComplete:(id)arg1;
- (BOOL)shrinkToFitTextViewAboutToOpen;
- (void)updateSTFEditorLocation;
- (struct CGRect)maxSTFEditorFrameFromTitleFrame:(struct CGRect)arg1;
- (void)stopEditing:(BOOL)arg1;
- (BOOL)startEditingWithNode:(const struct TFENode *)arg1 renameOp:(id)arg2;
- (id)preparedCellAtColumn:(long long)arg1 row:(long long)arg2;
- (void)editColumn:(long long)arg1 row:(long long)arg2 withEvent:(id)arg3 select:(BOOL)arg4;
- (void)selectRowIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (void)collapseItem:(id)arg1 collapseChildren:(BOOL)arg2;
- (void)expandItem:(id)arg1 expandChildren:(BOOL)arg2;
- (void)keyDown:(id)arg1;
- (id)inputContext;
- (BOOL)_canUseWhiteDisclosureTriangles;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (void)drawGridInClipRect:(struct CGRect)arg1;
- (void)drawBackgroundOverhangInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)viewWillDraw;
- (id)menuForEvent:(id)arg1;
- (void)quickLookWithEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)_typeSelectInterpretKeyEvent:(id)arg1;
- (void)commonPostMouseDown:(id)arg1 controller:(id)arg2;
- (BOOL)commonMouseDownAndEarlyReturn:(id)arg1 controller:(id)arg2;
- (void)mouseUp:(id)arg1;
- (BOOL)canDragRowsWithIndexes:(id)arg1 atPoint:(struct CGPoint)arg2;
- (unsigned long long)hitTestForEvent:(id)arg1 row:(long long)arg2;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)handleUnicodeTextInput:(id)arg1 atTime:(double)arg2;
- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (struct CGRect)_dropHighlightBackgroundRectForRow:(long long)arg1;
- (id)columnWithStringIdentifier:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (void)setDelegate:(id)arg1;
- (BOOL)_supportsTrackingAreasForCells;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)isLinen;
- (void)finalize;
- (void)dealloc;

@end

@interface TTableHeaderView : NSTableHeaderView
{
}

- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface TListViewController : TBrowserViewController <NSOutlineViewDelegate, NSOutlineViewDataSource, NSWindowDelegate, NSMenuDelegate, AccessibilityProtocol, TNameTextFieldDelegate>
{
    double _iconSize;
    double _textSize;
    BOOL _showDateModified;
    BOOL _showDateCreated;
    BOOL _showDateLastOpened;
    BOOL _showDateAdded;
    BOOL _showSize;
    BOOL _showKind;
    BOOL _showVersion;
    BOOL _showComments;
    BOOL _showLabel;
    BOOL _useRelativeDates;
    BOOL _calculateAllSizes;
    BOOL _displayingSpotlightAttributes;
    NSMutableDictionary *_columns;
    NSString *_sortColumn;
    TListTableColumn *_genericTextColumn;
    TListTableColumn *_genericDateColumn;
    TListTableColumn *_genericNumericColumn;
    TListMoreCell *_moreCell;
    BOOL _recursiveExpansion;
    BOOL _ignoreIncomingCollapses;
    BOOL _updatingColumns;
    BOOL _addingItems;
    BOOL _nodesBeingDraggedAreAllAtTheRooLevel;
    BOOL _editing;
    TListGroupTitleView *_floatingGroupTitleView;
    double _floatingHeaderY;
    NSMutableArray *_headerViews;
    set_55a3e8f7 _disclosedNodes;
    BOOL _isLinen;
}

@property(nonatomic) BOOL isLinen; // @synthesize isLinen=_isLinen;
@property(nonatomic) double floatingHeaderY; // @synthesize floatingHeaderY=_floatingHeaderY;
@property(retain, nonatomic) TListGroupTitleView *floatingGroupTitleView; // @synthesize floatingGroupTitleView=_floatingGroupTitleView;
@property(nonatomic, getter=isEditing) BOOL editing; // @synthesize editing=_editing;
@property(nonatomic) BOOL nodesBeingDraggedAreAllAtTheRooLevel; // @synthesize nodesBeingDraggedAreAllAtTheRooLevel=_nodesBeingDraggedAreAllAtTheRooLevel;
@property(nonatomic) BOOL addingItems; // @synthesize addingItems=_addingItems;
@property(nonatomic) BOOL updatingColumns; // @synthesize updatingColumns=_updatingColumns;
@property(nonatomic) BOOL ignoreIncomingCollapses; // @synthesize ignoreIncomingCollapses=_ignoreIncomingCollapses;
@property(nonatomic) BOOL recursiveExpansion; // @synthesize recursiveExpansion=_recursiveExpansion;
@property(readonly, nonatomic) BOOL displayingSpotlightAttributes; // @synthesize displayingSpotlightAttributes=_displayingSpotlightAttributes;
@property(retain, nonatomic) NSMutableDictionary *columns; // @synthesize columns=_columns;
@property(nonatomic) BOOL calculateAllSizes; // @synthesize calculateAllSizes=_calculateAllSizes;
@property(nonatomic) BOOL useRelativeDates; // @synthesize useRelativeDates=_useRelativeDates;
@property(nonatomic) BOOL showLabel; // @synthesize showLabel=_showLabel;
@property(nonatomic) BOOL showComments; // @synthesize showComments=_showComments;
@property(nonatomic) BOOL showVersion; // @synthesize showVersion=_showVersion;
@property(nonatomic) BOOL showKind; // @synthesize showKind=_showKind;
@property(nonatomic) BOOL showSize; // @synthesize showSize=_showSize;
@property(nonatomic) BOOL showDateAdded; // @synthesize showDateAdded=_showDateAdded;
@property(nonatomic) BOOL showDateLastOpened; // @synthesize showDateLastOpened=_showDateLastOpened;
@property(nonatomic) BOOL showDateCreated; // @synthesize showDateCreated=_showDateCreated;
@property(nonatomic) BOOL showDateModified; // @synthesize showDateModified=_showDateModified;
@property(nonatomic) double textSize; // @synthesize textSize=_textSize;
@property(nonatomic) double iconSize; // @synthesize iconSize=_iconSize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)deleteEmptyContainersAfterMove;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (void)expandFolderAndStartEditing:(const struct TFENode *)arg1;
- (void)expandFolderAndStartEditingDetails:(id)arg1;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)allowsDraggingToMoveFilesOut;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (struct TFENode)outlineNodeFromItem:(id)arg1;
- (id)menuForColumnHeaders;
- (void)cmdSpotlightAttribute:(id)arg1;
- (id)suggestedAttributes;
- (void)accessibilityPerformAction:(id)arg1 onCell:(id)arg2;
- (void)saveScrollPosition;
- (void)updateScrollPosition;
- (void)restoreBrowserViewState:(id)arg1;
- (id)browserViewState;
- (BOOL)selectionShouldChangeInOutlineView:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (id)outlineView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 item:(id)arg3;
- (double)outlineView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (void)springNowWithNoSpringController;
- (void)outlineView:(id)arg1 autoExpandItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldAutoExpandItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)checkForTEFFilesInContainer:(const struct TFENode *)arg1;
- (double)widthForColumn:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (void)outlineView:(id)arg1 didDragTableColumn:(id)arg2;
- (long long)initialFlockingFormation;
- (void)outlineViewColumnDidMove:(id)arg1;
- (void)outlineViewColumnDidResize:(id)arg1;
- (void)updateTableHeaderViewIfNeeded;
- (void)updateGroupTitleViewIfNeeded;
- (void)outlineView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemWillCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewItemWillExpand:(id)arg1;
- (struct TFENode)parentForNotificationHelper:(id)arg1;
- (void)expandTopLevelAsNecessary;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (void)nameFieldWillDraw:(id)arg1;
- (id)composeThumbnailsIntoICloudFolderIcon:(const struct TFENode *)arg1;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)itemIsCondensed:(id)arg1;
- (void)setCondensedForAllGroups:(BOOL)arg1;
- (id)titleViewForNode:(struct TFENode)arg1;
- (void)viewContextMenuNeedsArrangeBy:(char *)arg1 cleanUpBy:(char *)arg2 sortBy:(char *)arg3 currentlySorted:(char *)arg4;
- (void)menuNeedsUpdate:(id)arg1;
- (BOOL)isGroupNode:(const struct TFENode *)arg1;
- (void)refreshNodeSettings:(BOOL)arg1;
- (void)updateColumnConfiguration;
- (void)addColumnWithName:(id)arg1 withSettings:(id)arg2;
- (void)unbindViewSettings;
- (void)privateBindSettings;
- (void)cmdArrangeByName:(id)arg1;
- (void)cmdArrange:(id)arg1;
- (BOOL)commonValidateArrangeBy:(id)arg1;
- (void)cmdToggleVersion:(id)arg1;
- (void)cmdToggleKind:(id)arg1;
- (void)cmdToggleComments:(id)arg1;
- (void)cmdToggleLabels:(id)arg1;
- (void)cmdToggleDateCreated:(id)arg1;
- (void)cmdToggleDateAdded:(id)arg1;
- (void)cmdToggleDateLastOpened:(id)arg1;
- (void)cmdToggleSize:(id)arg1;
- (void)cmdToggleDateModified:(id)arg1;
- (void)helperCmdArrangeBy:(id)arg1;
- (void)setColumnSettings:(id)arg1;
- (id)columnSettings;
- (void)setShowIconPreview:(BOOL)arg1;
- (void)reloadColumnWithIdentifier:(id)arg1;
- (BOOL)shouldCalculateFolderSizes:(const struct TFENode *)arg1;
- (BOOL)isColumnVisible:(id)arg1;
- (void)setColumnVisibility:(id)arg1 visible:(BOOL)arg2;
- (id)visibleColumnIndices;
- (id)listView;
- (struct TFENode)thumbnailTargetNodeForNode:(const struct TFENode *)arg1;
@property(retain, nonatomic) NSString *sortColumn;
- (void)invertSortOrder:(id)arg1;
- (void)highlightAndSetSortIndicator:(id)arg1 ascending:(BOOL)arg2;
- (void)closeContainer:(const struct TFENode *)arg1;
- (void)closeTarget;
- (void)openTarget;
- (BOOL)addItems:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2 withOperation:(id)arg3;
- (BOOL)removeItems:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (BOOL)addItems:(const struct TGroupedNodes *)arg1 forContainer:(const struct TFENode *)arg2 removeAll:(BOOL)arg3 groupChanges:(struct TGroupChanges *)arg4;
- (BOOL)updateNodesGroup:(const struct TGroupedNodes *)arg1 forContainer:(const struct TFENode *)arg2 groupChanges:(struct TGroupChanges *)arg3;
- (void)removeGroups:(const struct TFENodeVector *)arg1;
- (void)reloadNodes:(const struct TFENodeVector *)arg1 forNode:(const struct TFENode *)arg2;
- (int)updateNeededForNode:(const struct TFENode *)arg1 property:(unsigned long long)arg2;
- (void)reloadColumnForNode:(const struct TFENode *)arg1 matchingProperty:(unsigned long long)arg2;
- (void)didPerformFirstReload;
- (void)reloadData;
- (void)reloadDataForContainerNode:(const struct TFENode *)arg1;
- (void)spotlightAttrSyncComplete:(const struct TGroupedNodes *)arg1 forContainer:(const struct TFENode *)arg2 withOperation:(id)arg3;
- (void)configureIndentation;
- (void)configureRowHeight;
- (double)rowHeightForIconAndText;
- (id)dateColumnNames;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)updateSTFEditorLocation;
- (void)stopEditing:(BOOL)arg1;
- (BOOL)startEditingWithNode:(const struct TFENode *)arg1 renameOp:(id)arg2;
- (void)groupAsFolderUndoCompleted:(struct TNodeTask *)arg1 forGroupFolder:(const struct TFENode *)arg2 nodes:(const struct TFENodeVector *)arg3 status:(int)arg4;
- (void)groupAsFolderUndoStarted:(struct TNodeTask *)arg1 forFolder:(const struct TFENode *)arg2;
- (void)groupAsFolderCompleted:(struct TNodeTask *)arg1 withFolder:(const struct TFENode *)arg2 status:(int)arg3;
- (void)configureGroupAsFolderAnimationController:(id)arg1;
- (_Bool)node:(const struct TFENode *)arg1 isAChildInViewOfNodes:(const struct TFENodeVector *)arg2;
- (struct CGImage *)newImageForRow:(long long)arg1 outRect:(struct CGRect *)arg2;
- (void)scrollToLeftMargin;
- (void)listViewWillDraw;
- (void)ejectButtonClicked:(id)arg1;
- (void)springNode:(const struct TFENode *)arg1;
- (void)prefetchIconsInRange:(struct _NSRange)arg1;
- (void)syncOnActivateIfRemoteTarget;
- (BOOL)nodeIsSelected:(const struct TFENode *)arg1;
- (void)getVisibleNodes:(struct TFENodeVector *)arg1;
- (void)selectAllNodes;
- (void)setSelectedNodes:(const struct TFENodeVector *)arg1 byExtendingSelection:(BOOL)arg2;
- (id)indexSetForNodes:(const struct TFENodeVector *)arg1;
- (void)revealNodes:(const struct TFENodeVector *)arg1 select:(BOOL)arg2;
- (BOOL)handleKeyDown:(id)arg1 currentKey:(unsigned short *)arg2;
- (void)handleDoubleClick:(id)arg1;
- (void)deselectAllNodes;
- (id)getCellForNode:(const struct TFENode *)arg1;
- (id)dragFlockLabelImageForNode:(const struct TFENode *)arg1 inFrame:(struct CGRect *)arg2;
- (struct CGSize)viewScrollersSize;
- (struct CGSize)idealViewSize;
- (id)scrollView;
- (double)listHeight;
- (struct CGRect)iconFrameForNode:(const struct TFENode *)arg1;
- (struct CGRect)frameForNode:(const struct TFENode *)arg1;
- (_Bool)shouldCloseContainer:(const struct TFENode *)arg1;
- (unsigned long long)selectedNodesCount;
- (unsigned long long)itemCount;
- (unsigned long long)getSelectedNodes:(struct TFENodeVector *)arg1 upTo:(unsigned long long)arg2;
- (id)selectedItems;
- (void)setDataSource:(id)arg1;
- (unsigned int)viewStyle;
- (id)nibName;
- (unsigned long long)typeSelectNodeCount;
- (long long)typeSelectIndexForNode:(const struct TFENode *)arg1;
- (struct TFENode)typeSelectNodeAtIndex:(unsigned long long)arg1;
- (BOOL)isGrouping;
- (struct TGroupManager *)groupManager:(const struct TFENode *)arg1;
- (struct TFENode)nodeAtLocation:(const struct CGPoint *)arg1 includeContainer:(BOOL)arg2;
- (struct TFENode)nodeAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexForNode:(const struct TFENode *)arg1;
- (void)setColumnAutoResizing:(BOOL)arg1;
- (BOOL)containsNode:(const struct TFENode *)arg1;
- (void)aboutToTearDown:(id)arg1;
- (void)dealloc;
- (id)initWithDataSource:(id)arg1 andViewSettings:(id)arg2 targetPath:(const struct TFENodeVector *)arg3 browserController:(id)arg4;

@end

@interface TListViewIconAndTextCell : TNodeIconAndNameCell
{
    NSImage *_thumbnail;
    NSView *_view;
    BOOL _isEditing;
    struct TNSRef<NSDictionary *> _customCellAttributes;
    struct TNSRef<NSDictionary *> _customCellAttributesSelected;
    struct TNSRef<NSDictionary *> _customCellAttributesInactive;
    struct TNSRef<NSDictionary *> _customCellAttributesInactiveSelected;
    struct TNSRef<NSDictionary *> _customCellAttributesDisabled;
    BOOL _drawTextIfProgressIsPresent;
    BOOL _drawCancelButton;
    int _progressState;
    int _progressAmount;
    unsigned long long _ubiquityStatus;
}

@property BOOL isEditing; // @synthesize isEditing=_isEditing;
@property NSView *view; // @synthesize view=_view;
@property(retain) NSImage *thumbnail; // @synthesize thumbnail=_thumbnail;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (id)controller;
- (void)setUbiquityStatus:(unsigned long long)arg1;
- (void)setProgressState:(int)arg1 progressAmount:(int)arg2 drawTextAndProgress:(BOOL)arg3 cancellable:(BOOL)arg4;
- (double)progressWidth:(struct CGRect)arg1;
- (void)setShowEjectButton:(BOOL)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
@property(nonatomic) NSDictionary *customCellAttributesDisabled;
@property(nonatomic) NSDictionary *customCellAttributesInactiveSelected;
@property(nonatomic) NSDictionary *customCellAttributesInactive;
@property(nonatomic) NSDictionary *customCellAttributesSelected;
@property(nonatomic) NSDictionary *customCellAttributes;
- (void)drawIconWithFrame:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)awakeCommon;
- (void)initCommon;

@end

@interface TListViewTextCell : TListViewIconAndTextCell
{
}

- (void)initCommon;

@end

@interface TListMoreCell : NSCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface TListTableColumn : NSTableColumn
{
    NSString *_columnViewType;
}

@property(retain, nonatomic) NSString *columnViewType; // @synthesize columnViewType=_columnViewType;
- (void)dealloc;
- (id)copyColumn;

@end

@interface TProgressCancelButtonCell : TButtonCell
{
}

+ (id)smallStopProgressImage;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)bezelStyle;

@end

@interface TSpacerView : TView
{
    TLayoutBinder *_layoutBinder;
    NSView *_masterView;
    struct CGRect _masterViewFrame;
    struct CGSize _spacerSize;
    BOOL _listenForHeightChanges;
}

@property(nonatomic) BOOL listenForHeightChanges; // @synthesize listenForHeightChanges=_listenForHeightChanges;
@property(retain, nonatomic) NSView *masterView; // @synthesize masterView=_masterView;
@property(readonly, nonatomic) TLayoutBinder *layoutBinder; // @synthesize layoutBinder=_layoutBinder;
- (id).cxx_construct;
- (void)masterViewFrameChanged:(id)arg1;
- (void)aboutToTearDown;
- (void)initCommon;

@end

@interface TSidebarItemCell : NSImageTextFieldCell
{
    struct TFENode _node;
    int _zoneKind;
    BOOL _selected;
    NSButtonCell *_actionButtonCell;
    BOOL _rolloverActionButton;
    BOOL _trackingActionButton;
    int _actionKind;
    BOOL _isEditing;
    BOOL _hasCloudIcon;
}

+ (void)drawActionButton:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 inView:(id)arg3 actionButtonCell:(id)arg4 action:(int)arg5 mouseState:(int)arg6 highlighted:(BOOL)arg7;
+ (struct TFCGImage *)actionButtonLegacyCGImage:(long long)arg1;
+ (void)drawSidebarIcon:(id)arg1 inRect:(struct CGRect)arg2 inContext:(struct CGContext *)arg3 highlighted:(BOOL)arg4;
+ (const struct TFENode *)nodeForItem:(id)arg1;
+ (struct CGRect)roughActionButtonRectForCell:(const struct CGRect *)arg1;
+ (unsigned long long)frameRateMicroseconds;
+ (BOOL)prefersTrackingUntilMouseUp;
@property(nonatomic) BOOL hasCloudIcon; // @synthesize hasCloudIcon=_hasCloudIcon;
@property(nonatomic) BOOL isEditing; // @synthesize isEditing=_isEditing;
@property(readonly, nonatomic) int zoneKind; // @synthesize zoneKind=_zoneKind;
@property(readonly, nonatomic) int actionKind; // @synthesize actionKind=_actionKind;
@property(nonatomic) BOOL selected; // @synthesize selected=_selected;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)prepareForDisplay:(int)arg1 isICloudLibrary:(BOOL)arg2;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)stopAnimatingIfNeeded;
- (void)startAnimatingIfNeeded;
- (BOOL)hasActionButton;
- (struct CGRect)actionButtonFrameForCellFrame:(struct CGRect)arg1;
- (id)actionButtonLegacyImage;
- (int)actionButtonMouseState;
- (void)actionButtonCoreUIOrLegacyImage:(int)arg1 coreUIName:(const struct __CFString **)arg2 appKitImageName:(id *)arg3 color:(struct TColor *)arg4 legacyImageID:(long long *)arg5 animate:(char *)arg6;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawRadarFrameWithFrame:(struct CGRect)arg1 angle:(double)arg2 highlighted:(BOOL)arg3;
- (struct TString)imageName:(const struct TString *)arg1;
- (double)optimalWidthForHeight:(double)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (id)name;
- (BOOL)isZone;
- (id)description;
- (id)dataForIdentifier:(id)arg1;
- (long long)rowIndex;
- (id)sidebarController;
- (id)sidebar;
- (void)setControlView:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithNode:(const struct TFENode *)arg1 orZone:(int)arg2;
- (id)initWithCoder:(id)arg1;
- (void)drawActionButton:(struct CGRect)arg1 inView:(id)arg2;
- (id)actionButtonCell;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (void)addTrackingAreasForView:(id)arg1 inFrame:(struct CGRect)arg2 withUserInfo:(id)arg3 mouseLocation:(struct CGPoint)arg4;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)invalidateActionButtonAreaWithEvent:(id)arg1;

@end

@interface TSidebarSplitView : NSSplitView
{
    TSidebarSplitterController *_controller;
    NSColor *_splitViewBackgroundColor;
}

@property(retain, nonatomic) NSColor *splitViewBackgroundColor; // @synthesize splitViewBackgroundColor=_splitViewBackgroundColor;
- (BOOL)_hasBehaviorForLinkedOnOrAfter:(long long)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (id)dividerColor;
- (void)setSplitterPosition:(double)arg1;
- (double)splitterPosition;
- (id)sidebarViewContainer;
- (id)browserViewContainer;
- (double)getSplitPercentage;
- (double)percentageForWidth:(double)arg1;
- (void)animateSubviewsToPercentageDetails:(double)arg1;
- (void)animateSubviewsDetails:(double)arg1;
- (void)animateSubviewsToPercentage:(double)arg1;
- (id)controller;
- (void)setController:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)initCommon;

@end

@interface TSidebarSplitViewAnimation : NSAnimation
{
    struct TNSRef<TSidebarSplitView *> _splitView;
    double _startPercentage;
    double _endPercentage;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setCurrentProgress:(float)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithSplitView:(id)arg1 endPercentage:(double)arg2;
- (id)initWithSplitView:(id)arg1 endPercentage:(double)arg2 duration:(double)arg3;

@end

@interface TSidebarShowHideAnimation : NSAnimation
{
    struct TNSRef<TSidebarSplitView *> _splitView;
    double _startSidebarWidth;
    double _endSidebarWidth;
    double _value;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setCurrentProgress:(float)arg1;
- (id)initWithSplitView:(id)arg1 endWidth:(double)arg2;

@end

@interface TSidebarSplitterController : TViewController <NSAnimationDelegate>
{
    id <BrowserController> _parent;
    TSidebarViewController *_sidebarViewController;
    BOOL _windowIsResizing;
    BOOL _browserWidthIsDynamic;
    BOOL _animatingSidebar;
    BOOL _snapToOptimalPosition;
    BOOL _initialSizeDone;
    double _lastSplitterPosition;
    double _resizePosition;
}

@property(nonatomic) BOOL animatingSidebar; // @synthesize animatingSidebar=_animatingSidebar;
@property(nonatomic) double lastSplitterPosition; // @synthesize lastSplitterPosition=_lastSplitterPosition;
@property(nonatomic) BOOL browserWidthIsDynamic; // @synthesize browserWidthIsDynamic=_browserWidthIsDynamic;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (void)splitViewWillResizeSubviews:(id)arg1;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (void)resizeEnd;
- (void)resizeStart;
- (void)animateSidebarToggle:(BOOL)arg1;
- (void)addSidebarIfNecessary;
- (void)sidebarToggleForAppCentric:(BOOL)arg1 newSplitterPosition:(double)arg2 animate:(BOOL)arg3;
- (void)initialResize;
- (void)configureSidebar:(BOOL)arg1 setSplitterPosition:(BOOL)arg2;
- (BOOL)sidebarIsVisible;
- (id)sidebarViewController;
- (void)setSplitterPosition:(double)arg1 snapToOptimalPosition:(BOOL)arg2;
- (void)setSplitterPosition:(double)arg1;
- (double)splitterPosition;
- (struct CGSize)idealViewSize;
- (struct CGSize)minimumViewSize;
- (id)browserViewContainer;
- (id)sidebarViewContainer;
- (id)sidebarSplitView;
- (id)browserWindowController;
- (void)aboutToTearDown:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 andParent:(id)arg2;
- (id)nibName;

@end

@interface TSidebarView : NSTrackableOutlineView
{
    BOOL _shouldHandleCommandClickOnMouseUp;
    BOOL _keyOnMouseDown;
    BOOL _shouldCancelPendingInvoke;
    BOOL _handlingCmdMouseDown;
    BOOL _handlingItemClick;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _liveResizeCache;
    struct CGRect _lastLiveResizeRect;
    BOOL _generatingLiveResizeCache;
    TTableViewShrinkToFitController *_stfController;
}

@property(nonatomic) BOOL generatingLiveResizeCache; // @synthesize generatingLiveResizeCache=_generatingLiveResizeCache;
@property(nonatomic) BOOL handlingItemClick; // @synthesize handlingItemClick=_handlingItemClick;
@property(nonatomic) BOOL keyOnMouseDown; // @synthesize keyOnMouseDown=_keyOnMouseDown;
@property(nonatomic) BOOL shouldCancelPendingInvoke; // @synthesize shouldCancelPendingInvoke=_shouldCancelPendingInvoke;
@property(nonatomic) BOOL shouldHandleCommandClickOnMouseUp; // @synthesize shouldHandleCommandClickOnMouseUp=_shouldHandleCommandClickOnMouseUp;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)viewWillDraw;
- (id)stfEditorController;
- (void)shrinkToFitTextViewAboutToClose;
- (void)shrinkToFitTextViewEditingComplete:(id)arg1;
- (BOOL)shrinkToFitTextViewAboutToOpen;
- (id)preparedCellAtColumn:(long long)arg1 row:(long long)arg2;
- (void)editColumn:(long long)arg1 row:(long long)arg2 withEvent:(id)arg3 select:(BOOL)arg4;
- (void)updateSTFEditorLocation;
- (struct CGRect)maxSTFEditorFrameFromTitleFrame:(struct CGRect)arg1;
- (void)cancelPendingInvoke;
- (void)stopEditing:(BOOL)arg1;
- (void)startEditingWithNode:(const struct TFENode *)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)updateDraggingItemsForDrag:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (void)scrollWheel:(id)arg1;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)shouldUseLiveResizeCache;
- (void)rowHit:(long long)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDraggedWorkaround;
- (id)menuForEvent:(id)arg1;
- (void)deselectRow:(long long)arg1;
- (void)quickLookWithEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)selectionShouldUsePrimaryColor;
- (BOOL)acceptsFirstResponder;
- (id)controller;
- (void)finalize;
- (void)dealloc;

@end

@interface TAnimationLayer : NSView
{
    BOOL _selected;
    int _actionKind;
    struct CGRect _clipRect;
}

@property(nonatomic) struct CGRect clipRect; // @synthesize clipRect=_clipRect;
@property(nonatomic) BOOL selected; // @synthesize selected=_selected;
- (id).cxx_construct;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 action:(int)arg2;

@end

@interface TFilmStripBuilderState : NSObject
{
    struct TNSRef<TSidebarItemCell *> fCell;
    struct TNSRef<NSImage *> fFilmStrip;
    int fHighlightState;
    struct CGRect fCellRect;
}

- (id).cxx_construct;
- (void).cxx_destruct;

@end

@interface TFilmStripAnimationLayer : NSView
{
    struct TNSRef<NSImage *> _filmStrip;
    struct CGRect _clipRect;
    long long _currentAnimationFrameIndex;
}

@property(nonatomic) long long currentAnimationFrameIndex; // @synthesize currentAnimationFrameIndex=_currentAnimationFrameIndex;
@property(nonatomic) struct CGRect clipRect; // @synthesize clipRect=_clipRect;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setFilmStrip:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 filmStrip:(id)arg2;

@end

@interface TSidebarViewController : TViewController <NSOutlineViewDataSource, NSOutlineViewDelegate, NSMenuDelegate, TSpringDelegate, ISpawnOriginDelegateProtocol, QLSeamlessCloserDelegate>
{
    TSidebarView *_sidebarView;
    id <BrowserController> _browserController;
    TBrowserWindowController *_browserWindowController;
    TSpringController *_springController;
    struct TSidebarViewContainer *_container;
    NSMutableArray *_zones;
    BOOL _repopulating;
    BOOL _suppressSelectionUpdate;
    BOOL _selectionChangingProgramatically;
    BOOL _suspendRepopulation;
    BOOL _suspendedRepopulationPending;
    BOOL _restoringExpandedState;
    BOOL _drawForChasingArrowAnimationFrame;
    long long _runningAnimationFrame;
    int _dragClickStartZone;
    struct TFENode _privateDragNode;
    BOOL _privateDrag;
    struct TFENode _editedNode;
    double _optimalWidthCache;
    struct TFENodeVector _animatedCells;
    struct vector<TNSRef<NSWindow *>, std::__1::allocator<TNSRef<NSWindow *>>> _animatedCellViews;
    struct CGRect _currentlyAnimatingCellFrame;
    int _currentAnimationHighlightState;
    struct TNSRef<NSImage *> _radarSweepFilmStrip;
    BOOL _animatingRadarInOverlay;
    struct TNSRef<TFilmStripBuilderState *> _filmStripBuilderState;
    long long _currentAnimationFrameIndex;
    long long _rowSizeStyleForOptimalWidthCache;
    struct TFENode fNodeBeingClicked;
    NSMutableIndexSet *_hiddenZones;
}

+ (void)actionButtonCoreUIOrLegacyImage:(int)arg1 highlighted:(BOOL)arg2 mouseState:(int)arg3 coreUIName:(const struct __CFString **)arg4 appKitImageName:(id *)arg5 color:(struct TColor *)arg6 legacyImageID:(long long *)arg7 animate:(char *)arg8 scaleFactor:(double)arg9;
+ (void)removeFromAnimationTimerQueue:(id)arg1;
+ (void)addToAnimationTimerQueue:(id)arg1;
+ (BOOL)nodeShouldAnimate:(const struct TFENode *)arg1;
+ (double)minimumSidebarWidth;
+ (double)defaultSidebarWidth;
+ (id)sidebarViewControllerWithFrame:(struct CGRect)arg1 container:(struct TSidebarViewContainer *)arg2;
@property(nonatomic) BOOL restoringExpandedState; // @synthesize restoringExpandedState=_restoringExpandedState;
@property(retain, nonatomic) TSpringController *springController; // @synthesize springController=_springController;
@property(readonly, nonatomic) TBrowserWindowController *browserWindowController; // @synthesize browserWindowController=_browserWindowController;
@property(readonly, nonatomic) id <BrowserController> browserController; // @synthesize browserController=_browserController;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)isZoneHidden:(int)arg1;
- (void)hideZone:(int)arg1;
- (void)showZone:(int)arg1;
- (void)selectNode:(const struct TFENode *)arg1;
- (struct TFENode)selectedNode;
- (void)rowHit:(long long)arg1;
- (BOOL)handleQuickLookWithEvent:(id)arg1;
- (void)removeNode:(struct TFENode)arg1;
- (id)cellForNode:(const struct TFENode *)arg1;
- (long long)rowForNode:(const struct TFENode *)arg1 inZone:(int)arg2;
- (long long)rowForNode:(const struct TFENode *)arg1;
- (int)zoneKind:(id)arg1;
- (void)invalidateOptimalWidthCache;
- (struct CGSize)idealViewSize;
- (double)optimalWidth;
- (double)optimalWidthForZone:(int)arg1;
- (double)optionalScrollbarWidth;
- (double)optimalWidthNoScrollbar;
- (double)optimalHeight;
- (void)renamedTo:(id)arg1;
- (void)stopEditing:(BOOL)arg1;
- (void)startEditingWithNode:(const struct TFENode *)arg1;
- (void)setEditedNode:(const struct TFENode *)arg1;
- (const struct TFENode *)editedNode;
- (void)possibleSpringTargetNode:(const struct TFENode *)arg1;
- (void)springRefreshNode:(const struct TFENode *)arg1;
- (void)springNode:(const struct TFENode *)arg1;
- (id)seamlessCloserTransitionImageForPreviewItem:(id)arg1 contentRect:(struct CGRect *)arg2;
- (struct CGRect)seamlessCloserSourceFrameOnScreenForPreviewItem:(id)arg1;
- (id)zoomImageForNode:(const struct TFENode *)arg1 contentRect:(struct CGRect *)arg2;
- (struct CGRect)globalZoomRectForNode:(const struct TFENode *)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (BOOL)shouldShowMenuForEvent:(id)arg1;
- (BOOL)scrollerIsVisible;
- (struct TFENode)sidebarNode:(const struct TFENode *)arg1;
- (BOOL)canTarget:(id)arg1;
- (BOOL)isDimmed:(id)arg1;
- (BOOL)isBackupBrowser;
- (void)actionButtonPostAction:(id)arg1;
- (struct TFENode)nodeForClick;
- (void)startOrStopAnimations;
- (void)updateAnimationStateForCell:(id)arg1;
- (void)updateAnimationStateForCell:(id)arg1 startOnly:(BOOL)arg2;
- (void)startAnimating:(const struct TFENode *)arg1;
- (void)nextAnimationFrame;
- (long long)currentAnimationFrameIndex;
- (void)runAnimationFrame;
- (void)runAnimationFrameDetails;
- (BOOL)animatingRadarInOverlay;
- (void)generateRadarFilmStrip:(struct CGRect)arg1 highlightState:(int)arg2 cell:(id)arg3;
- (void)finishGeneratingRadarFilmStrip:(id)arg1;
- (void)filmStripDone:(id)arg1;
- (BOOL)isSidebarCollapsed;
- (void)stopAnimating:(const struct TFENode *)arg1;
- (void)hideAnimationOverlayWindowForNode:(const struct TFENode *)arg1;
- (void)removeOverlayWindowAtIndex:(unsigned long long)arg1;
- (BOOL)nodeShouldAnimateIcon:(const struct TFENode *)arg1;
- (BOOL)shouldAnimateOverlay;
- (void)updateSelectionForCurrentTarget;
- (void)updateSelectionForTarget:(const struct TFENode *)arg1;
- (void)aboutToTearDown:(id)arg1;
- (id)nibName;
- (void)finalize;
- (void)dealloc;
- (void)commonDealloc;
- (id)initWithFrame:(struct CGRect)arg1 container:(struct TSidebarViewContainer *)arg2;
- (id)init:(id)arg1 frame:(struct CGRect)arg2;
- (id)sidebar;
- (struct CGRect)cellFrameForNode:(const struct TFENode *)arg1;
- (long long)indexInZoneHelper:(id)arg1 forNode:(const struct TFENode *)arg2 zoneOffset:(long long *)arg3;
- (void)repopulateReadZoneOrderFromPrefs:(BOOL)arg1;
- (void)reloadContentsReadZoneOrderFromPrefs:(BOOL)arg1;
- (void)unloadContents;
- (int)zoneIndex:(int)arg1;
- (void)loadContentsReadZoneOrderFromPrefs:(BOOL)arg1;
- (void)reloadZone:(int)arg1;
- (void)reloadOneZone:(const struct TFENodeVector *)arg1 zoneKind:(int)arg2;
- (void)updateZoneExpandedState;
- (BOOL)globalDisclosedStateForZone:(int)arg1;
- (void)saveGlobalDisclosedState:(int)arg1;
- (int)preferenceKeyForZone:(int)arg1;
- (void)expandCollapseZoneKind:(int)arg1 expand:(BOOL)arg2;
- (void)expandCollapseZone:(id)arg1 expand:(BOOL)arg2;
- (BOOL)isZoneExpanded:(int)arg1;
- (BOOL)isZoneListExpanded:(id)arg1;
- (BOOL)isZoneCellExpanded:(id)arg1;
- (int)zoneForCell:(id)arg1;
- (id)zoneHeaderForKind:(int)arg1;
- (id)zoneHeaderForZone:(id)arg1;
- (id)zoneList:(int)arg1;
- (BOOL)itemIsZone:(id)arg1 zone:(int)arg2;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineViewShouldSlideBackAfterDragFailed:(id)arg1;
- (void)outlineView:(id)arg1 draggingExited:(id)arg2;
- (void)outlineView:(id)arg1 draggingEndedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)outlineView:(id)arg1 draggedImage:(id)arg2 movedTo:(struct CGPoint)arg3;
- (BOOL)dragShouldRemove;
- (BOOL)isDragOverMenuBar;
- (BOOL)isDragInsideView;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (BOOL)acceptDropDetails:(id)arg1 item:(id)arg2 childIndex:(long long)arg3;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (unsigned long long)validateDropCommon:(id)arg1 proposedItem:(id)arg2 proposedChildIndex:(long long)arg3;
- (unsigned long long)validateNoZoneDrop;
- (struct TFENode)draggedNode;
- (BOOL)privateDrag;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)itemIsZoneHeader:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (void)preferencesUpdated:(id)arg1;
- (void)windowZoomDidComplete:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)meetingRoomStatusChanged;
- (void)handleItemsChanged:(id)arg1;
- (void)handleItemsAddedRemovedReordered:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewItemWillExpand:(id)arg1;

@end

@interface TSharedSidebarAnimationTimer : NSObject
{
    NSTimer *_timer;
    struct vector<TNSRef<TSidebarViewController *>, std::__1::allocator<TNSRef<TSidebarViewController *>>> _controllers;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)remove:(id)arg1;
- (void)add:(id)arg1;
- (void)next:(id)arg1;

@end

@interface TIconInlinePreviewController : NSObject <QLInlinePreviewDelegate>
{
    BOOL _active;
    id <TIconInlinePreviewDataSource> _dataSource;
    QLInlinePreviewController *_rolloverInlinePreviewController;
    QLInlinePreviewController *_playInlinePreviewController;
    QLInlinePreviewController *_mouseInlinePreviewController;
}

- (void)inlinePreview:(id)arg1 didChangeToState:(int)arg2;
- (int)inlinePreview:(id)arg1 expectedModeForPreviewItem:(id)arg2 flavor:(int *)arg3;
- (void)inlinePreview:(id)arg1 willLoadPreviewItem:(id)arg2;
- (void)_swapInlinePreviewControllers;
- (struct CGRect)inlinePreview:(id)arg1 rolloverFrameForPreviewItem:(id)arg2;
- (struct CGRect)inlinePreview:(id)arg1 contentFrameForPreviewItem:(id)arg2;
- (struct CGRect)inlinePreview:(id)arg1 frameForPreviewItem:(id)arg2;
- (void)stopInlinePreview;
- (void)selectionDidChange:(id)arg1;
- (BOOL)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_mouseExitedFromItem:(id)arg1;
- (void)_mouseEnteredInItem:(id)arg1;
- (id)_itemForEvent:(id)arg1;
- (id)_inlinePreviewControllerOfItem:(id)arg1;
- (BOOL)_allowInlinePreviewForItem:(id)arg1;
- (void)_setupInlinePreviewControllers;
- (void)disableTrackingAreas;
- (void)updateTrackingAreas;
- (void)updateTrackingAreaForItem:(id)arg1;
- (void)updateTrackingAreaForItem:(id)arg1 mousePositionInView:(const struct CGPoint *)arg2;
- (struct CGPoint)_mousePositionInView;
@property(readonly, nonatomic) QLPreviewView *sharedPreviewView;
- (void)deactivate;
- (void)activate;
- (void)dealloc;
- (id)initWithDataSource:(id)arg1;

@end

@interface TView : NSView
{
    struct CGSize _maxSize;
    struct CGSize _minSize;
    BOOL _isFlipped;
    BOOL _isOpaque;
    NSColor *_backgroundColor;
    id <TViewAnimationDelegate> _animationDelegate;
}

+ (id)defaultAnimationForKey:(id)arg1;
+ (void)notifyViewDidChangeBackingProperties:(id)arg1;
+ (void)notifyViewDidMoveToSuperview:(id)arg1;
+ (void)notifyView:(id)arg1 willMoveToSuperview:(id)arg2;
+ (void)notifyViewDidMoveToWindow:(id)arg1;
+ (void)notifyView:(id)arg1 willMoveToWindow:(id)arg2;
@property(nonatomic) id <TViewAnimationDelegate> animationDelegate; // @synthesize animationDelegate=_animationDelegate;
@property(retain, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) BOOL isOpaque; // @synthesize isOpaque=_isOpaque;
@property(nonatomic) BOOL isFlipped; // @synthesize isFlipped=_isFlipped;
@property(nonatomic) struct CGSize minSize; // @synthesize minSize=_minSize;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=_maxSize;
- (id).cxx_construct;
- (void)drawRect:(struct CGRect)arg1;
- (void)setBoundsSize:(struct CGSize)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setWantsLayer:(BOOL)arg1;
- (void)configureAnimations:(BOOL)arg1;
- (void)viewDidChangeBackingProperties;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)dealloc;
- (void)initCommon;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface TViewAnimationHelper : NSObject <TViewAnimationDelegate>
{
    NSView *_view;
    id <TViewAnimationDelegate> _delegate;
    BOOL _origWantsLayers;
}

+ (id)animationHelperWithView:(id)arg1;
@property id <TViewAnimationDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) NSView *view; // @synthesize view=_view;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)animationDidStart:(id)arg1;
- (void)setView:(id)arg1;
- (void)configureAnimations:(BOOL)arg1;
- (void)finalize;
- (void)dealloc;

@end

@interface TScrollView : NSScrollView
{
}

- (unsigned long long)controlSize;
- (void)setControlSize:(unsigned long long)arg1;
- (void)initCommon;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TAutoResizingClipView : NSClipView
{
    struct CGSize _globalDocumentViewSize;
    BOOL _autoResizeWidth;
    BOOL _autoResizeHeight;
}

@property BOOL autoResizeHeight; // @synthesize autoResizeHeight=_autoResizeHeight;
@property BOOL autoResizeWidth; // @synthesize autoResizeWidth=_autoResizeWidth;
- (id).cxx_construct;
- (void)viewFrameChanged:(id)arg1;
- (void)setDocumentView:(id)arg1;
- (BOOL)isFlipped;

@end

@interface TAutoResizingScrollView : TScrollView
{
}

@property BOOL autoResizeHeight; // @dynamic autoResizeHeight;
@property BOOL autoResizeWidth; // @dynamic autoResizeWidth;
- (void)initCommon;

@end

@interface TAddressTextFieldCell : NSTextFieldCell
{
}

- (id)_textAttributes;

@end

@interface TFont : NSFont
{
}

+ (void)setIsLoadingFinderNib:(BOOL)arg1;
+ (BOOL)isLoadingFinderNib;
+ (id)finderControlContentFontOfSize:(double)arg1;
+ (id)boldFinderFontOfSize:(double)arg1;
+ (id)finderFontOfSize:(double)arg1;
+ (id)finderFontFromFont:(id)arg1;
+ (id)finderFontOfSize:(double)arg1 type:(unsigned int)arg2;
- (id)initWithCoder:(id)arg1;

@end

@interface TCocoaDesktop : NSObject
{
    struct TDisplayConfiguration _displayConfiguration;
    struct CGRect _bounds;
}

+ (id)sharedDesktop;
@property(readonly, nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)displaysChanged;
- (void)availableWindowBoundsChanged;
- (void)positioningShapeChanged;
- (void)dealloc;
- (id)init;

@end

@interface TFFKDesktopWindowView : NSView
{
}

- (BOOL)isOpaque;
- (BOOL)canBecomeKeyView;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)acceptsFirstMouse:(id)arg1;

@end

@interface TFFKDesktopWindow : NSWindow
{
    TCocoaDesktop *_desktop;
}

+ (void)tearDown;
+ (void)initializeDesktop;
+ (id)desktopWindow;
- (void)mouseDown:(id)arg1;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (void)syncToDisplayBounds;
- (BOOL)isMovable;
- (BOOL)isDesktopWindow;
- (void)dealloc;
- (void)keyDown:(id)arg1;
- (id)init;

@end

@interface TCocoaDesktopWindow : TBrowserWindow
{
    unsigned int _layerWindowID;
    CAContext *_caContext;
    CALayer *_rootLayer;
    unsigned int _surfaceID;
    TCocoaDesktop *_desktop;
}

+ (id)desktopWindow;
+ (id)newDesktopWindow;
- (id)accessibilityActionNames;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)resetDesktopPreferences;
- (BOOL)isDesktopWindow;
- (void)syncToDisplayBounds;
- (BOOL)isMovable;
- (struct CGRect)constrainFrameRect:(struct CGRect)arg1 toScreen:(id)arg2;
- (id)screen;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (BOOL)ql_isDesktopWindow;
- (int)_setCGColorSpace:(struct CGColorSpace *)arg1;
- (void)finishInitializing;
- (void)setupDesktopRootLayer;
- (void)dealloc;
- (id)init;

@end

@interface TDesktopIconSelectionLayer : NSObject <TDesktopLayerDelegate>
{
    double _iconSize;
    double _scaleFactor;
    struct CGPoint _anchorPoint;
    TDesktopLayer *_layer;
    struct TString _name;
}

+ (void)drawSelectionRectAtIconSize:(double)arg1 extendedFrame:(const struct CGRect *)arg2 context:(struct CGContext *)arg3;
+ (double)selectionRingThicknessForIconSize:(double)arg1;
+ (double)radiusForIconSize:(double)arg1;
+ (const struct TColor *)selectionBackgroundColor;
+ (double)ringExtraSizeForIconBackgroundAtIconSize:(double)arg1;
@property(nonatomic) struct CGPoint anchorPoint; // @synthesize anchorPoint=_anchorPoint;
@property(nonatomic) double scaleFactor; // @synthesize scaleFactor=_scaleFactor;
@property(nonatomic) double iconSize; // @synthesize iconSize=_iconSize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setName:(const struct TString *)arg1;
- (void)hide;
- (void)show;
- (void)updateLayout;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (id)layer;
- (id)init;
- (struct CGRect)anchoredExtendedIconFrame;

@end

@interface TDesktopIcon : NSObject <TDesktopLayerDelegate>
{
    BOOL _visible;
    struct CGPoint _anchorPoint;
    int _iconSize;
    struct TFENode _node;
    BOOL _selected;
    BOOL _springBlinkOff;
    BOOL _opened;
    BOOL _iconIsVisible;
    BOOL _labelIsVisible;
    BOOL _labelIsTruncated;
    struct TNSRef<NSImage *> _thumbnailImage;
    BOOL _thumbnailIsDirty;
    TDesktopLayer *_icon;
    TDesktopLayer *_label;
    TDesktopIconSelectionLayer *_selection;
    struct TNSRef<TInlineProgressHostLayer *> _inlineProgressHostLayer;
}

@property(nonatomic) BOOL thumbnailIsDirty; // @synthesize thumbnailIsDirty=_thumbnailIsDirty;
@property(readonly, nonatomic) BOOL labelIsTruncated; // @synthesize labelIsTruncated=_labelIsTruncated;
@property(nonatomic) BOOL labelIsVisible; // @synthesize labelIsVisible=_labelIsVisible;
@property(nonatomic) BOOL iconIsVisible; // @synthesize iconIsVisible=_iconIsVisible;
@property(nonatomic) BOOL opened; // @synthesize opened=_opened;
@property(nonatomic) BOOL springBlinkOff; // @synthesize springBlinkOff=_springBlinkOff;
@property(nonatomic) BOOL selected; // @synthesize selected=_selected;
@property(nonatomic) int iconSize; // @synthesize iconSize=_iconSize;
@property(nonatomic) struct CGPoint anchorPoint; // @synthesize anchorPoint=_anchorPoint;
@property(nonatomic) BOOL visible; // @synthesize visible=_visible;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)cancelProgress;
- (void)toggleCancelButtonState;
- (BOOL)hitTestCancelButton:(const struct CGPoint *)arg1;
- (void)updateNodeProgressState;
- (struct TFENode)node;
@property(retain, nonatomic) NSImage *thumbnailImage; // @dynamic thumbnailImage;
- (void)updateLayout;
- (void)setNeedsDisplay;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)drawInContext:(struct CGContext *)arg1 forDrag:(BOOL)arg2;
- (void)drawSelectionInContext:(struct CGContext *)arg1;
- (void)drawExtraInfoInContext:(struct CGContext *)arg1;
- (void)drawLabelInContext:(struct CGContext *)arg1 forDrag:(BOOL)arg2;
- (void)drawLabelBackground:(struct CGContext *)arg1 forDrag:(BOOL)arg2;
- (void)drawMultiLineLabelBackground:(struct CGContext *)arg1 bounds:(const struct CGRect *)arg2 rects:(struct CGRect [2])arg3 lineCount:(unsigned int)arg4 horizontalMargin:(double)arg5 flushLeft:(BOOL)arg6 scaleFactor:(double)arg7 hiliteColor:(const struct TColor *)arg8 selected:(BOOL)arg9 labelIndex:(int)arg10;
- (void)drawSingleLineLabelBackground:(struct CGContext *)arg1 bounds:(const struct CGRect *)arg2 horizontalMargin:(double)arg3 scaleFactor:(double)arg4 hiliteColor:(const struct TColor *)arg5 selected:(BOOL)arg6 labelIndex:(int)arg7;
- (void)drawIconInContext:(struct CGContext *)arg1;
- (struct TIconRef)icon:(const struct CGRect *)arg1;
- (void)invalidateLabels;
- (double)scaleFactor;
- (void)setCGScaleFactor:(double)arg1;
- (void)setContentsScale:(double)arg1 forLayer:(id)arg2;
- (BOOL)selectionRectIsVisible;
- (void)orderFront;
- (void)hide;
- (void)show;
- (void)dealloc;
- (id)initWithNode:(const struct TFENode *)arg1;

@end

@interface TDesktopLayer : NSObject
{
    id <TDesktopLayerDelegate> _delegate;
    struct CGRect _frame;
    CALayer *_layer;
}

+ (id)overlayRootLayer;
+ (id)hostLayerForLevel:(int)arg1;
+ (id)rootLayer;
+ (void)setRootLayer:(id)arg1;
@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
@property(nonatomic) id <TDesktopLayerDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void)orderBelow:(id)arg1;
- (void)orderAbove:(id)arg1;
- (void)orderFront;
- (void)hide;
- (void)show;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)setNeedsDisplay;
- (id)caLayer;
- (void)dealloc;
- (id)init;
- (id)initWithLevel:(int)arg1;

@end

@interface TDesktopMarquee : NSObject <TDesktopLayerDelegate>
{
    TDesktopLayer *_layer;
}

+ (void)tearDown;
+ (id)marquee;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
@property(nonatomic) struct CGRect selectionRect;
- (void)hide;
- (void)show;
- (void)dealloc;
- (id)init;

@end

@interface TDesktopWindowController : TBrowserWindowController
{
}

+ (void)displayConfigurationChanged;
+ (id)sharedController;
+ (void)userInterfaceLevelChanged;
+ (void)tearDownDesktop;
+ (_Bool)initializeDesktop;
- (BOOL)validateToggleBottombar:(id)arg1;
- (BOOL)validateToggleStatusBar:(id)arg1;
- (BOOL)validateToggleSidebar:(id)arg1;
- (BOOL)validateRunToolbarCustomizationPalette:(id)arg1;
- (BOOL)validateToggleToolbar:(id)arg1;
- (BOOL)validateViewAsFlow:(id)arg1;
- (BOOL)validateViewAsColumns:(id)arg1;
- (BOOL)validateViewAsList:(id)arg1;
- (BOOL)validateViewAsIcons:(id)arg1;
- (void)windowDidChangeBackingProperties:(id)arg1;
- (void)positioningShapeChanged;
- (void)displayConfigurationChanged;
- (void)pathNodeGoingAway:(const struct TFENode *)arg1;
- (BOOL)isDesktop;
- (BOOL)inBrowseMode;
- (id)desktopIconView;
- (void)windowDidChange;
- (void)springRemoveDragTrackingHandler;
- (void)springInstallDragTrackingHandler;
- (void)saveWindowState;
- (void)configureWindowWithState:(id)arg1;
- (id)windowStateForNode:(const struct TFENode *)arg1 forceContainer:(BOOL)arg2;
- (id)browserViewContainer;
- (BOOL)validateClose:(id)arg1;
- (void)configureWindowForContentChange;
- (void)configureAccessoryViews;
- (void)setTargetPath:(const struct TFENodeVector *)arg1 withViewStyle:(id)arg2 rebuildView:(BOOL)arg3;
- (unsigned int)finderScriptingModelKind;
- (void)dealloc;
- (id)init;

@end

@interface TGraySliderCell : TNotifyingSliderCell
{
    BOOL _isTracking;
    BOOL _isMetal;
}

@property BOOL isMetal; // @synthesize isMetal=_isMetal;
- (void)drawBarInside:(struct CGRect)arg1 flipped:(BOOL)arg2;
- (void)drawKnob;
- (void)drawKnob:(struct CGRect)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (id)barRightImage;
- (id)barCenterImage;
- (id)barLeftImage;
- (id)knobHighlightedImage;
- (id)knobImage;

@end

@interface TIdentityPickerController : NSObject
{
    CBIdentityPicker *_identityPicker;
    id <TIdentityPickerDelegate> _delegate;
}

- (void)setShowHiddenIdentities:(BOOL)arg1;
- (void)setShowGroups:(BOOL)arg1;
- (void)setShowUsers:(BOOL)arg1;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (void)setDisabledIdentities:(const struct TIdentityVector *)arg1;
- (void)setDefaultButtonTitle:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)getIdentities:(struct TIdentityVector *)arg1;
- (void)identityPickerDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)runAsSheetOnWindow:(id)arg1;
- (long long)runModal;
- (void)dealloc;
- (id)init;

@end

@interface TTableViewController : IBaseTableViewController <NSTableViewDelegate>
{
}

- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (void)setView:(id)arg1;
- (id)tableViewNoLoad;
- (id)tableView;
@property(readonly) TTableViewDataSource *dataSource; // @dynamic dataSource;
- (Class)dataSourceClass;
- (void)finalize;
- (void)dealloc;
- (void)viewLoaded;

@end

@interface TTableViewItem : NSObject <NSCopying>
{
    struct TNSRef<NSMutableDictionary *> _data;
}

+ (id)keyPathForKey:(id)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
@property(readonly, nonatomic) NSDictionary *data; // @dynamic data;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface TTableViewDataSource : NSArrayController <NSTableViewDataSource>
{
    TTableView *_tableView;
}

@property(nonatomic) TTableView *tableView; // @synthesize tableView=_tableView;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (void)clear;
- (void)replaceObjects:(id)arg1 withObjects:(id)arg2;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)unbindFromTableColumn:(id)arg1;
- (void)bindToTableColumn:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (void)awakeCommon;
- (void)initCommon;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithContent:(id)arg1;

@end

@interface TTableView : NSTableView
{
    BOOL _acceptsFirstMouse;
}

@property BOOL acceptsFirstMouse; // @synthesize acceptsFirstMouse=_acceptsFirstMouse;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_windowChangedKeyState;
- (void)addTableColumn:(id)arg1;
@property unsigned long long controlSize; // @dynamic controlSize;
@property BOOL autoforwardsScrollWheelEvents; // @dynamic autoforwardsScrollWheelEvents;
- (void)setLayer:(id)arg1;
- (id)makeBackingLayer;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)awakeCommon;
- (void)initCommon;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TUserDefaults : NSUserDefaults
{
}

+ (BOOL)synchronize;
+ (void)sendKeyChangedNotification:(const struct TString *)arg1;
+ (void)sendRegIDChangedNotification:(int)arg1;
+ (void)setShowAllExtensions:(BOOL)arg1;
+ (BOOL)showAllExtensions;
+ (void)setDictionary:(id)arg1 forRegID:(int)arg2;
+ (id)dictionaryForRegID:(int)arg1;
+ (void)setArray:(id)arg1 forRegID:(int)arg2;
+ (id)arrayForRegID:(int)arg1;
+ (void)setString:(id)arg1 forRegID:(int)arg2;
+ (id)stringForRegID:(int)arg1;
+ (void)setRect:(const struct CGRect *)arg1 forRegID:(int)arg2;
+ (struct CGRect)rectForRegID:(int)arg1;
+ (void)setSize:(const struct CGSize *)arg1 forRegID:(int)arg2;
+ (struct CGSize)sizeForRegID:(int)arg1;
+ (void)setPoint:(const struct CGPoint *)arg1 forRegID:(int)arg2;
+ (struct CGPoint)pointForRegID:(int)arg1;
+ (void)setFourCharCode:(unsigned int)arg1 forRegID:(int)arg2;
+ (unsigned int)fourCharCodeForRegID:(int)arg1;
+ (void)setSInt64:(long long)arg1 forRegID:(int)arg2;
+ (long long)sint64ForRegID:(int)arg1;
+ (void)setInteger:(long long)arg1 forRegID:(int)arg2;
+ (long long)integerForRegID:(int)arg1;
+ (void)setDouble:(double)arg1 forRegID:(int)arg2;
+ (double)doubleForRegID:(int)arg1;
+ (void)setCGFloat:(double)arg1 forRegID:(int)arg2;
+ (double)cgFloatForRegID:(int)arg1;
+ (void)setFloat:(float)arg1 forRegID:(int)arg2;
+ (float)floatForRegID:(int)arg1;
+ (void)setBool:(BOOL)arg1 forRegID:(int)arg2;
+ (BOOL)boolForRegID:(int)arg1;
+ (BOOL)regIDExists:(int)arg1;
+ (void)removeObjectForRegID:(int)arg1;
+ (void)setObject:(id)arg1 forRegID:(int)arg2;
+ (id)objectForRegID:(int)arg1;
+ (void)resetUserDefaults;
+ (void)resetStandardUserDefaults;
+ (id)userDefaults;
+ (id)standardUserDefaults;
- (BOOL)synchronize;
- (BOOL)regIDExists:(int)arg1;
- (void)removeObjectForRegID:(int)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setObjectIfDifferent:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forRegID:(int)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForRegID:(int)arg1;
- (id)objectForKey:(id)arg1;
- (void)_finderSetObject:(id)arg1 forKey:(id)arg2;
- (id)_finderObjectForKey:(id)arg1;
- (void)showAllExtensionsPrefsChangedByLaunchServices:(id)arg1;
- (void)preferencesNeedToBeSynced:(id)arg1;
- (void)dealloc;
- (id)initWithUser:(id)arg1;

@end

@interface TPrefsObserverBridge : NSObject
{
    struct IPrefsObserver *_observer;
    struct set<TString, std::__1::less<TString>, std::__1::allocator<TString>> _globalKeysBeingObserved;
    struct set<UDefaults::RegistryID, std::__1::less<UDefaults::RegistryID>, std::__1::allocator<UDefaults::RegistryID>> _regIDsBeingObserved;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)stopObservingAllPrefsChanges;
- (void)stopObservingFinderPrefsResetNotification;
- (void)startObservingFinderPrefsResetNotification;
- (void)globalPrefChanged:(id)arg1;
- (void)stopObservingGlobalPrefChanges:(const struct TString *)arg1;
- (void)startObservingGlobalPrefChanges:(const struct TString *)arg1;
- (void)finderPrefChanged:(id)arg1;
- (void)stopObservingRegIDChanges:(int)arg1;
- (void)startObservingRegIDChanges:(int)arg1;
- (void)aboutToTearDown;
- (id)initWithObserver:(struct IPrefsObserver *)arg1;

@end

@interface TOutlineView : NSOutlineView
{
    BOOL _acceptsFirstMouse;
}

@property BOOL acceptsFirstMouse; // @synthesize acceptsFirstMouse=_acceptsFirstMouse;
- (void)drawRect:(struct CGRect)arg1;
- (void)_windowChangedKeyState;
- (void)addTableColumn:(id)arg1;
@property unsigned long long controlSize; // @dynamic controlSize;
@property BOOL autoforwardsScrollWheelEvents; // @dynamic autoforwardsScrollWheelEvents;
- (void)setLayer:(id)arg1;
- (id)makeBackingLayer;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)awakeCommon;
- (void)initCommon;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TOutlineViewController : IBaseTableViewController <NSOutlineViewDelegate>
{
}

- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (void)setView:(id)arg1;
- (id)outlineViewNoLoad;
- (id)outlineView;
@property(readonly) TOutlineViewDataSource *dataSource; // @dynamic dataSource;
- (Class)dataSourceClass;
- (void)finalize;
- (void)dealloc;
- (void)viewLoaded;

@end

@interface TOutlineViewItem : TTableViewItem
{
    struct TNSRef<NSMutableArray *> _children;
    BOOL _isLeaf;
}

@property BOOL isLeaf; // @synthesize isLeaf=_isLeaf;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)flattenedChildren;
@property(readonly, nonatomic) NSArray *children; // @dynamic children;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface TOutlineViewDataSource : NSTreeController <NSOutlineViewDataSource>
{
    TOutlineView *_outlineView;
}

@property(nonatomic) TOutlineView *outlineView; // @synthesize outlineView=_outlineView;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (id)flattenedArrangedObjects;
- (id)flattenedContent;
- (void)clear;
- (void)unbindFromTableColumn:(id)arg1;
- (void)bindToTableColumn:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (void)awakeCommon;
- (void)initCommon;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithContent:(id)arg1;

@end

@interface IBaseTableViewController : TViewController
{
    NSObjectController *_dataSource;
    NSIndexSet *_columnIndexesToResizeToFitContents;
}

@property(retain, nonatomic) NSIndexSet *columnIndexesToResizeToFitContents; // @synthesize columnIndexesToResizeToFitContents=_columnIndexesToResizeToFitContents;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)updateColumnWidthsToFitContents;
- (id)selectionIndexesForProposedSelection:(id)arg1;
- (void)addColumn:(id)arg1;
- (void)setView:(id)arg1;
- (id)_dataSource;
- (Class)dataSourceClass;
- (void)finalize;
- (void)dealloc;
- (void)viewLoaded;

@end

@interface TPBFBurnConfirmationController : NSWindowController <NSMenuDelegate, NSTextFieldDelegate>
{
    NSImageView *_iconImageView;
    TTextField *_mainTextField;
    TTextField *_subTextField;
    TEditTextField *_discNameTextField;
    TPopUpButton *_burnSpeedPopup;
    TSpacerView *_saveBurnFolderSpacerView;
    TButton *_saveBurnFolderCheckBox;
    TEditTextField *_saveBurnFolderTextField;
    TButton *_burnButton;
    TButton *_cancelButton;
    TButton *_ejectButton;
    struct TFENode _pbfNode;
    unsigned long long _result;
    unsigned long long _requiredSize;
}

+ (BOOL)isRunning;
+ (unsigned long long)preferredBurnSpeedForMediaClass:(const struct TString *)arg1 withDefault:(unsigned long long)arg2;
+ (unsigned long long)runBurnConfirmationDialogForNode:(const struct TFENode *)arg1 withRequiredSize:(unsigned long long)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)control:(id)arg1 didFailToFormatString:(id)arg2 errorDescription:(id)arg3;
- (void)setupBurnSpeedMenuFor:(const struct TBurningDevice *)arg1;
- (void)saveBurnPressed:(id)arg1;
- (void)burnPressed:(id)arg1;
- (void)cancelPressed:(id)arg1;
- (void)ejectPressed:(id)arg1;
- (unsigned long long)run;
- (void)windowDidLoad;
- (void)dealloc;
- (id)initWithNode:(const struct TFENode *)arg1 requiredSize:(unsigned long long)arg2;

@end

@interface TPBFNewMediaWindowController : NSWindowController <NSWindowDelegate>
{
    NSImageView *_iconView;
    TTextField *_subTextField;
    unsigned long long _estimatedPBFSize;
    struct TFENode _pbfNode;
    NSString *_subText;
    struct CGSize _subTextFieldSize;
}

+ (BOOL)isWaitingForNewMedia;
+ (id)controller;
@property(nonatomic) unsigned long long estimatedPBFSize; // @synthesize estimatedPBFSize=_estimatedPBFSize;
@property(nonatomic) struct TFENode pbfNode; // @synthesize pbfNode=_pbfNode;
@property(retain, nonatomic) NSString *subText; // @synthesize subText=_subText;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)viewFrameChanged:(id)arg1;
- (void)newMediaInserted;
- (void)cancel:(id)arg1;
- (long long)runModal;
- (void)windowWillClose:(id)arg1;
- (void)dealloc;
- (void)windowDidLoad;

@end

@interface TClipboardController : TClipController
{
    long long _changeCount;
}

+ (id)keyPathsForValuesAffectingClipType;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (id)sharedController;
@property long long changeCount; // @synthesize changeCount=_changeCount;
- (id)clipType;
- (id)templateStatusString;
- (void)windowDidBecomeKey:(id)arg1;
- (id)windowTitle;
- (void)update;
- (void)show;
- (void)dealloc;
- (void)windowDidLoad;

@end

@interface TClipController : TScriptableWindowController <NSWindowDelegate>
{
    NSTextField *statusField;
    TClipView *clipView;
}

+ (id)keyPathsForValuesAffectingClipType;
+ (id)keyPathsForValuesAffectingStatusString;
@property(readonly) NSString *clipType;
@property(readonly) NSString *templateStatusString;
@property(readonly) NSString *statusString;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)show;
@property(retain) NSPasteboard *pasteboard;
- (id)windowNibName;
- (void)windowDidLoad;

@end

@interface TClippingController : TClipController <TCoalescingNodeObserverProtocol>
{
    struct TFENode _node;
    BOOL _allowInteraction;
    struct ISpawnOrigin *_zoomOrigin;
    NSButton *_closeButton;
}

+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (id)showClippingForNode:(const struct TFENode *)arg1 allowInteraction:(BOOL)arg2 fromZoomOrigin:(struct ISpawnOrigin *)arg3;
+ (id)pasteboardFromClippingURL:(id)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)nodeDeleted:(const struct TFENode *)arg1 fromObservedNode:(const struct TFENode *)arg2;
- (id)templateStatusString;
- (struct TFENode)fetchWindowProxyNode;
- (void)close;
- (void)closeButtonClicked;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (void)dealloc;
- (id)initWithNode:(const struct TFENode *)arg1 allowInteraction:(BOOL)arg2 fromZoomOrigin:(struct ISpawnOrigin *)arg3;

@end

@interface TClipTextView : NSTextView
{
}

- (BOOL)acceptsFirstResponder;
- (void)copy:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;

@end

@interface TClipImageView : TImageView
{
}

- (void)copy:(id)arg1;

@end

@interface TClipView : NSView
{
    NSPasteboard *_pasteboard;
    BOOL _canSelectAndCopy;
}

+ (struct __CFString *)displayableUTIForPasteboard:(id)arg1;
@property BOOL canSelectAndCopy; // @synthesize canSelectAndCopy=_canSelectAndCopy;
- (void)drawRect:(struct CGRect)arg1;
@property(readonly) struct CGSize optimalSize;
- (void)update;
@property(retain) NSPasteboard *pasteboard;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TBurnController : NSObject
{
}

+ (void)burnPBF:(const struct TFENode *)arg1 warnIfEmpty:(BOOL)arg2;
+ (void)burnNodes:(const struct TFENodeVector *)arg1 warnIfEmpty:(BOOL)arg2;

@end

@interface IActionButtonCell : TButtonCell
{
    BOOL _inRollOverState;
}

@property(readonly) BOOL inRollOverState; // @synthesize inRollOverState=_inRollOverState;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setHighlighted:(BOOL)arg1;
- (void)setBackgroundStyle:(long long)arg1;
- (void)setSelectedImage:(BOOL)arg1;
- (id)imageForActionBtnState:(int)arg1;
- (BOOL)isOpaque;
- (void)initCommon;
- (id)init;

@end

@interface TIconAndTextWithActionCell : TIconAndTextCell
{
    struct TNSRef<IActionButtonCell *> _actionButtonCell;
    double _textToActionBtnSpacing;
}

@property(nonatomic) double textToActionBtnSpacing; // @synthesize textToActionBtnSpacing=_textToActionBtnSpacing;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)addTrackingAreasForView:(id)arg1 inFrame:(struct CGRect)arg2 withUserInfo:(id)arg3 mouseLocation:(struct CGPoint)arg4;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)actionButtonFrameForBounds:(struct CGRect)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (BOOL)isMouseInActionButton:(id)arg1;
- (struct CGRect)cellFrameFromMouseEvent:(id)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setActionBtnAction:(SEL)arg1;
- (void)setActionBtnTarget:(id)arg1;
- (void)setHighlighted:(BOOL)arg1;
- (void)setBackgroundStyle:(long long)arg1;
@property(retain, nonatomic) IActionButtonCell *actionButtonCell; // @dynamic actionButtonCell;
- (void)setControlView:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)initCommon;

@end

@interface TEjectButtonCell : IActionButtonCell
{
}

- (id)imageForActionBtnState:(int)arg1;
- (void)initCommon;

@end

@interface IAsyncNodeOperation : NSObject
{
    struct OpaqueOperationRef *_operationRef;
    struct OperationMonitor _operationMonitor;
    struct TFENodeVector _nodes;
    struct TAsyncNodeOperationAssistant *_operationAssistant;
    struct OperationIterator _operationIterator;
    struct __wrap_iter<TOperationRecord *> {
        struct TOperationRecord *__i;
    } _operationRecordIter;
    struct vector<TOperationRecord, std::__1::allocator<TOperationRecord>> _operationRecordList;
    struct OperationStatus _status;
    id <IAsyncNodeOperationDelegateProtocol> _delegate;
    unsigned int _respondsToFlags;
    unsigned int _options;
}

+ (id)operationWithNodes:(const struct TFENodeVector *)arg1;
@property unsigned int options; // @synthesize options=_options;
@property(nonatomic) id <IAsyncNodeOperationDelegateProtocol> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (int)handleCompletedNotification;
- (int)handleSuboperationCompleted:(unsigned int)arg1 targetNode:(const struct TFENode *)arg2;
- (int)handleSuboperationStarted:(unsigned int)arg1;
- (int)handleErrorNotification:(const struct OperationMonitor *)arg1 error:(const struct OperationErrorRecord *)arg2;
- (int)handleStatusNotification:(const struct OperationMonitor *)arg1;
- (void)resetOperationRecordIter;
- (struct OperationRecord *)operationIterNext;
- (struct OperationRecord *)operationIterFirst;
- (void)configureOperationRecord:(struct TOperationRecord *)arg1 forNode:(const struct TFENode *)arg2;
- (void)configureForNodes:(const struct TFENodeVector *)arg1;
- (int)cancelOperation;
- (int)cancelCurrentSuboperation;
- (int)startOperation;
- (const struct TFENodeVector *)nodes;
- (void)finalize;
- (void)dealloc;
- (id)initWithNodes:(const struct TFENodeVector *)arg1;

@end

@interface TFileSystemOperationDelegate : NSObject <TFileSystemOperationDelegateProtocol>
{
}

+ (id)newDelegate;
- (int)asyncNodeOperation:(id)arg1 completedNotification:(const struct OperationMonitor *)arg2;
- (int)asyncNodeOperation:(id)arg1 errorNotification:(const struct OperationMonitor *)arg2 error:(const struct OperationErrorRecord *)arg3 reply:(struct NodeEventReply *)arg4;

@end

@interface TFileSystemOperation : IAsyncNodeOperation
{
}

+ (id)operationWithNodes:(const struct TFENodeVector *)arg1 delegate:(id)arg2;
- (int)uniqueNameProc:(id)arg1 seedFileSuffix:(id)arg2 reservedName:(id)arg3;
- (int)cancelOperation;
- (int)startSuboperation:(unsigned int)arg1 string:(id)arg2 propertyList:(const struct TFENodePropertyList *)arg3 target:(const struct TFENode *)arg4;
- (int)startSuboperation:(unsigned int)arg1 string:(id)arg2 propertyList:(const struct TFENodePropertyList *)arg3;
- (void)configureOperationRecord:(struct TOperationRecord *)arg1 forNode:(const struct TFENode *)arg2;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)newDelegate;
- (id)initWithNodes:(const struct TFENodeVector *)arg1;
- (id)initWithNodes:(const struct TFENodeVector *)arg1 delegate:(id)arg2;

@end

@interface TNewFolderOperationDelegate : TFileSystemOperationDelegate
{
}

- (int)asyncNodeOperation:(id)arg1 uniqueNameProc:(id)arg2 seedFileSuffix:(id)arg3 reservedName:(id)arg4;

@end

@interface TNewFolderOperation : TRenameOperation
{
    BOOL _isRenaming;
}

- (int)createNewFolder:(const struct TString *)arg1 properties:(const struct TFENodePropertyList *)arg2;
- (void)reconfigureToRenameNodes:(const struct TFENodeVector *)arg1;
- (void)configureOperationRecord:(struct TOperationRecord *)arg1 forNode:(const struct TFENode *)arg2;
- (id)newDelegate;

@end

@interface TMidnightTimer : NSObject
{
    NSTimer *_midnightTimer;
    NSDate *_midnightFireDate;
    NSDateComponents *_dateComponents;
}

- (void)checkTimersAfterSleeping;
- (void)_checkTimerAndFireDate:(id)arg1;
- (void)_setUpMidnightTimer;
- (void)_midnightPassed;
- (void)_systemTimeChanged:(id)arg1;
- (void)postNotificationIfDayChanged;
- (void)aboutToTearDown;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface TRenameOperationDelegate : TFileSystemOperationDelegate
{
    struct TString _newName;
    struct TriStateBool _extensionHiddenState;
}

+ (BOOL)isReservedName:(const struct TString *)arg1 syntaxHint:(const struct NodeNameSyntaxHint *)arg2;
+ (int)validateNewName:(const struct TString *)arg1 forNode:(const struct TFENode *)arg2 isDisplayName:(BOOL)arg3 allowInteraction:(BOOL)arg4;
- (id).cxx_construct;
- (void).cxx_destruct;
- (int)configureNewName:(struct TString *)arg1 forNode:(const struct TFENode *)arg2 isDisplayName:(BOOL)arg3 allowInteraction:(BOOL)arg4;
- (int)asyncNodeOperation:(id)arg1 subOperationCompleted:(unsigned int)arg2 targetNode:(const struct TFENode *)arg3;
- (int)asyncNodeOperation:(id)arg1 errorNotification:(const struct OperationMonitor *)arg2 error:(const struct OperationErrorRecord *)arg3 reply:(struct NodeEventReply *)arg4;
- (void)setExtensionHiddenState:(const struct TriStateBool *)arg1;
- (const struct TriStateBool *)extensionHiddenState;
- (const struct TString *)newName;

@end

@interface TRenameOperation : TFileSystemOperation
{
}

- (int)renameTo:(const struct TString *)arg1;
- (void)configureOperationRecord:(struct TOperationRecord *)arg1 forNode:(const struct TFENode *)arg2;
- (id)newDelegate;

@end

@interface TGroupInFolderAnimationController : NSObject
{
    struct unordered_map<TFENode, TGroupInFolderItem, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TGroupInFolderItem>>> _items;
    struct TNSRef<CALayer *> _hostLayer;
    struct TNSRef<TLayer *> _backgroundLayer;
    _Bool _itemsAreGrouped;
    struct CGPoint _groupFolderAnchor;
    struct TFENode _groupFolderNode;
    unsigned long long _groupingNodeCount;
}

@property(readonly, nonatomic) unsigned long long groupingNodeCount; // @synthesize groupingNodeCount=_groupingNodeCount;
@property(nonatomic) struct TFENode groupFolderNode; // @synthesize groupFolderNode=_groupFolderNode;
@property(nonatomic) struct CGPoint groupFolderAnchor; // @synthesize groupFolderAnchor=_groupFolderAnchor;
@property(nonatomic) _Bool itemsAreGrouped; // @synthesize itemsAreGrouped=_itemsAreGrouped;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)animateUngroupingDesktop;
- (void)animateGroupingDesktop;
- (void)animateUngroupingList;
- (void)animateGroupingList;
- (void)layoutUngrouped;
- (void)layoutGrouped;
- (void)layoutItemGrouped:(const struct TFENode *)arg1;
- (void)layoutItemUngrouped:(const struct TFENode *)arg1;
- (double)groupingAnimationDuration;
- (void)setGroupedFrame:(struct CGRect)arg1 forNode:(const struct TFENode *)arg2;
- (void)setUngroupedFrame:(struct CGRect)arg1 forNode:(const struct TFENode *)arg2;
- (void)addNode:(const struct TFENode *)arg1 withImage:(struct CGImage *)arg2 andFrame:(const struct CGRect *)arg3 atAnchorPoint:(const struct CGPoint *)arg4 forGrouping:(BOOL)arg5;
- (void)addBackgroundImage:(id)arg1 withFrame:(const struct CGRect *)arg2;
- (void)hide;
- (void)show;
- (void)showNode:(const struct TFENode *)arg1;
- (struct TFENodeVector)nonGroupingNodes;
- (struct TFENodeVector)groupingNodes;
@property(nonatomic) CALayer *hostLayer;
- (void)dealloc;

@end

@interface TNewAliasOperationDelegate : TFileSystemOperationDelegate
{
    BOOL _allowInteraction;
}

@property BOOL allowInteraction; // @synthesize allowInteraction=_allowInteraction;
- (int)asyncNodeOperation:(id)arg1 uniqueNameProc:(id)arg2 seedFileSuffix:(id)arg3 reservedName:(id)arg4;
- (int)asyncNodeOperation:(id)arg1 errorNotification:(const struct OperationMonitor *)arg2 error:(const struct OperationErrorRecord *)arg3 reply:(struct NodeEventReply *)arg4;
- (id)init;

@end

@interface TNewAliasOperation : TRenameOperation
{
    struct unordered_map<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>>> _recordsTable;
    struct __hash_map_const_iterator<std::__1::__hash_const_iterator<const std::__1::__hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>> {
        struct __hash_const_iterator<const std::__1::__hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*> {
            struct __hash_node<std::__1::pair<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *> *__node_;
        } __i_;
    } _recordsTableIter;
    struct __wrap_iter<const std::__1::pair<TFENode, TFENodePropertyList>*> {
        struct pair<TFENode, TFENodePropertyList> *__i;
    } _recordIter;
    BOOL _addAliasSuffix;
    BOOL _creatingAliasInPBF;
    BOOL _isRenaming;
}

+ (id)operationWithNodes:(const struct TFENodeVector *)arg1 properties:(const vector_d50fdf79 *)arg2 destinationNode:(const struct TFENode *)arg3 allowInteraction:(BOOL)arg4 addAliasSuffix:(BOOL)arg5 delegate:(id)arg6;
+ (id)operationWithNodes:(const struct TFENodeVector *)arg1 properties:(const vector_d50fdf79 *)arg2 allowInteraction:(BOOL)arg3 addAliasSuffix:(BOOL)arg4 delegate:(id)arg5;
- (id).cxx_construct;
- (void).cxx_destruct;
- (int)handleSuboperationCompleted:(unsigned int)arg1 targetNode:(const struct TFENode *)arg2;
- (int)createNewAlias:(const struct TFENode *)arg1 properties:(const struct TFENodePropertyList *)arg2 addAliasSuffix:(BOOL)arg3;
- (BOOL)isDoneCreatingAliases;
- (int)createNewAliases;
- (void)reconfigureToRenameNodes:(const struct TFENodeVector *)arg1;
- (void)configureOperationRecord:(struct TOperationRecord *)arg1 forNode:(const struct TFENode *)arg2;
- (id)newDelegate;

@end

@interface TFileHistoryQLPreviewView : QLPreviewView
{
}

@end

@interface TFileHistoryQLPreviewViewExtractor : IPropertyFINodeExtractor
{
    NSString *_nodeSuffix;
}

+ (id)extractor;
- (BOOL)isApplicableToNodes:(const struct TFENodeVector *)arg1;
- (BOOL)needsUpdateForProperty:(unsigned int)arg1 node:(const struct TFENode *)arg2;
- (id)extractValueFromNodes:(const struct TFENodeVector *)arg1;
- (void)dealloc;

@end

@interface TFileHistoryPreviewViewController : IPropertyValueController <QLPreviewViewDelegate, FIAliasResolution>
{
    struct CGRect _masterFrame;
    struct TFENodeVector _nodes;
    struct TFileHistoryQLPreviewQTEjectHelper _ejectHelper;
}

+ (id)controllerForFrame:(struct CGRect)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)nodeMDAttributeChanged:(const struct TFENode *)arg1 attributes:(id)arg2 isDisplayAttributes:(BOOL)arg3;
- (void)nodesGoingAway:(const struct TFENodeVector *)arg1;
- (void)bulkNodesDeleted:(const map_6f5aee00 *)arg1;
- (void)bulkNodesChanged:(const map_9a8e9377 *)arg1;
- (unsigned int)notificationOptionsForNodes:(const struct TFENodeVector *)arg1;
- (void)setNodes:(const struct TFENodeVector *)arg1;
- (const struct TFENodeVector *)nodes;
- (void)loadView;
- (id)initWithFrame:(struct CGRect)arg1;
- (BOOL)isBackupBrowser;
- (BOOL)quickLookHandleEvent:(id)arg1;
- (void)alias:(const struct TFENode *)arg1 resolvedAs:(const struct TFENode *)arg2 temporaryNode:(const struct TFENode *)arg3;
- (BOOL)previewView:(id)arg1 writePreviewItem:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)previewView:(id)arg1 acceptDrop:(id)arg2 onPreviewItem:(id)arg3;
- (unsigned long long)previewView:(id)arg1 validateDrop:(id)arg2 onPreviewItem:(id)arg3;
- (void)previewView:(id)arg1 doubleClickedOnPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 didLoadPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 willLoadPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 didShowPreviewItem:(id)arg2;
- (void)display;
- (BOOL)isLoading;
- (BOOL)isResizable;
- (void)refresh;
- (void)stopPlaying;
- (BOOL)adjustSize:(BOOL)arg1;
- (void)handleNodesGoingAway:(const struct TFENodeVector *)arg1;
- (void)handleBulkNodesDeleted:(const map_6f5aee00 *)arg1 observedNodes:(const struct TFENodeVector *)arg2;
- (void)handleBulkNodesChanged:(const map_9a8e9377 *)arg1 observedNodes:(const struct TFENodeVector *)arg2;
- (void)setView:(id)arg1;
- (void)dealloc;
- (void)initCommon;

@end

@interface TFileHistoryWindowController : TScriptableWindowController <NSWindowDelegate, TCoalescingNodeObserverProtocol>
{
    TFileHistoryPreviewViewController *_viewController;
    struct TFENodeVector _nodes;
    struct TCoalescingNodeObserverCocoaBridge *_nodeObserver;
    unsigned int _nodesNotificationOptions;
}

+ (id)fileHistoryWindowForNodes:(const struct TFENodeVector *)arg1 sourceWindow:(id)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)bulkNodesDeleted:(const map_6f5aee00 *)arg1;
- (id)viewController;
- (long long)windowNumber;
- (void)closeWindow;
- (void)close;
- (void)closeButtonClicked;
- (void)nodeMDAttributeChanged:(const struct TFENode *)arg1 attributes:(id)arg2 isDisplayAttributes:(BOOL)arg3;
- (void)aliasesTargetChanged:(const struct TFENodeVector *)arg1;
- (void)nodesGoingAway:(const struct TFENodeVector *)arg1;
- (void)bulkNodesChanged:(const map_9a8e9377 *)arg1;
- (unsigned int)notificationOptionsForNodes:(const struct TFENodeVector *)arg1;
- (void)setNodes:(const struct TFENodeVector *)arg1;
- (const struct TFENodeVector *)nodes;
- (void)setContentView;
- (struct TFENode)fetchWindowProxyNode;
- (void)windowWillClose:(id)arg1;
- (void)initCommon;
- (id)fileHistoryWindow:(id)arg1;

@end

@interface TArrangeByPopUp : NSPopUpButton
{
    TArrangeByMenuController *_arrangeByMenuController;
}

@property(retain, nonatomic) TArrangeByMenuController *arrangeByMenuController; // @synthesize arrangeByMenuController=_arrangeByMenuController;
- (void)mouseDown:(id)arg1;
- (void)dealloc;

@end

@interface TArrangementToolbarItem : TToolbarItem <NSMenuDelegate>
{
    TArrangeByMenuController *_arrangeByMenuController;
}

- (void)validate;
- (void)dealloc;
- (void)finalize;
- (id)initWithItemIdentifier:(id)arg1 entry:(const struct ToolbarItemInfo *)arg2 controller:(id)arg3 propertyList:(id)arg4 willBeInsertedIntoToolbar:(BOOL)arg5;

@end

@interface TLayoutGrid : NSObject
{
    int _layoutStyle;
    int _layoutOrientation;
    _Bool _justifiedLayout;
    _Bool _pinEdges;
    struct Point32 _minimumGridDimensions;
    struct CGRect _frame;
    struct CGSize _gridSize;
    double _topMargin;
    double _bottomMargin;
    double _leftMargin;
    double _rightMargin;
    struct CGSize _cellSize;
    struct CGSize _cellSpacing;
    struct CGRect _anchoredIconMaxBounds;
    struct Point32 _gridDimensions;
    unsigned long long _numberOfGridSpots;
    struct TIconLayoutBitmap _bitmap;
}

@property(nonatomic) struct CGSize cellSpacing; // @synthesize cellSpacing=_cellSpacing;
@property(nonatomic) struct CGSize cellSize; // @synthesize cellSize=_cellSize;
@property(nonatomic) double rightMargin; // @synthesize rightMargin=_rightMargin;
@property(nonatomic) double leftMargin; // @synthesize leftMargin=_leftMargin;
@property(nonatomic) double bottomMargin; // @synthesize bottomMargin=_bottomMargin;
@property(nonatomic) double topMargin; // @synthesize topMargin=_topMargin;
@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
@property(nonatomic) _Bool pinEdges; // @synthesize pinEdges=_pinEdges;
@property(nonatomic) _Bool justifiedLayout; // @synthesize justifiedLayout=_justifiedLayout;
@property(nonatomic) int layoutStyle; // @synthesize layoutStyle=_layoutStyle;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)nextOpenLocation:(struct Point32 *)arg1;
- (void)clearAllItemLocations;
- (void)occupyGridSpotsForRect:(const struct CGRect *)arg1;
- (_Bool)setItemLocation:(struct Point32)arg1;
- (_Bool)itemAtLocation:(struct Point32)arg1;
- (struct Point32)gridLocationInDirection:(int)arg1 fromAnchor:(const struct CGPoint *)arg2;
- (struct Point32)nearestGridLocation:(struct CGPoint)arg1;
- (struct CGPoint)anchorForIndex:(unsigned long long)arg1;
- (struct CGPoint)anchorAtGridLocation:(struct Point32)arg1;
- (unsigned long long)numberOfGridSpots;
- (struct Point32)gridDimensions;
@property(nonatomic) struct CGSize gridSize;
- (void)updateGrid;
- (struct CGSize)calculateCellSpacing;
@property(nonatomic) struct CGRect anchoredIconMaxBounds;
- (_Bool)getCellFrame:(struct CGRect *)arg1 atGridLocation:(struct Point32)arg2;
- (double)heightForRows:(unsigned long long)arg1;
- (unsigned long long)calculateNumberOfGridSpots;
- (struct Point32)calculateGridDimensions;
- (void)updateBitmap;
@property(readonly, nonatomic) struct CGRect layoutFrame;
- (id)init;

@end

@interface TFinderIconMetricsController : NSObject
{
    double _iconSize;
    double _textSize;
    BOOL _labelOnBottom;
    BOOL _showItemInfo;
    double _gridSpacing;
    struct TViewsFontCache *_font;
    struct CGRect _anchoredIconMaxBounds;
    struct CGRect _anchoredIconBounds;
    struct CGRect _anchoredMaxLabelBounds;
    struct CGRect _anchoredSelectionRectBounds;
    double _labelLineHeight;
    double _labelCharacterWidth;
}

@property(readonly, nonatomic) struct CGRect anchoredSelectionRectBounds; // @synthesize anchoredSelectionRectBounds=_anchoredSelectionRectBounds;
@property(readonly, nonatomic) struct CGRect anchoredMaxLabelBounds; // @synthesize anchoredMaxLabelBounds=_anchoredMaxLabelBounds;
@property(readonly, nonatomic) struct CGRect anchoredIconBounds; // @synthesize anchoredIconBounds=_anchoredIconBounds;
@property(readonly, nonatomic) struct CGRect anchoredIconMaxBounds; // @synthesize anchoredIconMaxBounds=_anchoredIconMaxBounds;
@property(nonatomic) double gridSpacing; // @synthesize gridSpacing=_gridSpacing;
@property(nonatomic) BOOL showItemInfo; // @synthesize showItemInfo=_showItemInfo;
@property(nonatomic) BOOL labelOnBottom; // @synthesize labelOnBottom=_labelOnBottom;
@property(nonatomic) double textSize; // @synthesize textSize=_textSize;
@property(nonatomic) double iconSize; // @synthesize iconSize=_iconSize;
- (id).cxx_construct;
- (void)updateMetrics;
- (struct CGSize)calculateGridSize;
- (long long)maxLabelLines;
- (void)drawComponantOutlinesInContext:(struct CGContext *)arg1 atAnchor:(const struct CGPoint *)arg2;
- (void)drawIconLabelMaxBoundsOutlineInContext:(struct CGContext *)arg1 atAnchor:(const struct CGPoint *)arg2;
- (void)drawSelectionRectBoundsOutlineInContext:(struct CGContext *)arg1 atAnchor:(const struct CGPoint *)arg2;
- (void)drawIconMaxBoundsOutlineInContext:(struct CGContext *)arg1 atAnchor:(const struct CGPoint *)arg2;
- (void)drawIconBoundsOutlineInContext:(struct CGContext *)arg1 atAnchor:(const struct CGPoint *)arg2;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface TIconSpatialDataController : NSObject
{
    _Bool _locationsArePersistant;
    struct TFENodeVector _bulkSettingNodes;
    struct TFENode _bulkSettingContainer;
    vector_3577cbd0 _bulkSettingSpatialData;
    long long _settingSpatialDataInBulk;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setNodePropertyList:(struct TFENodePropertyList *)arg1 spatialData:(struct DataBrowserItemSpatialData)arg2;
- (_Bool)loadSpatialData:(struct DataBrowserItemSpatialData *)arg1 forNode:(const struct TFENode *)arg2;
- (void)writeSpatialDataInBulk;
- (void)writeSpatialData:(const struct DataBrowserItemSpatialData *)arg1 forNode:(const struct TFENode *)arg2;
- (void)saveSpatialData:(const struct DataBrowserItemSpatialData *)arg1 forNode:(const struct TFENode *)arg2;
- (void)setSpatialDataBulkMode:(_Bool)arg1 forParent:(const struct TFENode *)arg2;
- (id)init;

@end

@interface TDesktopIconSpatialDataController : TIconSpatialDataController
{
    struct DisplayList _displayList;
    struct TDisplayConfiguration _displayConfiguration;
    struct vector<TSpatialDataCacheElement, std::__1::allocator<TSpatialDataCacheElement>> _volumeSpatialDataCache;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)clearVolume:(const struct TFENode *)arg1;
- (void)removeVolumeFromCache:(const struct TFENode *)arg1;
- (void)setNodePropertyList:(struct TFENodePropertyList *)arg1 spatialData:(struct DataBrowserItemSpatialData)arg2;
- (_Bool)loadSpatialData:(struct DataBrowserItemSpatialData *)arg1 forNode:(const struct TFENode *)arg2;
- (_Bool)loadDesktopSpatialData:(struct DesktopIconSpatialData *)arg1 forNode:(const struct TFENode *)arg2;
- (void)writeSpatialDataInBulk;
- (void)writeSpatialData:(const struct DataBrowserItemSpatialData *)arg1 forNode:(const struct TFENode *)arg2;
- (struct TString)createKeyString:(const struct TFENode *)arg1;
- (void)relativeSpatialData:(const struct DesktopIconSpatialData *)arg1 toAbsoluteSpatialData:(struct DataBrowserItemSpatialData *)arg2 homothetic:(_Bool)arg3;
- (_Bool)absoluteSpatialData:(const struct DataBrowserItemSpatialData *)arg1 toRelativeSpatialData:(struct DesktopIconSpatialData *)arg2;
- (unsigned int)displayContaining:(const struct CGPoint *)arg1 getClosestCorner:(unsigned int *)arg2 andRelativeLocation:(struct CGPoint *)arg3;
- (unsigned int)displayByIndex:(unsigned int)arg1;
- (unsigned int)mainDisplay;
- (void)configurationChanged;
- (id)init;

@end

@interface TScreen : NSObject
{
}

+ (void)forceWindowOntoPrimaryDisplay:(id)arg1 offsetFromBottom:(double)arg2;
+ (id)screenWithDisplayID:(unsigned int)arg1;
+ (struct CGRect)availableWindowPositioningBoundsForPoint:(const struct CGPoint *)arg1;
+ (struct CGRect)availableWindowPositioningBoundsForRect:(const struct CGRect *)arg1;
+ (id)greatestAreaScreenForPoint:(const struct CGPoint *)arg1;
+ (id)greatestAreaScreenForRect:(const struct CGRect *)arg1;
+ (set_bb8d1d1f)availableScaleFactors;
+ (double)cgScaleFactorForGreatestAreaScreenRect:(const struct CGRect *)arg1;
+ (double)primaryScreenCGScaleFactor;
+ (double)cgScaleFactorForScreen:(id)arg1;
+ (double)userSpaceScaleFactor;
+ (unsigned int)primaryScreenDisplayID;
+ (struct CGRect)primaryScreenVisibleFrame;
+ (struct CGRect)primaryScreenFrame;
+ (id)primaryScreen;

@end

@interface TLabelStamperCell : NSSegmentedCell
{
}

- (double)_menuDelayTimeForSegment:(long long)arg1;

@end

@interface TLabelStamperToolbarItem : TToolbarItem <NSMenuDelegate>
{
}

+ (void)sendLabelCommand:(long long)arg1;
- (void)validate;
- (void)menuNeedsUpdate:(id)arg1;
- (void)cmdStampCurrentLabel:(id)arg1;
- (void)cmdStampLabel:(id)arg1;
- (void)stampLabelCommon:(long long)arg1;
- (id)initWithItemIdentifier:(id)arg1 entry:(const struct ToolbarItemInfo *)arg2 controller:(id)arg3 propertyList:(id)arg4 willBeInsertedIntoToolbar:(BOOL)arg5;
- (id)stampImageForLabel:(long long)arg1;
- (id)imageForLabel:(long long)arg1;

@end

@interface TSplitView : NSSplitView
{
}

- (BOOL)isOpaque;
- (void)animatePosition:(double)arg1 ofDividerAtIndex:(unsigned long long)arg2;
- (double)positionOfDividerAtIndex:(unsigned long long)arg1;
- (struct CGSize)sizeOfSubviewAtIndex:(unsigned long long)arg1;
- (id)subviewAtIndex:(unsigned long long)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1 skipDrawing:(BOOL)arg2;
- (void)initCommon;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface TSplitViewController : TViewController <NSSplitViewDelegate>
{
}

- (BOOL)isVertical;
- (id)splitViewNoLoad;
- (id)splitView;
- (void)finalize;
- (void)dealloc;

@end

@interface TNameTextField : TTextField
{
    id <TNameTextFieldDelegate> _nameFieldDelegate;
    BOOL _becomingFirstResponder;
}

@property(nonatomic) id <TNameTextFieldDelegate> nameFieldDelegate; // @synthesize nameFieldDelegate=_nameFieldDelegate;
- (void)removeTrackingAreas;
- (void)updateTrackingAreas;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)viewWillDraw;
- (void)setActionBtnAction:(SEL)arg1;
- (void)setActionBtnTarget:(id)arg1;
- (void)setShowEjectButton:(BOOL)arg1;
- (void)setNode:(const struct TFENode *)arg1;
- (void)finalize;
- (void)dealloc;

@end

@interface TImageBrowserView : IKImageBrowserView
{
}

- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (id)backgroundSubtextAttributes;
- (id)backgroundTextAttributes;

@end

@interface TGroupTitleTextField : TTextField
{
}

- (void)setObjectValue:(id)arg1;
- (void)setStringValue:(id)arg1;
- (void)awakeCommon;
- (void)initCommon;
- (void)configuteTextAttributes;

@end

@interface TGroupTitleTextCell : TTextCell
{
}

- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;

@end

@interface TPopover : NSPopover
{
    struct CGSize _contentViewSizeCache;
}

- (id).cxx_construct;
- (id)positioningWindow;
- (void)contentViewFrameChanged;
- (void)setContentViewController:(id)arg1;
- (void)showRelativeToRect:(struct CGRect)arg1 ofView:(id)arg2 preferredEdge:(unsigned long long)arg3;
- (void)dealloc;

@end

@interface TMeetingRoomStatusViewController : TViewController
{
    TProgressIndicator *_progress;
    TTextField *_mainTextFld;
    TTextField *_subTextFld;
    TButton *_cancelButton;
    struct TNSRef<TLayoutBinder *> _layoutBinder;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)viewDidMoveToSuperview;
@property(nonatomic) double percentComplete; // @dynamic percentComplete;
@property(nonatomic) struct _NSRange subTextTruncateInRange; // @dynamic subTextTruncateInRange;
@property(retain, nonatomic) NSString *subTextStr; // @dynamic subTextStr;
@property(nonatomic) struct _NSRange mainTextTruncateInRange; // @dynamic mainTextTruncateInRange;
@property(retain, nonatomic) NSString *mainTextStr; // @dynamic mainTextStr;
- (void)dealloc;
- (void)viewLoaded;

@end

@interface TMeetingRoomErrorViewController : TViewController
{
    TTextField *_errorTextFld;
    struct TNSRef<TLayoutBinder *> _layoutBinder;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)viewDidMoveToSuperview;
@property(retain, nonatomic) NSString *errorTextStr; // @dynamic errorTextStr;
- (void)dealloc;
- (void)viewLoaded;

@end

@interface TMeetingRoomWaitingViewController : TViewController
{
    TTextField *_waitingTextFld;
    struct TNSRef<TLayoutBinder *> _layoutBinder;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)viewDidMoveToSuperview;
@property(retain, nonatomic) NSString *waitingTextStr; // @dynamic waitingTextStr;
- (void)dealloc;
- (void)viewLoaded;

@end

@interface TMeetingRoomAskUserViewController : TViewController
{
    IMeetingRoomProgressViewController *_controller;
    TImageView *_imageView;
    TTextField *_mainTextFld;
    struct TNSRef<TLayoutBinder *> _layoutBinder;
}

@property(readonly) TImageView *imageView; // @synthesize imageView=_imageView;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)viewDidMoveToSuperview;
@property(retain, nonatomic) NSString *mainTextStr; // @dynamic mainTextStr;
- (void)dealloc;
- (void)viewLoaded;

@end

@interface TMeetingRoomAreYouSureViewController : TViewController
{
    TTextField *_mainTextFld;
    struct TNSRef<TLayoutBinder *> _layoutBinder;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)viewDidMoveToSuperview;
@property(retain, nonatomic) NSString *mainTextStr; // @dynamic mainTextStr;
- (void)dealloc;
- (void)viewLoaded;

@end

@interface IMeetingRoomProgressViewController : TViewController <TNWOperationDelegateProtocol>
{
    TMeetingRoomProgressController *_controller;
    TView *_contentView;
    struct TNSRef<TLayoutBinder *> _layoutBinder;
    TMeetingRoomAreYouSureViewController *_areYouSureViewController;
    TMeetingRoomAskUserViewController *_askUserViewController;
    TMeetingRoomStatusViewController *_statusViewController;
    TMeetingRoomErrorViewController *_errorViewController;
    TMeetingRoomWaitingViewController *_waitingViewController;
    TImageView *_imageView;
    struct TNSRef<NSImage *> _largeImage;
    struct TNSRef<NSImage *> _smallImage;
    BOOL _canceledByUser;
    struct TFENode _targetNode;
    long long _bytesToCopy;
    long long _bytesCopied;
    struct TRecursiveMutex _operationControllerLock;
    BOOL _shouldEnableButtons;
    BOOL _hasWaitingBeenShown;
    BOOL _hasBlockedBeenShown;
}

@property(readonly, nonatomic) struct TRecursiveMutex *operationControllerLock; // @synthesize operationControllerLock=_operationControllerLock;
@property(readonly, nonatomic) long long bytesCopied; // @synthesize bytesCopied=_bytesCopied;
@property(readonly, nonatomic) long long bytesToCopy; // @synthesize bytesToCopy=_bytesToCopy;
@property(readonly, nonatomic) TMeetingRoomWaitingViewController *waitingViewController; // @synthesize waitingViewController=_waitingViewController;
@property(readonly, nonatomic) TMeetingRoomErrorViewController *errorViewController; // @synthesize errorViewController=_errorViewController;
@property(readonly, nonatomic) TMeetingRoomStatusViewController *statusViewController; // @synthesize statusViewController=_statusViewController;
@property(readonly, nonatomic) TMeetingRoomAskUserViewController *askUserViewController; // @synthesize askUserViewController=_askUserViewController;
@property(readonly, nonatomic) TMeetingRoomAreYouSureViewController *areYouSureViewController; // @synthesize areYouSureViewController=_areYouSureViewController;
@property(nonatomic) BOOL canceledByUser; // @synthesize canceledByUser=_canceledByUser;
@property(readonly) BOOL hasBlockedBeenShown; // @synthesize hasBlockedBeenShown=_hasBlockedBeenShown;
@property(readonly) BOOL hasWaitingBeenShown; // @synthesize hasWaitingBeenShown=_hasWaitingBeenShown;
@property BOOL shouldEnableButtons; // @synthesize shouldEnableButtons=_shouldEnableButtons;
@property TMeetingRoomProgressController *controller; // @synthesize controller=_controller;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setContentView:(id)arg1;
- (void)showOrUpdateWaitingView:(id)arg1;
- (void)showWaitingViewWithWaitingTextStr:(const struct TString *)arg1;
- (void)showWaitingView;
- (void)showErrorViewWithErrorTextStr:(const struct TString *)arg1;
- (void)showErrorView;
- (BOOL)isShowingStatusView;
- (void)showStatusViewWithMainTextStr:(const struct TString *)arg1 mainTextTruncateInRange:(const struct _NSRange *)arg2 subTextStr:(const struct TString *)arg3 subTextTruncateInRange:(const struct _NSRange *)arg4 percentComplete:(double)arg5;
- (void)showStatusView;
- (BOOL)isShowingAskUserView;
- (void)showAskUserViewWithMainTextStr:(const struct TString *)arg1;
- (void)showAskUserView;
- (void)showAreYouSureViewWithMainTextStr:(const struct TString *)arg1;
- (void)showAreYouSureView;
- (void)showContentView:(id)arg1;
- (void)nwOperationEventBlocked:(id)arg1;
- (void)nwOperationEventConnecting:(id)arg1;
- (void)nwOperationEventWaitForAnswer:(id)arg1;
- (void)preflightNWOperationEvent:(long long)arg1 results:(id)arg2;
- (void)cancel;
- (void)resume;
- (void)showPopover;
- (void)browserViewWillBeRemovedFromWindow;
- (void)openButtonPressed:(id)arg1;
- (void)inlineProgressCancel;
- (void)cancelButtonPressed:(id)arg1;
- (void)okButtonPressed:(id)arg1;
- (void)setHasBlockedBeenShown:(BOOL)arg1;
- (void)setHasWaitingBeenShown:(BOOL)arg1;
- (void)setBytesCopied:(long long)arg1;
- (void)setBytesToCopy:(long long)arg1;
- (struct IMeetingRoomBaseOperationController *)operationController;
- (void)setTargetNode:(const struct TFENode *)arg1;
- (const struct TFENode *)targetNode;
@property(retain, nonatomic) NSImage *smallImage; // @dynamic smallImage;
@property(retain, nonatomic) NSImage *largeImage; // @dynamic largeImage;
@property(readonly, nonatomic) long long currentNWOperationEvent; // @dynamic currentNWOperationEvent;
- (id)nibName;
- (void)aboutToTearDown;
- (void)dealloc;
- (void)viewLoaded;
- (void)initCommon;

@end

@interface TMeetingRoomSenderProgressViewController : IMeetingRoomProgressViewController <TCoalescingNodeObserverProtocol>
{
    struct TMeetingRoomSenderOperationController *_senderOpController;
    struct TFENodeVector _nodesBeingSent;
    struct TCoalescingNodeObserverCocoaBridge *_nodeObserver;
    struct TNSRef<TPropertyLogicalSizeExtractor *> _sizeExtractor;
}

+ (void)startSendingNodes:(const struct TFENodeVector *)arg1 toReceiverNode:(const struct TFENode *)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)showOrUpdateStatusView;
- (void)showOrUpdateAreYouSureView;
- (void)bulkNodesChanged:(const map_9a8e9377 *)arg1;
- (void)nwOperationEventBlocked:(id)arg1;
- (void)nwOperationEventConnecting:(id)arg1;
- (void)nwOperationEventErrorOccurred:(id)arg1;
- (void)nwOperationEventFinished:(id)arg1;
- (void)nwOperationEventPostprocess:(id)arg1;
- (void)nwOperationEventProgress:(id)arg1;
- (void)nwOperationEventPreprocess:(id)arg1;
- (void)nwOperationEventConflict:(id)arg1;
- (void)nwOperationEventStarted:(id)arg1;
- (void)nwOperationEventWaitForAnswer:(id)arg1;
- (void)nwOperationEventCanceled:(id)arg1;
- (void)nwOperationEventAskUser:(id)arg1;
- (void)browserViewWillBeRemovedFromWindow;
- (void)resume;
- (long long)currentNWOperationEvent;
- (struct IMeetingRoomBaseOperationController *)operationController;
- (void)aboutToTearDown;
- (id)initWithReceiverServerNode:(const struct TFENode *)arg1 nodesToSend:(const struct TFENodeVector *)arg2;

@end

@interface TMeetingRoomReceiverProgressViewController : IMeetingRoomProgressViewController <TDraggingSource>
{
    struct TMeetingRoomReceiverOperationController *_receiverOpController;
    struct TNSRef<NSMutableArray *> _downloads;
}

+ (void)startReceivingWithOperation:(struct __NWOperation *)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)ignoreModifierKeysForDraggingSession:(id)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)startDragInView:(id)arg1 withEvent:(id)arg2;
- (void)showOrUpdateStatusView;
- (void)showOrUpdateAskUserView;
- (void)nwOperationEventBlocked:(id)arg1;
- (void)nwOperationEventConnecting:(id)arg1;
- (void)nwOperationEventErrorOccurred:(id)arg1;
- (void)nwOperationEventFinished:(id)arg1;
- (void)nwOperationEventPostprocess:(id)arg1;
- (void)nwOperationEventProgress:(id)arg1;
- (void)nwOperationEventPreprocess:(id)arg1;
- (void)nwOperationEventConflict:(id)arg1;
- (void)nwOperationEventStarted:(id)arg1;
- (void)nwOperationEventCanceled:(id)arg1;
- (void)nwOperationEventAskUser:(id)arg1;
- (void)preflightNWOperationEvent:(long long)arg1 results:(id)arg2;
- (void)browserViewWillBeRemovedFromWindow;
- (void)openButtonPressed:(id)arg1;
- (void)okButtonPressed:(id)arg1;
- (id)createProgressForURL:(id)arg1;
- (void)resume;
- (long long)currentNWOperationEvent;
- (struct IMeetingRoomBaseOperationController *)operationController;
- (void)aboutToTearDown;
- (id)initWithReceiverOperation:(struct __NWOperation *)arg1;

@end

@interface TProgressIndicator : NSProgressIndicator
{
    BOOL _animateWhenIndeterminate;
}

@property(nonatomic) BOOL animateWhenIndeterminate; // @synthesize animateWhenIndeterminate=_animateWhenIndeterminate;
- (void)viewDidMoveToWindow;
- (void)setIndeterminate:(BOOL)arg1;
- (void)initCommon;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(nonatomic) BOOL usesThreadedAnimation; // @dynamic usesThreadedAnimation;

@end

@interface TDateTextField : TTextField
{
    BOOL _suspendReformat;
    BOOL _autoFormatToFit;
    BOOL _useRelativeDates;
    struct TNSRef<NSDate *> _date;
    struct vector<TFormattedDateEntry, std::__1::allocator<TFormattedDateEntry>> _dateFormatTable;
}

+ (Class)cellClass;
@property(nonatomic) BOOL useRelativeDates; // @synthesize useRelativeDates=_useRelativeDates;
@property(nonatomic) BOOL autoFormatToFit; // @synthesize autoFormatToFit=_autoFormatToFit;
@property(nonatomic) BOOL suspendReformat; // @synthesize suspendReformat=_suspendReformat;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct CGSize)calcIdealSizeImpl;
- (void)formatToFit;
- (void)reformat;
- (double)smallestWidthForCurrentFormat;
- (double)availableTextWidth;
- (void)setFont:(id)arg1;
- (void)setObjectValue:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setMinSize:(struct CGSize)arg1;
- (void)setMaxSize:(struct CGSize)arg1;
- (void)setControlSize:(unsigned long long)arg1;
@property(retain, nonatomic) NSDate *date; // @dynamic date;
- (void)applySettingsFrom:(id)arg1;
- (void)dealloc;
- (void)awakeCommon;
- (void)initCommon;

@end

@interface TDateTextWithTitleField : TDateTextField <TTextWithTitleFieldImplProtocol>
{
    struct TNSRef<TTextWithTitleFieldImpl *> _implementation;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (double)calcHeightToFitOfTextFieldOnly:(struct CGSize)arg1;
- (double)calcHeightToFit:(struct CGSize)arg1;
@property TTitleField *titleFld; // @dynamic titleFld;
- (void)initCommon;

@end

@interface TImageView : NSImageView
{
    SEL _clickAction;
    SEL _doubleClickAction;
    BOOL _doubleClickOnMouseUp;
    id <TDraggingSource> _draggingSourceDelegate;
    struct CGSize _maxSize;
    struct CGSize _minSize;
}

@property(nonatomic) struct CGSize minSize; // @synthesize minSize=_minSize;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=_maxSize;
@property id <TDraggingSource> draggingSourceDelegate; // @synthesize draggingSourceDelegate=_draggingSourceDelegate;
@property SEL doubleClickAction; // @synthesize doubleClickAction=_doubleClickAction;
@property SEL clickAction; // @synthesize clickAction=_clickAction;
- (id).cxx_construct;
- (void)setImage:(id)arg1;
@property BOOL rejectsMultiFileDrops; // @dynamic rejectsMultiFileDrops;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)setBoundsSize:(struct CGSize)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)awakeCommon;
- (void)initCommon;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface TTransparentWindow : NSWindow
{
}

- (void)closePriv;
- (void)close;
- (BOOL)_canBecomeSecondaryKeyWindow;
- (BOOL)canBecomeKeyWindow;
- (id)initWithContentRect:(const struct CGRect *)arg1;
- (id)initWithFrameRect:(const struct CGRect *)arg1;

@end

@interface TTransparentChildWindow : TTransparentWindow
{
}

- (void)closePriv;
- (void)dealloc;
- (id)initWithContentRect:(const struct CGRect *)arg1 inParentWindow:(id)arg2;
- (id)initWithFrameRect:(const struct CGRect *)arg1 inParentWindow:(id)arg2;
- (void)initCommon:(id)arg1;

@end

@interface TMeetingRoomInfoView : TView
{
    struct TNSRef<NSImage *> _infoViewImage;
    struct CGSize _browserViewContainerSizeCache;
    BOOL _cachedImageIsForArcMode;
    BOOL _renderingInfoViewImage;
}

@property(nonatomic) BOOL cachedImageIsForArcMode; // @synthesize cachedImageIsForArcMode=_cachedImageIsForArcMode;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)windowBackingChanged:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (id)infoViewImage;
- (void)updateInfoViewImage;
- (void)invalidateInfoViewImage;
- (void)drawRect:(struct CGRect)arg1;
- (id)iconViewController;
- (void)browserViewContainerFrameChanged:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)setUpBindings;
- (void)dealloc;
- (void)initCommon;

@end

@interface TMeetingRoomInfoViewController : TViewController
{
    TTextField *_infoTextField;
    TImageView *_meImageView;
    struct TString _infoTextTemplate;
    struct TNSRef<NSImage *> _faceImage;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)updateInfoText;
- (void)updateFaceImage;
- (struct CGRect)meImageViewFrame;
@property(readonly, nonatomic) NSImage *faceImage; // @dynamic faceImage;
- (void)setFaceImage:(id)arg1;
- (void)invalidateInfoViewImage;
- (id)meetingRoomInfoView;
- (id)nibName;
- (void)dealloc;
- (void)viewLoaded;

@end

@interface TCoverLayerController : NSObject <NSWindowDelegate>
{
    struct TNSRef<NSWindow *> _parentWindow;
    struct TNSRef<CALayer *> _rootLayer;
    BOOL _serverSide;
    struct TNSRef<NSWindow *> _hostWindow;
    struct CGRect _frame;
    unsigned int _surfaceID;
    struct TNSRef<CAContext *> _caContext;
}

+ (id)overlayController;
@property(nonatomic) BOOL serverSide; // @synthesize serverSide=_serverSide;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setFrame:(struct CGRect)arg1;
- (void)hide;
- (void)show;
@property(readonly, nonatomic) CALayer *rootLayer;
- (void)setUpLayerHost;
@property(retain, nonatomic) NSWindow *parentWindow;
- (void)windowDidMove:(id)arg1;
- (id)hostWindow;
- (void)dealloc;
- (id)init;

@end

@interface TSpriteAnimationLayer : CALayer
{
    struct TNSRef<NSArray *> _images;
    double _framesPerSecond;
}

@property(nonatomic) double framesPerSecond; // @synthesize framesPerSecond=_framesPerSecond;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)stopAnimating;
- (void)startAnimating;
- (unsigned long long)frameCount;
- (void)setImages:(id)arg1;
- (id)init;

@end

@interface TAirDropPerson : TLayer
{
    struct TNSRef<NSImage *> _image;
    struct TNSRef<NSImage *> _pressedImage;
    struct TNSRef<CALayer *> _rippleLayer;
    struct TNSRef<CALayer *> _avatarLayer;
    struct TNSRef<CALayer *> _selectionLayer;
    struct TNSRef<TAirDropProgressLayer *> _progressLayer;
    BOOL _pressed;
    BOOL _selected;
    BOOL _inExitAnimation;
    BOOL _inEntranceAnimation;
}

@property(nonatomic) BOOL selected; // @synthesize selected=_selected;
@property(nonatomic) BOOL pressed; // @synthesize pressed=_pressed;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)performExitAnimation;
- (void)performShowAnimation;
- (void)performShowAnimationWithDelay:(double)arg1;
- (void)exitAnimationCompleted;
- (void)entranceAnimationCompleted;
- (void)selectionAnimationCompleted;
@property(nonatomic, getter=isProgressHidden) BOOL progressHidden; // @dynamic progressHidden;
@property(nonatomic) double percentComplete;
- (void)setTitleAndSubtitleFrame:(struct CGRect)arg1;
- (void)setImageFrame:(struct CGRect)arg1;
- (void)setImage:(id)arg1 pressedImage:(id)arg2;
- (void)setImage:(id)arg1 withAnimDuration:(double)arg2;
- (void)airDropPersonAnimationCompleted;
- (id)init;

@end

@interface TPropertyColumnPreviewKindController : TPropertyKindWithoutArchitectureController
{
}

- (void)initCommon;

@end

@interface TPropertyColumnPreviewSizeController : TPropertyInfoWindowSizeController
{
}

- (void)initCommon;

@end

@interface TPropertyColumnPreviewCreationDateController : TPropertyCreationDateController
{
}

- (void)initCommon;

@end

@interface TPropertyColumnPreviewModificationDateController : TPropertyModificationDateController
{
}

- (void)initCommon;

@end

@interface TPropertyColumnPreviewLastOpenedDateController : TPropertyLastOpenedDateController
{
}

- (void)initCommon;

@end

@interface TColumnPreviewSpotlightMetaDataController : TSpotlightMetaDataController
{
}

- (void)flush;
- (void)initCommon;

@end

@interface TColumnQLPreviewViewController : TQLPreviewViewController
{
}

+ (void)initialize;
- (void)adjustPreviewFrame;
- (void)finalize;
- (void)dealloc;
- (void)viewLoaded;

@end

@interface TColumnPreviewViewController : TInfoWindowViewController
{
    TQLPreviewViewController *_qlPreviewViewController;
}

- (void)targetNodesChanged;
- (void)targetNodesChanging;
- (void)setSubviewsHidden:(BOOL)arg1;
- (BOOL)expandedDefaultValue;
- (BOOL)expanded;
- (void)loadValueControllers;

@end

@interface TColumnPreviewInfoViewController : TInfoWindowViewController
{
    TPropertyNameController *_nameController;
    TPropertyColumnPreviewKindController *_kindController;
    TPropertyColumnPreviewSizeController *_sizeController;
    TPropertyColumnPreviewCreationDateController *_createDateController;
    TPropertyColumnPreviewModificationDateController *_modDateController;
    TPropertyColumnPreviewLastOpenedDateController *_lastOpenedDateController;
    TSpacerView *_versionSpacerView;
    TPropertyShortVersionController *_versionController;
    TSpacerView *_spotlightMetaDataSpacerView;
    TColumnPreviewSpotlightMetaDataController *_spotightMetaDataController;
    struct TNSRef<NSArray *> _titleFlds;
    double _leftMargin;
    double _titleAndTextGap;
    double _rightMargin;
    double _viewWidthCache;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)adjustTextFieldWidths;
- (void)nodeMDAttributeChanged:(const struct TFENode *)arg1 attributes:(id)arg2 isDisplayAttributes:(BOOL)arg3;
- (void)bulkNodesChanged:(const map_9a8e9377 *)arg1;
- (void)viewFrameChanged:(id)arg1;
- (void)refresh;
- (void)setNodes:(const struct TFENodeVector *)arg1;
- (void)setSubviewsHidden:(BOOL)arg1;
- (BOOL)expandedDefaultValue;
- (BOOL)expanded;
- (void)aboutToTearDown;
- (void)loadValueControllers;
- (void)viewLoaded;

@end

@interface TColumnPreviewController : TViewController <TCoalescingNodeObserverProtocol>
{
    TColumnPreviewViewController *_previewViewController;
    TColumnPreviewInfoViewController *_infoViewController;
    struct TNSRef<NSArray *> _viewControllers;
    struct TCoalescingNodeObserverCocoaBridge *_nodeObserver;
    struct TFENode _targetInfoNode;
    unsigned int _targetInfoNodeNotificationOptions;
}

+ (void)initialize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)nodeMDAttributeChanged:(const struct TFENode *)arg1 attributes:(id)arg2 isDisplayAttributes:(BOOL)arg3;
- (void)aliasesTargetChanged:(const struct TFENodeVector *)arg1;
- (void)nodesGoingAway:(const struct TFENodeVector *)arg1;
- (void)bulkNodesDeleted:(const map_6f5aee00 *)arg1;
- (void)bulkNodesChanged:(const map_9a8e9377 *)arg1;
- (void)viewDidMoveToSuperview;
- (void)setTargetInfoNode:(const struct TFENode *)arg1;
- (const struct TFENode *)targetInfoNode;
- (id)nibName;
- (void)viewLoaded;
- (void)finalize;
- (void)dealloc;
- (void)initCommon;

@end

@interface TGradientSeparator : NSBox
{
    struct TNSRef<NSColor *> _centerColor;
    struct TNSRef<NSColor *> _outerColor;
}

+ (struct CGSize)sizeForWidth:(double)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
@property(retain, nonatomic) NSColor *outerColor; // @dynamic outerColor;
@property(retain, nonatomic) NSColor *centerColor; // @dynamic centerColor;
- (void)awakeCommon;
- (void)initCommon;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TCoverWindow : NSWindow
{
    struct TNSRef<TLayer *> _rootLayer;
    struct TNSRef<CAContext *> _caContext;
    unsigned int _surfaceID;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setupRootLayer;
- (void)setRootLayer:(id)arg1;
@property(readonly, nonatomic) TLayer *rootLayer; // @dynamic rootLayer;
- (void)dealloc;
- (id)initWithFrame:(const struct CGRect *)arg1 backingType:(unsigned long long)arg2;

@end

@interface TPopoverSubviewData : NSObject
{
    struct TNSRef<TView *> _subview;
    struct TNSRef<TLayoutBinder *> _layoutBinder;
    struct TNSRef<TGradientSeparator *> _separator;
    struct TNSRef<TLayoutBinder *> _separatorLayoutBinder;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)removeSeparator;
- (void)addSeparator;
- (id)layoutBinder;
- (id)subview;
- (void)dealloc;
- (id)initWithSubview:(id)arg1;

@end

@interface TPopoverContentViewController : TViewController
{
    TPopoverController *_popoverController;
}

- (void)keyDown:(id)arg1;
- (void)performClose:(id)arg1;
- (id)initWithPopover:(id)arg1;

@end

@interface TPopoverController : NSObject <NSPopoverDelegate>
{
    struct TNSRef<TViewController *> _contentViewController;
    struct TNSRef<TLayoutBinder *> _contentViewLayoutBinder;
    struct TNSRef<TPopover *> _popover;
    struct TFENode _popoverTargetNode;
    long long _behavior;
    struct TNSRef<NSMutableArray *> _popoverSubviewDatas;
    TBrowserViewController *_browserViewController;
    BOOL _releasedWhenClosed;
}

@property(nonatomic) BOOL releasedWhenClosed; // @synthesize releasedWhenClosed=_releasedWhenClosed;
@property(readonly, nonatomic) struct TFENode targetNode; // @synthesize targetNode=_popoverTargetNode;
@property(nonatomic) TBrowserViewController *browserViewController; // @synthesize browserViewController=_browserViewController;
@property(nonatomic) long long behavior; // @synthesize behavior=_behavior;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)browserViewWillMoveToWindow:(id)arg1;
- (void)aboutToTearDownPopover;
- (void)popoverWillClose:(id)arg1;
- (void)closePopover;
- (void)updatePopoverPosition;
- (void)showPopoverRelativeToRect:(struct CGRect)arg1 relativeView:(id)arg2 preferredEdge:(unsigned long long)arg3;
- (void)showPopoverOverNode:(const struct TFENode *)arg1 browserViewController:(id)arg2 preferredEdge:(unsigned long long)arg3;
- (void)removeSubview:(id)arg1;
- (void)addSubview:(id)arg1;
- (void)setWidth:(double)arg1;
- (void)setPopoverTargetNode:(const struct TFENode *)arg1;
- (const struct TFENode *)popoverTargetNode;
@property(readonly, nonatomic) BOOL isShown; // @dynamic isShown;
@property(readonly, nonatomic) TPopover *popoverNoLoad; // @dynamic popoverNoLoad;
@property(readonly, nonatomic) TPopover *popover; // @dynamic popover;
- (void)dealloc;
- (id)init;
- (id)initWithWidth:(double)arg1;

@end

@interface TQueuedPopoverController : TPopoverController
{
    TThreadSafeQueue_fb0c9da1 *_queue;
    unsigned long long _preferredEdge;
}

- (void)aboutToTearDownPopover;
- (void)showPopoverOverNode:(const struct TFENode *)arg1 browserViewController:(id)arg2 preferredEdge:(unsigned long long)arg3;
- (void)closePopoverPriv;
- (void)showPopoverPriv;
- (id)initWithWidth:(double)arg1 andQueue:(TThreadSafeQueue_fb0c9da1 *)arg2;
- (id)initWithQueue:(TThreadSafeQueue_fb0c9da1 *)arg1;
- (id)init;

@end

@interface TAirDropProgressLayer : TLayer
{
    double _endAngle;
}

+ (BOOL)needsDisplayForKey:(id)arg1;
@property double endAngle; // @synthesize endAngle=_endAngle;
- (void)addBogusAnimationFor10834738;
- (void)drawInContext:(struct CGContext *)arg1;
@property(nonatomic) double percentComplete; // @dynamic percentComplete;
- (void)setEndAngleAnimated:(double)arg1;
- (id)initWithLayer:(id)arg1;
- (id)init;

@end

@interface TMeetingRoomProgressControllerRegistry : NSObject <TCoalescingNodeObserverProtocol>
{
    struct TNSRef<NSMutableArray *> _controllers;
    struct TCoalescingNodeObserverCocoaBridge *_nodeObserver;
    BOOL _isUserInMeetingRoom;
}

+ (unsigned long long)count;
+ (void)removeController:(id)arg1;
+ (BOOL)isPopoverShown;
+ (id)findControllerForNode:(const struct TFENode *)arg1;
+ (id)controllerForNode:(const struct TFENode *)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)findControllerForNodeLocked:(const struct TFENode *)arg1;
- (void)nodesAdded:(const struct TFENodeVector *)arg1 toObservedNode:(const struct TFENode *)arg2;
- (void)airDropAvailabilityChanged:(id)arg1;
- (void)userEnteredOrExitedMeetingRoom:(id)arg1;
- (void)setIsUserInMeetingRoom:(BOOL)arg1;
- (void)updateControllers;
- (void)callUpdateControllersAfterDelay;
- (void)dealloc;
- (id)init;

@end

@interface TMeetingRoomProgressController : NSObject
{
    struct TRecursiveMutex _lock;
    struct TFENode _targetNode;
    struct TNSRef<TQueuedPopoverController *> _popoverController;
    struct TNSRef<TAirDropPerson *> _airDropPerson;
    double _percentComplete;
    TBrowserViewController *_browserViewController;
    struct TNSRef<NSArrayController *> _allViewArrayController;
}

+ (void)unregisterProgressViewController:(id)arg1 forNode:(const struct TFENode *)arg2;
+ (void)registerProgressViewController:(id)arg1 forNode:(const struct TFENode *)arg2;
+ (void)startReceivingWithOperation:(struct __NWOperation *)arg1;
+ (void)startSendingNodes:(const struct TFENodeVector *)arg1 toReceiverNode:(const struct TFENode *)arg2;
+ (BOOL)isPopoverShownForNode:(const struct TFENode *)arg1;
+ (BOOL)isPopoverShown;
+ (BOOL)isProgressForNode:(const struct TFENode *)arg1;
+ (void)showPopoverTransientForNode:(const struct TFENode *)arg1;
@property(readonly) double percentComplete; // @synthesize percentComplete=_percentComplete;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)closeInlineProgress;
- (BOOL)shouldShowInlineProgress;
- (void)showInlineProgress;
- (void)aboutToTearDownPopover;
- (void)popoverWillClose:(id)arg1;
- (void)closePopover;
- (BOOL)shouldShowPopover:(char *)arg1;
- (BOOL)isPopoverShown;
- (void)showPopoverLocked:(BOOL)arg1;
- (void)showPopoverTransient;
- (void)showPopover;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)browserViewWillMoveToWindow:(id)arg1;
- (void)browserViewLayoutChanged;
@property(nonatomic) TBrowserViewController *browserViewController; // @dynamic browserViewController;
- (id)getOrOpenBrowserViewController;
- (void)removeProgressViewController:(id)arg1;
- (void)addProgressViewController:(id)arg1;
- (void)setTargetNode:(const struct TFENode *)arg1;
- (void)update;
- (struct TFENode)targetNode;
- (void)cancel;
- (void)aboutToTearDown;
- (void)dealloc;
- (id)initWithTargetNode:(const struct TFENode *)arg1;
- (id)init;

@end

@interface TSpotlightMetaDataGroupView : TView
{
    struct vector<std::__1::pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>>, std::__1::allocator<std::__1::pair<TNSRef<TTextField<TTextWithTitleFieldImplProtocol>*>, TNSRef<TLayoutBinder *>>>> _textWithTitleFields;
    struct TNSRef<NSDictionary *> _spotlightMetaData;
    double _interTextFieldYGap;
    BOOL _autoAdjustTitleWidths;
    BOOL _addLabelSuffix;
    BOOL _showAttributesWithNoData;
    TTextField<TTextWithTitleFieldImplProtocol> *_genericTextWithTitleField;
}

@property BOOL showAttributesWithNoData; // @synthesize showAttributesWithNoData=_showAttributesWithNoData;
@property double interTextFieldYGap; // @synthesize interTextFieldYGap=_interTextFieldYGap;
@property BOOL addLabelSuffix; // @synthesize addLabelSuffix=_addLabelSuffix;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct TString)recordingYearText:(id)arg1;
- (struct TString)exposureTimeText:(id)arg1;
- (struct TString)dimensionsText:(const struct TString *)arg1 height:(id)arg2;
- (id)objectForAttributeName:(const struct TString *)arg1;
- (struct TString)titleForAttributeName:(const struct TString *)arg1 withLabelSuffix:(BOOL)arg2;
- (id)bottomTextField;
- (void)clear;
- (void)reset;
- (void)populate;
- (void)adjustTitleWidths:(double)arg1 textWidths:(double)arg2;
- (void)adjustTitleWidths:(double)arg1;
- (void)getMaxTitleWith:(double *)arg1 maxTextWidth:(double *)arg2;
- (double)maxTitleWidth;
@property(retain, nonatomic) NSDictionary *spotlightMetaData; // @dynamic spotlightMetaData;
- (void)aboutToTearDown;
- (void)awakeFromNib;
- (void)initCommon;

@end

@interface TAirDropNoWiFiDelegate : NSObject <TAirDropNotAvailableDelegateProtocol>
{
}

- (void)actionButtonPressed:(id)arg1;
- (id)buttonTitle;
- (id)explanationText;

@end

@interface TAirDropCompToCompNetNotAllowedDelegate : NSObject <TAirDropNotAvailableDelegateProtocol>
{
}

- (void)actionButtonPressed:(id)arg1;
- (id)buttonTitle;
- (id)explanationText;

@end

@interface TAirDropWiFiAccessPointNotAllowedDelegate : NSObject <TAirDropNotAvailableDelegateProtocol>
{
}

- (void)actionButtonPressed:(id)arg1;
- (id)buttonTitle;
- (id)explanationText;

@end

@interface TAirDropNotAvailableView : TView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)initCommon;

@end

@interface TAirDropNotAvailableViewController : TViewController
{
    TView *_contentView;
    TImageView *_imageView;
    TTextField *_airDropTextFld;
    TTextField *_explanationTextFld;
    TButton *_actionButton;
    id <TAirDropNotAvailableDelegateProtocol> _delegate;
    double _topToImageViewGap;
    double _imageViewToAirDropTextGap;
    double _airDropTxtToExplanationTextGap;
    double _explanationTextToActionButtonGap;
    double _actionButtonToBottomGap;
    double _explanationTextMargin;
    long long _relayoutAnimationCount;
    double _viewHeightCache;
    struct CGSize _contentViewSizeCache;
    double _explanationTextFldHeightCache;
}

@property(retain) id <TAirDropNotAvailableDelegateProtocol> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void)explanationTextFldFrameChanged;
- (void)contentViewFrameChanged;
- (void)viewFrameChanged;
- (void)adjustContentViewHeightToFit;
- (void)manuallyLayoutContentView;
- (double)calcContentViewMaxHeight;
- (void)actionButtonPressed:(id)arg1;
@property(readonly, nonatomic) BOOL wiFiAccessPointNotAllowedMode; // @dynamic wiFiAccessPointNotAllowedMode;
@property(readonly, nonatomic) BOOL compToCompNotAllowedMode; // @dynamic compToCompNotAllowedMode;
@property(readonly, nonatomic) BOOL noWiFiMode; // @dynamic noWiFiMode;
- (id)nibName;
- (void)dealloc;
- (void)viewLoaded;
- (id)initForWiFiAccessPointNotAllowed;
- (id)initForCompToCompNotAllowed;
- (id)initForNoWiFi;

@end

@interface TAirDropLayoutController : NSObject <IKImageBrowserLayoutManagerDelegate>
{
    unsigned long long _itemCount;
    struct CGRect _frame;
    double _edgeMargin;
    double _bottomMargin;
    double _cellMargin;
    struct CGPoint _meLocation;
    struct CGRect _anchoredCellFrame;
    double _radius;
    BOOL _useArcLayout;
}

@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(readonly, nonatomic) BOOL useArcLayout; // @synthesize useArcLayout=_useArcLayout;
@property(nonatomic) struct CGRect anchoredCellFrame; // @synthesize anchoredCellFrame=_anchoredCellFrame;
@property(nonatomic) struct CGPoint meLocation; // @synthesize meLocation=_meLocation;
@property(nonatomic) double cellMargin; // @synthesize cellMargin=_cellMargin;
@property(nonatomic) double bottomMargin; // @synthesize bottomMargin=_bottomMargin;
@property(nonatomic) double edgeMargin; // @synthesize edgeMargin=_edgeMargin;
@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
@property(nonatomic) unsigned long long itemCount; // @synthesize itemCount=_itemCount;
- (id).cxx_construct;
- (CDStruct_c3b9c2ee)contentSize;
- (id)cellIndexesInRect:(CDStruct_90e2a262)arg1;
- (id)cellIndexesAtLocation:(CDStruct_c3b9c2ee)arg1;
- (CDStruct_90e2a262)cellFrameAtIndex:(unsigned long long)arg1;
- (struct CGPoint)airDropAnchorForIndex:(unsigned long long)arg1;
- (void)draw;
- (void)drawLayoutMetrics;
- (void)drawArcs;
- (void)drawCircles;
- (void)drawCellFrameAtIndex:(long long)arg1 forArcLayout:(BOOL)arg2;
@property(readonly, nonatomic) struct CGRect documentFrame;
@property(readonly, nonatomic) struct CGRect contentFrame;
- (struct CGRect)cellFrameAtIndex:(long long)arg1 forArcLayout:(BOOL)arg2;
- (struct CGPoint)cellAnchorPointAtIndex:(long long)arg1;
- (struct CGPoint)cellAnchorPointAtIndex:(long long)arg1 forArcLayout:(BOOL)arg2;
- (struct CGPoint)arcAnchorPointAtIndex:(long long)arg1;
- (long long)arcCount;
- (unsigned long long)cellsPerArcRow;
- (struct CGPoint)arcCenterPointAtIndex:(long long)arg1;
- (double)arcRadiusAtIndex:(long long)arg1;
- (double)yPositionAtX:(double)arg1 onArcWithCenter:(struct CGPoint)arg2 radius:(double)arg3;
- (struct CGPoint)circleAnchorPointAtIndex:(long long)arg1;
- (struct CGPoint)circlePositionAtAngle:(double)arg1 onCircleWithRadius:(double)arg2 andCenterPoint:(struct CGPoint)arg3;
- (long long)maxPeopleInCircleLayout;
- (struct CGPoint)circleCenterPointAtIndex:(long long)arg1;
- (double)circleRadiusAtIndex:(long long)arg1;
- (double)minCircleRadius;
- (double)maxCircleRadius;
@property(readonly, nonatomic) struct CGRect layoutFrame;
- (void)updateLayoutMode;
- (void)setUseArcLayout;
- (BOOL)shouldUseArcLayout;
- (id)init;

@end

@interface TInBrowserProgressController : NSObject
{
    struct unordered_map<TFENode, TProgressState, TFENodeHasher, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TProgressState>>> _nodesProgress;
}

+ (id)instance;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)nodeProgress:(const struct TFENode *)arg1 state:(int *)arg2 amount:(unsigned int *)arg3 cancellable:(char *)arg4;
- (BOOL)setupProgressForNode:(const struct TFENode *)arg1;
- (id)copyProgressImageForNode:(const struct TFENode *)arg1;
- (struct TString)progressStateForNode:(const struct TFENode *)arg1;
- (BOOL)updateNodeProgressState:(const struct TFENode *)arg1;
- (BOOL)updateNodeProgressForNode:(const struct TFENode *)arg1 withState:(id)arg2 andIcon:(const struct TIconRef *)arg3;
- (struct TIconRef)nodeProgressIcon:(const struct TFENode *)arg1;
- (id)nodeProgressState:(const struct TFENode *)arg1;

@end

@interface TInlineProgressBarLayer : TLayer
{
    double _percentComplete;
    int _state;
    BOOL _keepingAnimationAlive;
}

+ (BOOL)needsDisplayForKey:(id)arg1;
@property int state; // @synthesize state=_state;
@property double percentComplete; // @synthesize percentComplete=_percentComplete;
- (void)keepAnimationAlive;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)setPercentCompleteAnimated:(double)arg1;
- (id)initWithLayer:(id)arg1;
- (id)init;

@end

@interface TInlineCancelButtonLayer : TLayer
{
    BOOL _pressed;
}

@property(nonatomic) BOOL pressed; // @synthesize pressed=_pressed;
- (void)drawInContext:(struct CGContext *)arg1;
- (id)initWithLayer:(id)arg1;
- (id)init;

@end

@interface TInlineProgressHostLayer : TLayer
{
    struct TNSRef<TInlineProgressBarLayer *> _progressLayer;
    struct TNSRef<TInlineCancelButtonLayer *> _cancelLayer;
    struct CGRect _iconFrame;
    unsigned long long _animationCount;
    BOOL _cleanupWhenFinished;
}

@property(readonly, nonatomic) struct CGRect iconFrame; // @synthesize iconFrame=_iconFrame;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)animationDidStart:(id)arg1;
- (void)keepAnimationAlive;
- (void)completeAnimation;
- (BOOL)hitTestCancelLayer:(const struct CGPoint *)arg1;
- (void)setIconFrame:(const struct CGRect *)arg1 baselineOffset:(double)arg2;
@property(nonatomic) BOOL cancelIsPressed; // @dynamic cancelIsPressed;
@property(nonatomic) BOOL canCancel; // @dynamic canCancel;
- (void)_setCancelFrame:(struct CGRect)arg1;
- (void)_setProgressFrame:(struct CGRect)arg1;
@property(nonatomic) int state; // @dynamic state;
@property(nonatomic) double percentComplete; // @dynamic percentComplete;
- (void)_setPercentComplete:(double)arg1 animated:(BOOL)arg2;
- (id)initWithLayer:(id)arg1;
- (id)init;
- (id)initWithCancel:(BOOL)arg1 initialPercentComplete:(double)arg2;
- (void)removeCancelLayer;
- (void)addCancelLayer;
- (void)adjustCancelLayerFrame;

@end

@interface TEncryptionController : NSObject <DMAsyncDelegate>
{
    struct TRef<__DADisk *, TRetainReleasePolicy<DADiskRef>> _volumeDiskRef;
    struct TRef<__CFRunLoop *, TRetainReleasePolicy<CFRunLoopRef>> _runLoop;
    struct TNSRef<DMCoreStorage *> _coreStorageManager;
    struct TString _passwordUUID;
    struct TRef<dispatch_source_s *, TRetainReleasePolicy<dispatch_source_t>> _conversionProgressTimerSource;
    double _percentComplete;
    BOOL _inProgress;
    struct TMutex _lock;
}

+ (BOOL)isEncryptedVolume:(const struct TFENode *)arg1 inProgress:(char *)arg2;
+ (void)encryptDecryptVolumeCommon:(const struct TFENode *)arg1 password:(const struct TString *)arg2 hint:(const struct TString *)arg3 isEncrypt:(BOOL)arg4;
+ (void)decryptVolume:(const struct TFENode *)arg1 password:(const struct TString *)arg2;
+ (void)encryptVolume:(const struct TFENode *)arg1 password:(const struct TString *)arg2 hint:(const struct TString *)arg3;
@property double percentComplete; // @synthesize percentComplete=_percentComplete;
@property BOOL inProgress; // @synthesize inProgress=_inProgress;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)dmAsyncFinishedForDisk:(struct __DADisk *)arg1 mainError:(int)arg2 detailError:(int)arg3 dictionary:(id)arg4;
- (void)dmAsyncProgressForDisk:(struct __DADisk *)arg1 barberPole:(BOOL)arg2 percent:(float)arg3;
- (void)dmAsyncMessageForDisk:(struct __DADisk *)arg1 string:(id)arg2 dictionary:(id)arg3;
- (void)dmAsyncStartedForDisk:(struct __DADisk *)arg1;
- (int)encryptDecryptVolumeCommon:(const struct TFENode *)arg1 volumeDiskRef:(struct __DADisk *)arg2 password:(const struct TString *)arg3 hint:(const struct TString *)arg4 isEncrypt:(BOOL)arg5;
- (void)_cancelConversionProgressTimerSource;
- (void)_startConversionProgressTimerSource;
- (id)_coreStorageManager;
- (void)clearPasswordUUID;
- (void)setVolumeDiskRef:(struct __DADisk *)arg1;
- (struct __DADisk *)volumeDiskRef;
- (void)dealloc;
- (id)init;

@end

@interface TBaseEncryptionPasswordViewController : TViewController <NSTextFieldDelegate>
{
    TSecureTextField *_passwordFld;
    struct TFENode _volumeNode;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)helpButtonPressed:(id)arg1;
- (void)cancelButtonPressed:(id)arg1;
- (void)okButtonPressed:(id)arg1;
- (void)closeWindow;
- (void)controlTextDidChange:(id)arg1;
@property(readonly, nonatomic) BOOL okButtonShouldBeEnabled; // @dynamic okButtonShouldBeEnabled;
- (void)setVolumeNode:(const struct TFENode *)arg1;

@end

@interface TEncryptionPasswordViewController : TBaseEncryptionPasswordViewController
{
    TTextField *_instructionsFld;
    TTextField *_warningFld;
    TSecureTextField *_verifyPasswordFld;
    TEditTextField *_hintFld;
    SFPasswordAssistantInspectorController *_passwordAssistantInspectorController;
    BOOL _showPasswordMissmatchText;
    BOOL _showPasswordAndHintMatchText;
}

@property(readonly, nonatomic) BOOL showPasswordAndHintMatchText; // @synthesize showPasswordAndHintMatchText=_showPasswordAndHintMatchText;
@property(readonly, nonatomic) BOOL showPasswordMissmatchText; // @synthesize showPasswordMissmatchText=_showPasswordMissmatchText;
- (void)closeWindow;
- (void)okButtonPressed:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)setShowPasswordAndHintMatchText:(BOOL)arg1;
- (void)setShowPasswordMissmatchText:(BOOL)arg1;
- (BOOL)okButtonShouldBeEnabled;
- (void)setVolumeNode:(const struct TFENode *)arg1;

@end

@interface TDecryptionPasswordViewController : TBaseEncryptionPasswordViewController
{
    TTextField *_instructionsFld;
}

- (void)okButtonPressed:(id)arg1;
- (void)setVolumeNode:(const struct TFENode *)arg1;

@end

@interface TSecureTextField : NSSecureTextField
{
}

- (void)awakeCommon;
- (void)initCommon;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface TEncryptionPasswordSheetController : NSWindowController <NSWindowDelegate>
{
    struct TNSRef<NSWindow *> _parentWindow;
    struct TFENode _volumeNode;
    TBaseEncryptionPasswordViewController *_viewController;
}

+ (BOOL)showingForVolumeNode:(const struct TFENode *)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)windowWillClose:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)close;
- (void)showWindow:(id)arg1;
- (void)windowDidLoad;
- (id)initWithParentWindow:(id)arg1 volumeNode:(const struct TFENode *)arg2 forEncryption:(BOOL)arg3;

@end

@interface TInlinePreviewData : NSObject <NSCopying>
{
    struct TNSRef<NSDictionary *> _clientProperties;
    unsigned short _contentRect[4];
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setClientProperties:(id)arg1;
- (id)clientProperties;
- (void)setContentRect:(const struct CGRect *)arg1;
- (struct CGRect)contentRect;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface TThumbnailImageRep : NSBitmapImageRep
{
    double _scaleFactor;
    struct TNSRef<TInlinePreviewData *> _inlinePreviewData;
}

@property(readonly) double scaleFactor; // @synthesize scaleFactor=_scaleFactor;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain) NSDictionary *clientProperties; // @dynamic clientProperties;
@property struct CGRect contentRect; // @dynamic contentRect;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithCIImage:(id)arg1;
- (id)initWithCGImage:(struct CGImage *)arg1;
- (id)initWithBitmapDataPlanes:(char **)arg1 pixelsWide:(long long)arg2 pixelsHigh:(long long)arg3 bitsPerSample:(long long)arg4 samplesPerPixel:(long long)arg5 hasAlpha:(BOOL)arg6 isPlanar:(BOOL)arg7 colorSpaceName:(id)arg8 bitmapFormat:(unsigned long long)arg9 bytesPerRow:(long long)arg10 bitsPerPixel:(long long)arg11;
- (id)initWithBitmapDataPlanes:(char **)arg1 pixelsWide:(long long)arg2 pixelsHigh:(long long)arg3 bitsPerSample:(long long)arg4 samplesPerPixel:(long long)arg5 hasAlpha:(BOOL)arg6 isPlanar:(BOOL)arg7 colorSpaceName:(id)arg8 bytesPerRow:(long long)arg9:(long long)arg10;
- (id)initWithFocusedViewRect:(struct CGRect)arg1;
- (id)initWithCGImage:(struct CGImage *)arg1 scaleFactor:(double)arg2;

@end

@interface TPromiseDragReceiver : NSObject <TCoalescingNodeObserverProtocol>
{
    id _promiseDragCompletionCallback;
    struct TCoalescingNodeObserverCocoaBridge *_nodeObserver;
    struct TFENode _dropTargetNode;
    struct TStringVector _rawNamesOfPendingPromisedNodes;
    struct TFENodeVector _pendingPromisedNodes;
    struct TMutex fPendingPromisedNodesLock;
    struct TConditionVariable fPendingPromisedNodesConditional;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)nodesAdded:(const struct TFENodeVector *)arg1 toObservedNode:(const struct TFENode *)arg2;
- (void)openSyncCompleted:(const struct TFENode *)arg1;
- (void)waitForPromisedNodesAsync;
- (void)receivePromiseDrag:(struct TDropOperation *)arg1 completionCallback:(id)arg2;
- (void)dealloc;
- (id)initWithDropTargetNode:(const struct TFENode *)arg1;
- (id)init;

@end

@interface TShareToolbarItem : TToolbarItem <NSMenuDelegate>
{
}

- (void)validate;
- (void)setEnabled:(BOOL)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (id)initWithItemIdentifier:(id)arg1 entry:(const struct ToolbarItemInfo *)arg2 controller:(id)arg3 propertyList:(id)arg4 willBeInsertedIntoToolbar:(BOOL)arg5;

@end

@interface TLayer : CALayer
{
}

- (void)replaceSublayer:(id)arg1 with:(id)arg2;
- (void)insertSublayer:(id)arg1 above:(id)arg2;
- (void)insertSublayer:(id)arg1 below:(id)arg2;
- (void)insertSublayer:(id)arg1 atIndex:(unsigned int)arg2;
- (void)addSublayer:(id)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setContentsScale:(double)arg1;
- (void)updateContentsScale:(double)arg1 forSublayer:(id)arg2;

@end

@interface TCommandValidation : NSObject
{
}

+ (BOOL)performIfValidated:(SEL)arg1 target:(id)arg2;
+ (BOOL)validateCommand:(SEL)arg1 forTarget:(id)arg2;
+ (BOOL)validateMenuItem:(id)arg1 forTarget:(id)arg2;
+ (BOOL)validateUserInterfaceItem:(id)arg1 forTarget:(id)arg2;

@end

@interface TCommandKeyValidatedItem : NSObject <NSValidatedUserInterfaceItem>
{
    SEL _action;
    long long _tag;
}

- (long long)tag;
- (SEL)action;
- (id)initWithAction:(SEL)arg1 andTag:(long long)arg2;

@end

@interface TListRowView : NSTableRowView
{
    struct TFENode _node;
    TListViewController *_listViewController;
}

@property(nonatomic) TListViewController *listViewController; // @synthesize listViewController=_listViewController;
@property(nonatomic) struct TFENode node; // @synthesize node=_node;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface TListGroupTitleView : NSTableRowView
{
    TListGroupTitleViewController *_titleViewController;
    TTextField *_groupName;
    struct TFENode _node;
    NSMutableArray *_columnHeaders;
    double _floatingHeaderY;
    BOOL _updatingColumnHeaders;
}

@property(nonatomic) double floatingHeaderY; // @synthesize floatingHeaderY=_floatingHeaderY;
@property(readonly, nonatomic) struct TFENode node; // @synthesize node=_node;
@property(readonly, nonatomic) TListGroupTitleViewController *titleViewController; // @synthesize titleViewController=_titleViewController;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)updateVisibilityOfHeaders;
- (void)showColumnHeaders:(BOOL)arg1;
- (void)updateColumnHeaders;
- (void)configureWithNode:(struct TFENode)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setFloating:(BOOL)arg1;
- (void)finalize;
- (void)dealloc;

@end

@interface TListGroupTitleViewController : TViewController
{
    TTextField *_groupName;
    NSTextField *_moreTextField;
    NSButton *_moreButton;
    TListViewController *_listViewController;
    struct TFENode _node;
    BOOL _condensed;
}

@property(readonly, nonatomic) TTextField *groupName; // @synthesize groupName=_groupName;
@property(readonly, nonatomic) NSTextField *moreTextField; // @synthesize moreTextField=_moreTextField;
@property(readonly, nonatomic) NSButton *moreButton; // @synthesize moreButton=_moreButton;
@property(readonly, nonatomic) struct TFENode node; // @synthesize node=_node;
@property(nonatomic) BOOL condensed; // @synthesize condensed=_condensed;
@property(readonly, nonatomic) TListViewController *listViewController; // @synthesize listViewController=_listViewController;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)awakeFromNib;
- (void)toggleCondensedView;
- (void)adjustMoreLessString;
@property(readonly, nonatomic) NSColor *groupNameTextColor;
@property(readonly, nonatomic) NSString *groupFontName;
@property(readonly, nonatomic) TListGroupTitleView *titleView; // @dynamic titleView;
- (void)aboutToTearDown;
- (id)initWithNode:(struct TFENode)arg1 listViewController:(id)arg2;

// Remaining properties
@property(nonatomic) double textSize; // @dynamic textSize;

@end

@interface TiWorkFileProvider : NSObject <NSFileProvider>
{
    struct TNSRef<NSOperationQueue *> _queue;
    struct TNSRef<NSURL *> _originalItem;
    struct TNSRef<NSURL *> _conversionDirectory;
    struct TString _convertedName;
    struct TNSRef<NSURL *> _convertedItem;
    BOOL _converted;
}

+ (id)convertiWorkDocument:(id)arg1;
+ (int)convertiWorkDocument:(id)arg1 destination:(id)arg2 withName:(id)arg3;
+ (struct TFENode)makeUniqueTempDirectoryWithSeed:(long long)arg1;
+ (id)providerForiWorkDocument:(struct TFENode)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_provideItemAtURL:(id)arg1 toReaderWithID:(id)arg2 completionHandler:(id)arg3;
- (void)_cancelProvidingItemAtURL:(id)arg1 toReaderWithID:(id)arg2;
- (void)_provideItemAtURL:(id)arg1 completionHandler:(id)arg2;
@property(readonly) NSOperationQueue *_providedItemsOperationQueue;
@property(readonly) NSURL *_providedItemsURL;
- (void)autoUnregister;
- (void)unregister;
- (void)register;
- (id)initWithNode:(struct TFENode)arg1;

// Remaining properties
@property(readonly) NSString *_fileReactorID;

@end

@interface NSCell (NSCellAdditions)
- (BOOL)acceptsFirstMouseFE:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
@end

@interface NSControl (NSControlAdditions)
- (void)setUserInterfaceLayoutDirectionFE:(long long)arg1;
- (long long)userInterfaceLayoutDirectionFE;
@end

@interface NSEvent (NSEventAdditions)
+ (long long)realKeyModifiers;
@end

@interface NSImage (NSImageAdditions)
+ (void)drawBorderImage:(id)arg1 middleImage:(id)arg2 borderImage:(id)arg3 inRect:(struct CGRect)arg4 withOrientation:(unsigned long long)arg5 flipped:(BOOL)arg6 operation:(unsigned long long)arg7 fraction:(double)arg8;
+ (id)imageWithName:(id)arg1;
- (void)drawInRectFE:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 respectFlipped:(BOOL)arg3 drawDisabled:(BOOL)arg4;
- (struct CGImage *)createCGImageForProposedRect:(struct CGRect *)arg1 context:(id)arg2 hints:(id)arg3;
- (struct CGImage *)createCGImageRef;
- (id)initFromLegacyResourceFork:(unsigned int)arg1 identifier:(long long)arg2 offset:(long long)arg3;
- (id)initWithvRefNum:(short)arg1 creator:(unsigned int)arg2 iconType:(unsigned int)arg3;
- (id)initWithCGImageRef:(struct CGImage *)arg1;
@end

@interface NSLabelView (NSLabelViewAdditions)
@property unsigned long long labelValueFE; // @dynamic labelValueFE;
@property unsigned long long diskLabelValuesFE; // @dynamic diskLabelValuesFE;
@property(readonly) unsigned long long numPartsFE; // @dynamic numPartsFE;
@end

@interface NSString (NSStringAdditions)
+ (id)stringWithArrayOfStrings:(id)arg1 separator:(id)arg2;
- (BOOL)validateAllCharactersWithCharacterSet:(id)arg1;
- (long long)caseInsensitiveSystemLocaleCompare:(id)arg1;
- (long long)caseSensitiveSystemLocaleCompare:(id)arg1;
- (void)drawEtchedInRect:(struct CGRect)arg1 withAttributes:(id)arg2;
@end

@interface NSTableView (NSTableViewAdditions)
- (struct CGSize)itemClickOffset:(id)arg1;
- (id)finderPreparedCell:(id)arg1 atColumn:(long long)arg2 row:(long long)arg3;
- (struct CGRect)maxSTFEditorFrameFromTitleFrame:(struct CGRect)arg1;
- (void)scrollSTFEditorIntoView;
- (void)finishEditing:(id)arg1;
- (void)reloadEditRow:(id)arg1;
- (BOOL)setUpToEditRow:(unsigned long long)arg1 column:(unsigned long long)arg2;
@property(readonly) TTableViewShrinkToFitController *stfEditorController; // @dynamic stfEditorController;
@end

@interface NSTableColumn (NSTableColumnAdditions)
- (id)copyColumn;
@end

@interface NSView (NSViewAdditions)
- (void)dragWithPasteboard:(id)arg1 event:(id)arg2 nodes:(const struct TFENodeVector *)arg3 itemBoundsMap:(const map_c5101478 *)arg4 image:(id)arg5 offset:(const struct CGSize *)arg6 source:(id)arg7;
- (void)dragWithPasteboard:(id)arg1 event:(id)arg2 initialTargetContainer:(const struct TFENode *)arg3 nodes:(const struct TFENodeVector *)arg4 itemBoundsMap:(const map_c5101478 *)arg5 itemAnchorsMap:(const map_0cdea9df *)arg6 image:(id)arg7 offset:(const struct CGSize *)arg8 source:(id)arg9;
- (void)dragWithPasteboard:(id)arg1 event:(id)arg2 nodes:(const struct TFENodeVector *)arg3 image:(id)arg4 offset:(const struct CGSize *)arg5 source:(id)arg6;
- (void)dragWithPasteboardCommon:(id)arg1 event:(id)arg2 initialTargetContainer:(const struct TFENode *)arg3 nodes:(const struct TFENodeVector *)arg4 itemBoundsMap:(const map_c5101478 *)arg5 itemAnchorsMap:(const map_0cdea9df *)arg6 image:(id)arg7 offset:(struct CGSize)arg8 source:(id)arg9;
- (void)dragWithPasteboardCommon:(id)arg1 event:(id)arg2 localMouseDownLocation:(struct CGPoint)arg3 initialTargetContainer:(const struct TFENode *)arg4 nodes:(const struct TFENodeVector *)arg5 itemBoundsMap:(const map_c5101478 *)arg6 itemAnchorsMap:(const map_0cdea9df *)arg7 image:(id)arg8 offset:(struct CGSize)arg9 source:(id)arg10;
- (void)setFrameHeight:(double)arg1;
- (double)frameHeight;
- (void)setFrameWidth:(double)arg1;
- (double)frameWidth;
- (void)flipAutoresizingMask;
- (struct CGPoint)flipPoint:(const struct CGPoint *)arg1;
- (void)flipFrameOrigin;
- (void)flipSubviews;
- (struct CGPoint)convertPointFromScreen:(const struct CGPoint *)arg1 flipped:(BOOL)arg2;
- (struct CGPoint)convertPointToScreen:(const struct CGPoint *)arg1 flipped:(BOOL)arg2;
- (struct CGRect)convertRectFromScreenFE:(const struct CGRect *)arg1 flipped:(BOOL)arg2;
- (struct CGRect)convertRectToScreenFE:(const struct CGRect *)arg1 flipped:(BOOL)arg2;
- (struct CGSize)convertSizeFromScreen:(const struct CGSize *)arg1;
- (struct CGSize)convertSizeToScreen:(const struct CGSize *)arg1;
- (struct CGPoint)convertPointFromScreen:(const struct CGPoint *)arg1;
- (struct CGPoint)convertPointToScreen:(const struct CGPoint *)arg1;
- (struct CGRect)convertRectFromScreenFE:(const struct CGRect *)arg1;
- (struct CGRect)convertRectToScreenFE:(const struct CGRect *)arg1;
@end

@interface NSWindow (NSWindowAdditions)
- (void)centerInPrimaryScreen;
- (id)rootView;
- (struct CGRect)titleBarFrame;
- (BOOL)isDesktopWindow;
@end

@interface NSObject (NSObjectAdditions)
- (void)finderPerformSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3;
- (void)setBindingsFrom:(id)arg1;
@end

@interface IKImageBrowserCell (InlineProgress)
- (BOOL)hitTestCancelButton:(const struct CGPoint *)arg1;
@end

@interface FINode (FINodeAdditions) <QLPreviewItem, IKImageBrowserDatasourceItemPrivate>
- (id)copyImageRepresentation:(id *)arg1 options:(id)arg2;
- (id)IKImageRepresentationWithType:(id)arg1;
- (struct OpaqueIconRef *)createAlternativeIconRepresentationWithOptions:(id)arg1;
- (BOOL)isDimmed;
- (struct __CFDictionary *)quickLookThumbnailOptions;
- (id)imageLabel;
- (id)imageSubtitle;
- (id)imageTitle;
- (id)imageRepresentationType;
- (id)imageUID;
- (id)imageUIDForViewIdentifier:(id)arg1;
- (id)imageRepresentationTypeForViewIdentifier:(id)arg1;
- (BOOL)isInIconView;
- (struct CGImage *)createImageForMaximumSize:(struct CGSize)arg1 options:(struct __CFDictionary *)arg2;
- (id)previewItemLocalizedDescription;
- (id)previewItemDisplayName;
@property(readonly) NSString *previewItemTitle;
@property(readonly) NSURL *previewItemURL;
- (id)size:(BOOL)arg1;
- (struct TFENode)feNodeFollowingAliasChainAsyncWithTarget:(id)arg1 okToLogin:(BOOL)arg2 tryToFixIfBroken:(BOOL)arg3;

// Remaining properties
@property(readonly) id previewItemDisplayState;
@end

@interface FINode (ListView_Additions)
- (id)dataForIdentifier:(id)arg1 fromDataSource:(id)arg2;
@end

@interface NSDate (Additions)
+ (id)dateWithUTCDateTime:(const struct UTCDateTime *)arg1;
+ (id)tomorrow;
+ (id)today;
+ (id)yesterday;
+ (struct TCachedRelativeDates *)cachedRelativeDates;
+ (void)recomputeCachedRelativeDates;
+ (struct TMutex *)cachedRelativeDateLock;
+ (void)computeTodayYesterdayAndTomorrow:(struct TCachedRelativeDates *)arg1;
+ (id)midnightJan1st1904;
- (struct UTCDateTime)utcDateTime;
- (BOOL)isYesterday;
- (BOOL)isToday;
@end

@interface NSPopUpButton (NSPopUpButtonAdditions)
- (void)removeItems:(id)arg1;
- (void)removeItem:(id)arg1;
- (id)itemWithRepresentedObject:(id)arg1;
- (id)itemWithTagFE:(long long)arg1;
@end

@interface NSArray (NSArrayAdditions)
+ (id)FINodesFromFENodeVector:(const struct TFENodeVector *)arg1;
- (id)dictionaryAtIndex:(unsigned long long)arg1;
- (id)arrayAtIndex:(unsigned long long)arg1;
- (id)dataAtIndex:(unsigned long long)arg1;
- (id)urlAtIndex:(unsigned long long)arg1;
- (id)stringAtIndex:(unsigned long long)arg1 defaultValue:(id)arg2;
- (id)stringAtIndex:(unsigned long long)arg1;
- (struct CGRect)rectAtIndex:(unsigned long long)arg1 defaultValue:(const struct CGRect *)arg2;
- (struct CGRect)rectAtIndex:(unsigned long long)arg1;
- (struct CGPoint)pointAtIndex:(unsigned long long)arg1 defaultValue:(const struct CGPoint *)arg2;
- (struct CGPoint)pointAtIndex:(unsigned long long)arg1;
- (unsigned int)fourCharCodeAtIndex:(unsigned long long)arg1 defaultValue:(unsigned int)arg2;
- (unsigned int)fourCharCodeAtIndex:(unsigned long long)arg1;
- (long long)sint64AtIndex:(unsigned long long)arg1 defaultValue:(long long)arg2;
- (long long)sint64AtIndex:(unsigned long long)arg1;
- (long long)integerAtIndex:(unsigned long long)arg1 defaultValue:(long long)arg2;
- (long long)integerAtIndex:(unsigned long long)arg1;
- (double)doubleAtIndex:(unsigned long long)arg1 defaultValue:(double)arg2;
- (double)doubleAtIndex:(unsigned long long)arg1;
- (double)cgFloatAtIndex:(unsigned long long)arg1 defaultValue:(double)arg2;
- (double)cgFloatAtIndex:(unsigned long long)arg1;
- (BOOL)boolAtIndex:(unsigned long long)arg1 defaultValue:(BOOL)arg2;
- (BOOL)boolAtIndex:(unsigned long long)arg1;
- (id)reverseFE;
- (id)mutableCopyDeepFE;
- (id)copyDeepFE;
- (id)copyDeepCommonFE:(BOOL)arg1;
@end

@interface NSMutableArray (NSMutableArrayAddtions)
- (void)insertDictionary:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addDictionary:(id)arg1;
- (void)insertArray:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addArray:(id)arg1;
- (void)insertData:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addData:(id)arg1;
- (void)insertURLFE:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addURL:(id)arg1;
- (void)insertString:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addString:(id)arg1;
- (void)insertRect:(const struct CGRect *)arg1 atIndex:(unsigned long long)arg2;
- (void)addRect:(const struct CGRect *)arg1;
- (void)insertPoint:(const struct CGPoint *)arg1 atIndex:(unsigned long long)arg2;
- (void)addPoint:(const struct CGPoint *)arg1;
- (void)insertFourCharCode:(unsigned int)arg1 atIndex:(unsigned long long)arg2;
- (void)addFourCharCode:(unsigned int)arg1;
- (void)insertSInt64:(long long)arg1 atIndex:(unsigned long long)arg2;
- (void)addSInt64:(long long)arg1;
- (void)insertInteger:(long long)arg1 atIndex:(unsigned long long)arg2;
- (void)addInteger:(long long)arg1;
- (void)insertDouble:(double)arg1 atIndex:(unsigned long long)arg2;
- (void)addDouble:(double)arg1;
- (void)insertCGFloat:(double)arg1 atIndex:(unsigned long long)arg2;
- (void)addCGFloat:(double)arg1;
- (void)insertBool:(BOOL)arg1 atIndex:(unsigned long long)arg2;
- (void)addBool:(BOOL)arg1;
@end

@interface NSDictionary (NSDictionaryAdditions)
- (id)dictionaryForKeyFE:(id)arg1;
- (id)arrayForKeyFE:(id)arg1 defaultValue:(id)arg2;
- (id)arrayForKeyFE:(id)arg1;
- (id)dataForKeyFE:(id)arg1;
- (id)numberForKeyFE:(id)arg1;
- (id)stringForKeyFE:(id)arg1 defaultValue:(id)arg2;
- (id)stringForKeyFE:(id)arg1;
- (struct CGRect)rectForKeyFE:(id)arg1 defaultValue:(const struct CGRect *)arg2;
- (struct CGRect)rectForKeyFE:(id)arg1;
- (struct CGPoint)pointForKeyFE:(id)arg1 defaultValue:(const struct CGPoint *)arg2;
- (struct CGPoint)pointForKeyFE:(id)arg1;
- (struct CGSize)sizeForKeyFE:(id)arg1 defaultValue:(const struct CGSize *)arg2;
- (struct CGSize)sizeForKeyFE:(id)arg1;
- (unsigned int)fourCharCodeForKeyFE:(id)arg1 defaultValue:(unsigned int)arg2;
- (unsigned int)fourCharCodeForKeyFE:(id)arg1;
- (long long)sint64ForKeyFE:(id)arg1 defaultValue:(long long)arg2;
- (long long)sint64ForKeyFE:(id)arg1;
- (long long)integerForKeyFE:(id)arg1 defaultValue:(long long)arg2;
- (long long)integerForKeyFE:(id)arg1;
- (double)doubleForKeyFE:(id)arg1 defaultValue:(double)arg2;
- (double)doubleForKeyFE:(id)arg1;
- (double)cgFloatForKeyFE:(id)arg1 defaultValue:(double)arg2;
- (double)cgFloatForKeyFE:(id)arg1;
- (BOOL)boolForKeyFE:(id)arg1 defaultValue:(BOOL)arg2;
- (BOOL)boolForKeyFE:(id)arg1;
- (BOOL)keyExistsFE:(id)arg1;
- (id)mutableCopyDeepFE;
- (id)copyDeepFE;
- (id)copyDeepCommonFE:(BOOL)arg1;
- (id)initWithObjectFE:(id)arg1 forKey:(id)arg2;
@end

@interface NSMutableDictionary (NSMutableDictionaryAddtions)
- (void)setDictionaryFE:(id)arg1 forKey:(id)arg2;
- (void)setArrayFE:(id)arg1 forKey:(id)arg2;
- (void)setDataFE:(id)arg1 forKey:(id)arg2;
- (void)setNumberFE:(id)arg1 forKey:(id)arg2;
- (void)setStringFE:(id)arg1 forKey:(id)arg2;
- (void)setRectFE:(const struct CGRect *)arg1 forKey:(id)arg2;
- (void)setPointFE:(const struct CGPoint *)arg1 forKey:(id)arg2;
- (void)setSizeFE:(const struct CGSize *)arg1 forKey:(id)arg2;
- (void)setFourCharCodeFE:(unsigned int)arg1 forKey:(id)arg2;
- (void)setSInt64FE:(long long)arg1 forKey:(id)arg2;
- (void)setIntegerFE:(long long)arg1 forKey:(id)arg2;
- (void)setDoubleFE:(double)arg1 forKey:(id)arg2;
- (void)setCGFloatFE:(double)arg1 forKey:(id)arg2;
- (void)setBoolFE:(BOOL)arg1 forKey:(id)arg2;
@end

@interface NSSet (NSSetAdditions)
- (id)mutableCopyDeepFE;
- (id)copyDeepFE;
- (id)copyDeepCommonFE:(BOOL)arg1;
@end

@interface NSApplication (NSApplicationAdditions)
- (void)endPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
@end

@interface NSDateFormatter (Additions)
- (id)stringFromDateWithValidation:(id)arg1;
@end

@interface NSTreeNode (Additions)
- (id)flattenedDescendantObjects;
- (id)flattenedDescendantNodes;
- (id)flattenedDescendants:(BOOL)arg1;
@end

@interface NSTreeController (Additions)
- (id)nodesInPath:(id)arg1;
@end

@interface NSSavePanel (Additions)
- (void)panelDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)runWithParentWindow:(id)arg1;
- (void)setOptions:(int)arg1;
- (void)setCancel:(id)arg1;
@end

@interface NSOpenPanel (Additions)
- (void)setOptions:(int)arg1;
@end

@interface DMManager (DMManagerAdditions)
+ (id)managerForThread;
- (BOOL)isConversionInProgress:(struct __DADisk *)arg1 percentComplete:(id *)arg2 outError:(int *)arg3;
- (BOOL)isEncryptedDisk:(struct __DADisk *)arg1;
- (BOOL)isCoreStorageDisk:(struct __DADisk *)arg1;
- (struct __DADisk *)copyDiskForNode:(const struct TFENode *)arg1 outError:(int *)arg2;
- (struct TFENode)nodeForDisk:(struct __DADisk *)arg1 outError:(int *)arg2;
- (void)cleanUp;
@end

